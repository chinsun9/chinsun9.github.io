<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Sun, 09 Jan 2022 17:01:42 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>202112-search-performance-report</title>
      <link>https://chinsun9.github.io/2022/01/10/202112-search-performance-report/</link>
      <guid>https://chinsun9.github.io/2022/01/10/202112-search-performance-report/</guid>
      <pubDate>Sun, 09 Jan 2022 17:01:42 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202112-search-performance-report20220109/preview.png&quot; alt</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202112-search-performance-report20220109/preview.png" alt=" "></p>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2022/01/10/202112-search-performance-report/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>로컬에서 vscode live server로 spa 실행하기</title>
      <link>https://chinsun9.github.io/2022/01/09/live-server-for-react-spa/</link>
      <guid>https://chinsun9.github.io/2022/01/09/live-server-for-react-spa/</guid>
      <pubDate>Sun, 09 Jan 2022 05:55:38 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/live-server-for-react-spa20220108/preview.png&quot; alt=&quot; &quot;&gt;&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/live-server-for-react-spa20220108/preview.png" alt=" "></p><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>live server로 리액트 빌드 결과를 실행해보고 싶었다</li><li>github pages로 호스팅하기 때문에 basePath?가 있었다</li><li>live server에서 일단 로컬로 실행해보고 싶었는데,</li><li>basePath와 spa를 어떻게 실행해 볼 수 있을까?</li></ul><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><figure class="highlight json"><figcaption><span>.vscode\settings.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .vscode\settings.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;liveServer.settings.mount&quot;</span>: [[<span class="string">&quot;/go-home-time&quot;</span>, <span class="string">&quot;./&quot;</span>]], <span class="comment">// package.json에 homepage필드가 있는 경우</span></span><br><span class="line">  <span class="attr">&quot;liveServer.settings.file&quot;</span>: <span class="string">&quot;index.html&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/ritwickdey/vscode-live-server/blob/master/docs/settings.md">https://github.com/ritwickdey/vscode-live-server/blob/master/docs/settings.md</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/live-server/">live server</category>
      
      
      <comments>https://chinsun9.github.io/2022/01/09/live-server-for-react-spa/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>URLSearchParams location.search 파싱하기</title>
      <link>https://chinsun9.github.io/2022/01/08/web-api-URLSearchParams/</link>
      <guid>https://chinsun9.github.io/2022/01/08/web-api-URLSearchParams/</guid>
      <pubDate>Sat, 08 Jan 2022 02:55:02 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;figcaption&gt;&lt;span&gt;example&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><figcaption><span>example</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getPageNumber = <span class="function">() =&gt;</span> <span class="keyword">new</span> URLSearchParams(location.search).get(<span class="string">&#x27;p&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>example.com/hello/world?p=1</p></blockquote><p>이런 url이 있을 때 param <code>p</code>를 꺼내볼 수 있다</p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Location/search">https://developer.mozilla.org/en-US/docs/Web/API/Location/search</a></li><li><a href="https://developer.mozilla.org/ko/docs/Web/API/URLSearchParams">https://developer.mozilla.org/ko/docs/Web/API/URLSearchParams</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/web-api/">web api</category>
      
      <category domain="https://chinsun9.github.io/tags/URLSearchParams/">URLSearchParams</category>
      
      
      <comments>https://chinsun9.github.io/2022/01/08/web-api-URLSearchParams/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>js template literals</title>
      <link>https://chinsun9.github.io/2022/01/07/js-template-literals/</link>
      <guid>https://chinsun9.github.io/2022/01/07/js-template-literals/</guid>
      <pubDate>Fri, 07 Jan 2022 13:53:33 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wow</span>(<span class="params">strings, ...values</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(strings);</span><br><span class="line">  <span class="built_in">console</span>.log(values);</span><br><span class="line">  <span class="comment">// [&quot;안녕하세요. 제 이름은&quot;, &quot;입니다.&quot;, &quot;&quot;]</span></span><br><span class="line">  <span class="comment">// [&#x27;친성&#x27;, &#x27;와우 엄청난 문법이다&#x27;]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;친성&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> suffix = <span class="string">&#x27;와우 엄청난 문법이다&#x27;</span>;</span><br><span class="line">wow<span class="string">`안녕하세요. 제 이름은 <span class="subst">$&#123;name&#125;</span> 입니다. <span class="subst">$&#123;suffix&#125;</span>`</span>;</span><br></pre></td></tr></table></figure><ul><li>와우</li><li>css in js 할 때 쓰던 문법인가?!</li></ul><h2 id="String-raw"><a href="#String-raw" class="headerlink" title="String.raw()"></a>String.raw()</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> filePath = <span class="built_in">String</span>.raw<span class="string">`C:\Development\profile\aboutme.html`</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`The file was uploaded from: <span class="subst">$&#123;filePath&#125;</span>`</span>);</span><br><span class="line"><span class="comment">// &quot;The file was uploaded from: C:\Development\profile\aboutme.html&quot;</span></span><br></pre></td></tr></table></figure><ul><li>오우.. <code>\</code>가 그대로 출력된다!</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/89pQ3Vc25GE">https://youtu.be/89pQ3Vc25GE</a> ; Stop Combining Strings The Old Way - Web Dev Simplified</li><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Template_literals">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Template_literals</a></li><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/raw">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/String/raw</a></li><li><a href="https://blog.webdevsimplified.com/2020-03/tagged-template-literals/">https://blog.webdevsimplified.com/2020-03/tagged-template-literals/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/template-literals/">template literals</category>
      
      
      <comments>https://chinsun9.github.io/2022/01/07/js-template-literals/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git clone specific directory 특정 하위 디렉터리만 클론</title>
      <link>https://chinsun9.github.io/2022/01/02/git-clone-specific-directory/</link>
      <guid>https://chinsun9.github.io/2022/01/02/git-clone-specific-directory/</guid>
      <pubDate>Sun, 02 Jan 2022 06:17:45 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;figcaption&gt;&lt;span&gt;cmd terminal&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/spa</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight cmd"><figcaption><span>cmd terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add -f origin git@github.com:chinsun9/reponame.git</span><br><span class="line">git config core.sparseCheckout true</span><br><span class="line"><span class="built_in">echo</span> some-directory/ &gt;&gt; .git/info/sparse-checkout</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/600079/how-do-i-clone-a-subdirectory-only-of-a-git-repository">https://stackoverflow.com/questions/600079/how-do-i-clone-a-subdirectory-only-of-a-git-repository</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/sparse-checkout/">sparse-checkout</category>
      
      
      <comments>https://chinsun9.github.io/2022/01/02/git-clone-specific-directory/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>typescript keyof</title>
      <link>https://chinsun9.github.io/2022/01/01/typescript-keyof/</link>
      <guid>https://chinsun9.github.io/2022/01/01/typescript-keyof/</guid>
      <pubDate>Sat, 01 Jan 2022 07:52:05 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/typescript-keyof20211229/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;figur</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/typescript-keyof20211229/preview.png" alt=" "></p><figure class="highlight ts"><figcaption><span>example.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">type</span> User = &#123;</span><br><span class="line">  name: <span class="built_in">string</span>;</span><br><span class="line">  email: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user: User = &#123;</span><br><span class="line">  name: <span class="string">&#x27;chinsung&#x27;</span>,</span><br><span class="line">  email: <span class="string">&#x27;chin_sung@naver.com&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// keyof User === &#x27;name&#x27; | &#x27;email&#x27;</span></span><br><span class="line"><span class="keyword">const</span> updateUser = <span class="function">(<span class="params">name: keyof User, value: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    ...user,</span><br><span class="line">    [name]: value,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">updateUser(<span class="string">&#x27;&#x27;</span>); <span class="comment">// wow 자동완성!!</span></span><br></pre></td></tr></table></figure><ul><li>나이수</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.typescriptlang.org/docs/handbook/2/keyof-types.html">https://www.typescriptlang.org/docs/handbook/2/keyof-types.html</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/keyof/">keyof</category>
      
      
      <comments>https://chinsun9.github.io/2022/01/01/typescript-keyof/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>aws lambda handler callback</title>
      <link>https://chinsun9.github.io/2021/12/27/aws-lambda-handler-callback/</link>
      <guid>https://chinsun9.github.io/2021/12/27/aws-lambda-handler-callback/</guid>
      <pubDate>Mon, 27 Dec 2021 14:11:44 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight ts&quot;&gt;&lt;figcaption&gt;&lt;span&gt;example.ts&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight ts"><figcaption><span>example.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  APIGatewayProxyCallback,</span><br><span class="line">  APIGatewayProxyEvent,</span><br><span class="line">  APIGatewayProxyResult,</span><br><span class="line">  Context,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;aws-lambda&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; makeResponse &#125; <span class="keyword">from</span> <span class="string">&#x27;./makeResponse&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; service &#125; <span class="keyword">from</span> <span class="string">&#x27;./service&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> handler = <span class="keyword">async</span> (</span><br><span class="line">  _e: APIGatewayProxyEvent,</span><br><span class="line">  _c: Context,</span><br><span class="line">  callback: APIGatewayProxyCallback</span><br><span class="line">): <span class="built_in">Promise</span>&lt;APIGatewayProxyResult | <span class="literal">undefined</span>&gt; =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> response;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> service();</span><br><span class="line">    response = makeResponse(<span class="number">200</span>, res);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(err);</span><br><span class="line">    callback(err <span class="keyword">as</span> <span class="built_in">any</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>람다 로직에서 외부 api를 호출하는 경우가 있다</li><li>근데 종종이 운 나쁘게 실패할 때가 생긴다</li><li>람다는 에러가 발생하면 알아서 재시도를 한다</li><li>재시도를 시키기 위해 실패를 알려야 한다</li><li>catch에 잡히면 재시도를 했으면 좋겠다</li></ul><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><ul><li>3번째 인자로 callback을 받고, catch에서 호출해준다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/35689730/aws-lambda-function-continues-for-a-bit-after-context-fail">https://stackoverflow.com/questions/35689730/aws-lambda-function-continues-for-a-bit-after-context-fail</a></li><li><a href="https://medium.com/@ron_73212/how-to-handle-aws-lambda-errors-like-a-pro-e5455b013d10">https://medium.com/@ron_73212/how-to-handle-aws-lambda-errors-like-a-pro-e5455b013d10</a></li><li><a href="https://aws.amazon.com/ko/about-aws/whats-new/2019/11/aws-lambda-supports-max-retry-attempts-event-age-asynchronous-invocations/">https://aws.amazon.com/ko/about-aws/whats-new/2019/11/aws-lambda-supports-max-retry-attempts-event-age-asynchronous-invocations/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/labmda/">labmda</category>
      
      
      <comments>https://chinsun9.github.io/2021/12/27/aws-lambda-handler-callback/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>typescript is keyword</title>
      <link>https://chinsun9.github.io/2021/12/22/typescript-is-keyword/</link>
      <guid>https://chinsun9.github.io/2021/12/22/typescript-is-keyword/</guid>
      <pubDate>Wed, 22 Dec 2021 14:32:29 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/typescript-is-keyword20211218/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/typescript-is-keyword20211218/preview.png" alt=" "></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidPostAttributes</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">  attributes: <span class="built_in">any</span></span></span></span><br><span class="line"><span class="function"><span class="params"></span>): <span class="title">attributes</span> <span class="title">is</span> <span class="title">PostMarkdownAttributes</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> attributes?.title;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><a href="https://remix.run/docs/en/v1/tutorials/blog#pulling-from-a-data-source">remix 튜토리얼</a>하다가 요상한 문법을 보았다</li><li>any같은 <code>.</code> 찍으면 자동완성 안뜨는 타입들을 특정 타입으로 좁혀줘서, 자동완성 지원도 받을 수 있다</li></ul><figure class="highlight ts"><figcaption><span>example</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isNumber</span>(<span class="params">x: <span class="built_in">any</span></span>): <span class="title">x</span> <span class="title">is</span> <span class="title">number</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">typeof</span> x === <span class="string">&#x27;number&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isString</span>(<span class="params">x: <span class="built_in">any</span></span>): <span class="title">x</span> <span class="title">is</span> <span class="title">string</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">typeof</span> x === <span class="string">&#x27;string&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params">value: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (isNumber(value)) &#123;</span><br><span class="line">    <span class="keyword">return</span> value.toFixed();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (isString(value)) &#123;</span><br><span class="line">    <span class="keyword">return</span> value.length;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">`hello error`</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>any로 받았는데, 타입 가드를 통과하면</li><li>해당 타입처럼 다룰 수 있다</li><li><code>as</code>로 강제 캐스팅하여 사용하지 않아도 된다!</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.typescriptlang.org/docs/handbook/advanced-types.html">https://www.typescriptlang.org/docs/handbook/advanced-types.html</a></li><li><a href="https://typescript-kr.github.io/pages/advanced-types.html">https://typescript-kr.github.io/pages/advanced-types.html</a></li><li><a href="https://stackoverflow.com/questions/40081332/what-does-the-is-keyword-do-in-typescript">https://stackoverflow.com/questions/40081332/what-does-the-is-keyword-do-in-typescript</a></li><li><a href="https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates">https://www.typescriptlang.org/docs/handbook/2/narrowing.html#using-type-predicates</a></li><li><a href="https://youtu.be/S4ewVsq8JV0">https://youtu.be/S4ewVsq8JV0</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/predicates/">predicates</category>
      
      <category domain="https://chinsun9.github.io/tags/type-guards/">type guards</category>
      
      
      <comments>https://chinsun9.github.io/2021/12/22/typescript-is-keyword/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>promise all vs allSettled</title>
      <link>https://chinsun9.github.io/2021/12/19/promise-all-vs-allSettled/</link>
      <guid>https://chinsun9.github.io/2021/12/19/promise-all-vs-allSettled/</guid>
      <pubDate>Sun, 19 Dec 2021 09:52:47 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;figcaption&gt;&lt;span&gt;example&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><figcaption><span>example</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise1 = <span class="built_in">Promise</span>.resolve(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">const</span> promise2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(reject, <span class="number">100</span>, <span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">const</span> promises = [promise1, promise2];</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.allSettled(promises)</span><br><span class="line">  .then(<span class="function">(<span class="params">results</span>) =&gt;</span> results.forEach(<span class="function">(<span class="params">result</span>) =&gt;</span> <span class="built_in">console</span>.log(result.status))) <span class="comment">// 여기에 걸림</span></span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err));</span><br><span class="line"><span class="comment">// &gt; &quot;fulfilled&quot;</span></span><br><span class="line"><span class="comment">// &gt; &quot;rejected&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.all(promises)</span><br><span class="line">  .then(<span class="function">(<span class="params">results</span>) =&gt;</span> results.forEach(<span class="function">(<span class="params">result</span>) =&gt;</span> <span class="built_in">console</span>.log(result.status)))</span><br><span class="line">  .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.error(err)); <span class="comment">// 여기에 걸림</span></span><br><span class="line"><span class="comment">// &gt; foo</span></span><br></pre></td></tr></table></figure><ul><li>all은 한개라도 실패하면 종료</li><li>allSettled은 실패하더라도 모든 프로미스 실행</li></ul><h2 id="allSettled-값-꺼내쓰기"><a href="#allSettled-값-꺼내쓰기" class="headerlink" title="allSettled 값 꺼내쓰기"></a>allSettled 값 꺼내쓰기</h2><figure class="highlight ts"><figcaption><span>example allSettled</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [job1, job2] = <span class="keyword">await</span> <span class="built_in">Promise</span>.allSettled(promiseJobs);</span><br><span class="line"><span class="keyword">if</span> (job1.status === <span class="string">&#x27;rejected&#x27;</span>) <span class="keyword">throw</span> job1.reason;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(job1.value);</span><br></pre></td></tr></table></figure><ul><li>rejected : reason에서 실패사유를</li><li>fulfilled : value에서 값을 꺼내 쓸 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/promise/">promise</category>
      
      
      <comments>https://chinsun9.github.io/2021/12/19/promise-all-vs-allSettled/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>202111 검색 실적</title>
      <link>https://chinsun9.github.io/2021/12/18/202111-search-performance-report/</link>
      <guid>https://chinsun9.github.io/2021/12/18/202111-search-performance-report/</guid>
      <pubDate>Sat, 18 Dec 2021 11:31:43 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202111-search-performance-report20211216/preview.png&quot; alt</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202111-search-performance-report20211216/preview.png" alt=" "></p>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2021/12/18/202111-search-performance-report/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ie11로 접속하면 edge가 켜짐</title>
      <link>https://chinsun9.github.io/2021/12/16/redirect-ie11-to-edge-like-stackoverflow/</link>
      <guid>https://chinsun9.github.io/2021/12/16/redirect-ie11-to-edge-like-stackoverflow/</guid>
      <pubDate>Thu, 16 Dec 2021 13:07:50 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;stackoverflow를 ie11에서 접속 시도하면 edge가 켜진다 🎇&lt;/li&gt;
&lt;li&gt;궁금해서 알아봤는데, 자체적으로 할 수 있는 게 아니였다&lt;/li&gt;
&lt;li&gt;마소에 메일을 보내고 리스트에 추가가 되어야한다&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>stackoverflow를 ie11에서 접속 시도하면 edge가 켜진다 🎇</li><li>궁금해서 알아봤는데, 자체적으로 할 수 있는 게 아니였다</li><li>마소에 메일을 보내고 리스트에 추가가 되어야한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/63731061/how-do-i-redirect-ie11-to-edge-like-stack-overflow">https://stackoverflow.com/questions/63731061/how-do-i-redirect-ie11-to-edge-like-stack-overflow</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/ie11/">ie11</category>
      
      <category domain="https://chinsun9.github.io/tags/stackoverflow/">stackoverflow</category>
      
      
      <comments>https://chinsun9.github.io/2021/12/16/redirect-ie11-to-edge-like-stackoverflow/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>eslint ignorePatterns</title>
      <link>https://chinsun9.github.io/2021/12/04/eslint-ignorePatterns/</link>
      <guid>https://chinsun9.github.io/2021/12/04/eslint-ignorePatterns/</guid>
      <pubDate>Sat, 04 Dec 2021 13:27:09 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;린트하고 싶지 않은 디렉터리를 설정해줄 수 있다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/ima</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>린트하고 싶지 않은 디렉터리를 설정해줄 수 있다</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/eslint-ignorePatterns20211128/preview.png" alt=" "></p><ul><li>스토리북이 src 밑에 있어서 린트가 같이 적용되었다</li><li>eslint가 스토리북 디렉터리를 무시하도록 해보자</li></ul><figure class="highlight json"><figcaption><span>.eslintrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">&quot;ignorePatterns&quot;</span>: [<span class="string">&quot;/src/stories/**/*&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>루트 경로부터 표현해야 한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://eslint.org/docs/user-guide/configuring/ignoring-code">https://eslint.org/docs/user-guide/configuring/ignoring-code</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/eslint/">eslint</category>
      
      
      <category domain="https://chinsun9.github.io/tags/eslint/">eslint</category>
      
      <category domain="https://chinsun9.github.io/tags/storybook/">storybook</category>
      
      
      <comments>https://chinsun9.github.io/2021/12/04/eslint-ignorePatterns/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>first-child vs first-of-type</title>
      <link>https://chinsun9.github.io/2021/11/28/first-child-vs-first-of-type/</link>
      <guid>https://chinsun9.github.io/2021/11/28/first-child-vs-first-of-type/</guid>
      <pubDate>Sun, 28 Nov 2021 02:10:05 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/first-child-vs-first-of-type20211116/1.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/first-child-vs-first-of-type20211116/1.png" alt=" "></p><blockquote><p>The pseudo class “:first-child” is potentially unsafe when doing server-side rendering. Try changing it to “:first-of-type”.<br>The pseudo class “:nth-child” is potentially unsafe when doing server-side rendering. Try changing it to “:nth-of-type”.</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/first-child-vs-first-of-type20211116/preview.png" alt=" "></p><ul><li>first-child를 사용하면 콘솔에 에러가 찍힌다</li><li>그러면서 first-of-type을 사용하라고 알린다</li><li>이참에 둘의 차이를 알아보았다</li></ul><!-- * ie8 시절에 사용하던 것이 first-child이고, 요즘엔 first-of-type을 사용한다 --><figure class="highlight html"><figcaption><span>example.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">h1</span><span class="selector-pseudo">:first</span>-child &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: red;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-tag">h4</span><span class="selector-pseudo">:first</span>-of-type &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: green;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>first-child로 빨간색이 된다<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>first-of-type으로 인해 초록색이 된다<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>first-of-type으로 인해 초록색이 된다<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>효과를 안 받는다<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.geeksforgeeks.org/difference-between-first-child-and-first-of-type-selector-in-css/">https://www.geeksforgeeks.org/difference-between-first-child-and-first-of-type-selector-in-css/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      
      <comments>https://chinsun9.github.io/2021/11/28/first-child-vs-first-of-type/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>JSX is not defined.</title>
      <link>https://chinsun9.github.io/2021/11/27/JSX-is-not-defined/</link>
      <guid>https://chinsun9.github.io/2021/11/27/JSX-is-not-defined/</guid>
      <pubDate>Sat, 27 Nov 2021 14:45:57 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;eslint가 JSX를 못 알아먹는다&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/JSX-is-not-defined20211127/pr</description>
        
      
      
      
      <content:encoded><![CDATA[<p>eslint가 JSX를 못 알아먹는다</p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/JSX-is-not-defined20211127/preview.png" alt=" "></p><figure class="highlight json"><figcaption><span>.eslintrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;globals&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;JSX&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/eslint/">eslint</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/eslint/">eslint</category>
      
      <category domain="https://chinsun9.github.io/tags/JSX/">JSX</category>
      
      
      <comments>https://chinsun9.github.io/2021/11/27/JSX-is-not-defined/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>7777</title>
      <link>https://chinsun9.github.io/2021/11/24/7777/</link>
      <guid>https://chinsun9.github.io/2021/11/24/7777/</guid>
      <pubDate>Wed, 24 Nov 2021 13:01:16 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/777720211122/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;7777 커밋&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/777720211122/preview.png" alt=" "></p><ul><li>7777 커밋</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/commit/">commit</category>
      
      
      <comments>https://chinsun9.github.io/2021/11/24/7777/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git rebase</title>
      <link>https://chinsun9.github.io/2021/11/23/git-rebase/</link>
      <guid>https://chinsun9.github.io/2021/11/23/git-rebase/</guid>
      <pubDate>Tue, 23 Nov 2021 13:41:40 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;terminal&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase main</span><br></pre></td></tr></table></figure><ul><li>main branch와 현재 브랜치가 충돌이 나서 자동 병합이 안될 떄</li><li>rebase를 톨해 로컬에서 충돌을 해결할 수 있다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/rebase/">rebase</category>
      
      
      <comments>https://chinsun9.github.io/2021/11/23/git-rebase/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>all unset</title>
      <link>https://chinsun9.github.io/2021/11/22/css-all-unset/</link>
      <guid>https://chinsun9.github.io/2021/11/22/css-all-unset/</guid>
      <pubDate>Mon, 22 Nov 2021 12:28:41 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;못생긴 기본 스타일을 제거해보자&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/css-all-unset20211121/preview.pn</description>
        
      
      
      
      <content:encoded><![CDATA[<p>못생긴 기본 스타일을 제거해보자</p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/css-all-unset20211121/preview.png" alt=" "></p><figure class="highlight css"><figcaption><span>style.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">  all: unset;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="예전의-삽질들…"><a href="#예전의-삽질들…" class="headerlink" title="예전의 삽질들…"></a>예전의 삽질들…</h2><ul><li><a href="https://chinsun9.github.io/2020/10/08/a-tag-no-color/">https://chinsun9.github.io/2020/10/08/a-tag-no-color/</a></li><li><a href="https://chinsun9.github.io/2020/11/03/li-point-remove/">https://chinsun9.github.io/2020/11/03/li-point-remove/</a></li><li><a href="https://chinsun9.github.io/2020/12/15/input-number-%ED%99%94%EC%82%B4%ED%91%9C-%EC%97%86%EC%95%A0%EA%B8%B0/">https://chinsun9.github.io/2020/12/15/input-number-화살표-없애기/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      
      <comments>https://chinsun9.github.io/2021/11/22/css-all-unset/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>eslint 빨간줄, 재시작</title>
      <link>https://chinsun9.github.io/2021/11/21/eslint-tips/</link>
      <guid>https://chinsun9.github.io/2021/11/21/eslint-tips/</guid>
      <pubDate>Sun, 21 Nov 2021 05:42:29 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/eslint-tips20210828/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/eslint-tips20210828/preview.png" alt=" "></p><ul><li><p>nodejs, javascript, typescript 등 어떤 카테고리에 넣어야할지 고민하다가 그냥 vscode에 넣었다</p></li><li><p>왜냐하면 vscode를 <strong>재시작</strong>하는 게 중요 포인트이기 때문이다</p></li><li><p><code>ESLint: Restart ESLint Server</code> 또는</p></li><li><p><code>developer: reload window</code> 을 꼭 해주자</p></li></ul><!--* 처음에 eslint 세팅할 때 엄청나게 삽을 많이 펐는데,* 이렇게 해도 빨간줄, 저렇게 해도 빨간 줄 아주 힘들었다* 하루 날 잡고 eslint만 한적도..* 그때 생각하면서 먼저 알았으면 좋을 정보들을 정리한다 --><ul><li>eslint config를 수정했으면 vscode창을 다시 실행한다</li><li>eslint config를 수정했는데, 린트가 동작하지 않는데, 뭐 때문에 동작하지 않는지 모른다면</li><li><code>yarn eslint tmp.ts</code> 같은 명령을 사용해서 아웃풋을 확인한다</li><li>그러면 어떤 패키지가 없어서, 어떤 유효하지 않은 설정을 사용해서 동작하지 않는다는 정보를 얻을 수 있다</li><li>그리고 eslintrc에 들어가는 내용을 너무 다 세세히 알려고 하지 말자</li><li>일단 동작하면 그러려니 하면 된다</li><li>나중에 관련해서 더 세세하게 커스텀 하고 싶을 때만 알아보자</li></ul><h2 id="eslint-장점"><a href="#eslint-장점" class="headerlink" title="eslint 장점"></a>eslint 장점</h2><ul><li>코딩 실력이 크게 늘었다?</li><li>eslint가 잡아주는 오류들을 수정하면서</li><li>js의 유용한 문법이나,</li><li>불필요한 코드들을 많이 지울 수 있었다</li></ul><ul><li>예를 들면, <code>prefer-destructuring</code>룰로 구조 분해 할당 같은 문법들을 알게 된다라던가</li><li>반복문 안에서 비동기 함수를 <code>await</code>을 붙여 실행하는데,</li><li>당시에는 비동기가 익숙하지 않아서 무조건 <code>await</code>을 붙여서 값을 바로 꺼내서 핸들 하기 급급했는데,</li><li>린트가 <code>Unexpected &#39;await&#39; inside a loop.</code> 에러를 뱉어줬다</li><li>관련해서 검색하고 공부하고, <code>Promise</code>에 대해 자세히 공부해보고,</li><li>결국 이전의 결과가 다음에 필요하지 않다면</li><li><code>Promise.all</code>로 실행해서 병렬로 처리 후에 한 번에 결과를 받아서 핸들 한다던가</li></ul><ul><li>선생님 같은 느낌으로 정말 도움이 많이 되었다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://eslint.org/docs/rules/no-await-in-loop">https://eslint.org/docs/rules/no-await-in-loop</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/eslint/">eslint</category>
      
      
      <comments>https://chinsun9.github.io/2021/11/21/eslint-tips/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>eslint --init 으로 쉽게 eslint 세팅하기</title>
      <link>https://chinsun9.github.io/2021/11/20/eslint-init/</link>
      <guid>https://chinsun9.github.io/2021/11/20/eslint-init/</guid>
      <pubDate>Sat, 20 Nov 2021 06:07:39 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;이전에 react eslint 관련해서 여러 글을 작성했다 (다 엄청난 삽질이었다…)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/es</description>
        
      
      
      
      <content:encoded><![CDATA[<p>이전에 react eslint 관련해서 여러 글을 작성했다 (다 엄청난 삽질이었다…)</p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/eslint-init20210807/preview.png" alt=" "></p><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx eslint --init</span><br></pre></td></tr></table></figure><ul><li>위 명령으로 한 번에 해결</li><li>방향키로 선택 선택 넘어가면, 알아서 환경을 세팅해준다</li></ul><h2 id="CRA와-eslint-–init해서-프로젝트-세팅하는-과정"><a href="#CRA와-eslint-–init해서-프로젝트-세팅하는-과정" class="headerlink" title="CRA와 eslint –init해서 프로젝트 세팅하는 과정"></a>CRA와 eslint –init해서 프로젝트 세팅하는 과정</h2><figure class="highlight sh"><figcaption><span>termial</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CRA로 리액트 프로젝트 시작</span></span><br><span class="line">yarn create react-app . --template typescript</span><br><span class="line"></span><br><span class="line"><span class="comment"># eslint --init 으로 eslint 세팅</span></span><br><span class="line">yarn eslint --init</span><br><span class="line">√ How would you like to use ESLint? · style</span><br><span class="line">√ What <span class="built_in">type</span> of modules does your project use? · esm</span><br><span class="line">√ Which framework does your project use? · react</span><br><span class="line">√ Does your project use TypeScript? · Yes</span><br><span class="line">√ Where does your code run? · browser</span><br><span class="line">√ How would you like to define a style <span class="keyword">for</span> your project? · guide</span><br><span class="line">√ Which style guide <span class="keyword">do</span> you want to follow? · airbnb</span><br><span class="line">√ What format <span class="keyword">do</span> you want your config file to be <span class="keyword">in</span>? · JSON</span><br><span class="line">√ Would you like to install them now with npm? · No</span><br></pre></td></tr></table></figure><ul><li>입맛대로 답변한다</li><li>특히 마지막 <code>Would you like to install them now with npm?</code> 물음에는 No로 답변한다</li><li><code>No</code>로 답변하고 필요한 종속성을 yarn으로 설치해준다</li><li>(Yes로 답변하면, npm으로 설치되며 package-lock.json이 생성된다)</li></ul><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 콘솔에 적힌 종속성들을 복사해서 적절히 편집하고 실행한다</span></span><br><span class="line"><span class="comment"># 여러 버전들을 나열해서 알려주는데, 그중에서 최신 버전을 다운받았다</span></span><br><span class="line">yarn add -D \</span><br><span class="line">    eslint-plugin-react@^7.21.5 \</span><br><span class="line">    @typescript-eslint/eslint-plugin@latest \</span><br><span class="line">    eslint-config-airbnb@latest \</span><br><span class="line">    eslint@^7.2.0 \</span><br><span class="line">    eslint-plugin-import@^2.22.1 \</span><br><span class="line">    eslint-plugin-jsx-a11y@^6.4.1 \</span><br><span class="line">    eslint-plugin-react-hooks@^4 \</span><br><span class="line">    @typescript-eslint/parser@latest</span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># eslint와 prettier를 함께 쓰려면 아래도 함께 설치한다</span></span><br><span class="line">yarn add -D \</span><br><span class="line">    prettier  \</span><br><span class="line">    eslint-plugin-prettier  \</span><br><span class="line">    eslint-config-prettier</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://eslint.org/docs/user-guide/getting-started">https://eslint.org/docs/user-guide/getting-started</a></li><li><a href="https://github.com/chinsun9/react-ts-template/tree/v20210827">https://github.com/chinsun9/react-ts-template/tree/v20210827</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/eslint/">eslint</category>
      
      
      <comments>https://chinsun9.github.io/2021/11/20/eslint-init/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ngrok 내 웹앱 포트포워딩없이 https 공유하기</title>
      <link>https://chinsun9.github.io/2021/11/14/ngrok/</link>
      <guid>https://chinsun9.github.io/2021/11/14/ngrok/</guid>
      <pubDate>Sun, 14 Nov 2021 06:44:18 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/ngrok20210829/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/ngrok20210829/preview.png" alt=" "></p><ul><li><a href="https://ngrok.com/download">https://ngrok.com/download</a></li><li>포트포워딩없이 서버 외부에 공유하기</li><li>https로 열어준다</li><li>너무 간단하다</li><li>zip 받아서 원하는 곳에 풀고,</li></ul><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngrok http 3000</span><br></pre></td></tr></table></figure><ul><li><p>path 환경변수 등록해서 어디서든 cli에서 실행할 수 있다</p></li><li><p>근데 이거보다 더 쉬운 <code>localtunnel</code>이 있다</p></li></ul><h2 id="대안-localtunnel"><a href="#대안-localtunnel" class="headerlink" title="대안 ; localtunnel"></a>대안 ; localtunnel</h2><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/ngrok20210829/1.png" alt=" "></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx localtunnel --port 3000</span><br></pre></td></tr></table></figure><ul><li>포트만 설정해주면 끝</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>localtunnel ; <a href="https://github.com/localtunnel/localtunnel">https://github.com/localtunnel/localtunnel</a></li><li><a href="https://www.softwaretestinghelp.com/ngrok-alternatives/">https://www.softwaretestinghelp.com/ngrok-alternatives/</a><ul><li>ngrok의 대안들</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/https/">https</category>
      
      <category domain="https://chinsun9.github.io/tags/proxy/">proxy</category>
      
      
      <comments>https://chinsun9.github.io/2021/11/14/ngrok/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
