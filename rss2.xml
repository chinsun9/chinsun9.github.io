<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Fri, 18 Jun 2021 11:01:36 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>SSR, CSR</title>
      <link>https://chinsun9.github.io/2021/06/18/ssr-csr/</link>
      <guid>https://chinsun9.github.io/2021/06/18/ssr-csr/</guid>
      <pubDate>Fri, 18 Jun 2021 08:42:11 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;SSR, server side rendering&lt;br&gt;CSR, client side rendering&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;CSR&quot;&gt;&lt;a href=&quot;#CSR&quot; class=&quot;headerlink&quot; ti</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>SSR, server side rendering<br>CSR, client side rendering</p></blockquote><h2 id="CSR"><a href="#CSR" class="headerlink" title="CSR"></a>CSR</h2><ul><li>CSR은 리액트로 만든 SPA 웹앱이라고 생각하면 된다</li><li>index.html이 텅텅 비어있고,</li><li>버튼을 누르면 자바스크립트로 동적으로 화면을 다시 그려서 페이지가 넘어가는 것처럼 보인다</li><li>처음 리액트를 배울 때 안드로이드 앱 만드는 느낌이 강하게 들었다</li><li>최초에 index.html를 서버에서 받고, 화면이 넘어가는 경우 필요한 데이터만 서버에 요청한다<br>(JSON 등 데이터만 주고받음으로 가볍다고 볼 수 있다)</li><li>데이터를 가져오면 이미 가지고 있는 틀에다가 바인딩하여 보여준다</li></ul><h2 id="SSR"><a href="#SSR" class="headerlink" title="SSR"></a>SSR</h2><ul><li>전통?적인 방법이다</li><li>버튼, 링크를 누르면 서버로 다른 html 파일을 요청한다</li><li>CSR가 반대로 html 내용이 꽉꽉 차있다</li><li>SEO에 유리하다</li><li>클로러(bot)는 그냥 html의 내용을 읽으면 된다</li><li>CSR은 페이지 접속 만으로는 콘텐츠가 생성이 되어있지 않기 때문에 클롤러(bot)가 난감할 것이다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/SSR/">SSR</category>
      
      <category domain="https://chinsun9.github.io/tags/CSR/">CSR</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/18/ssr-csr/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>setTimeout typescript</title>
      <link>https://chinsun9.github.io/2021/06/18/setTimeout-typescript/</link>
      <guid>https://chinsun9.github.io/2021/06/18/setTimeout-typescript/</guid>
      <pubDate>Fri, 18 Jun 2021 08:30:02 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dice</span> </span>&#123;</span><br><span class="line">  sto: ReturnType&lt;<span class="keyword">typeof</span> <span class="built_in">setTimeout</span>&gt;;</span><br></pre></td></tr></table></figure><ul><li>typescript로 웹 스크립트를 짜고 있다</li><li><code>clearTimeout</code>을 사용하기 위해 멤버 변수 sto를 넣었다</li><li>근데 setTimeout의 타입이 뭘까?</li><li>에디터에서 <code>NodeJS.Timeout</code>라고 알려주긴 하는데..</li><li>내 런타임을 노드가 아니라 브라우저다</li><li><code>ReturnType&lt;fn&gt;</code>을 사용하면 브라우저든 SSR이든 걱정 없다고 한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/45802988/typescript-use-correct-version-of-settimeout-node-vs-window/56239226#56239226">https://stackoverflow.com/questions/45802988/typescript-use-correct-version-of-settimeout-node-vs-window/56239226#56239226</a></li><li><a href="https://stackoverflow.com/questions/51040703/what-return-type-should-be-used-for-settimeout-in-typescript">https://stackoverflow.com/questions/51040703/what-return-type-should-be-used-for-settimeout-in-typescript</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/setTimeout/">setTimeout</category>
      
      <category domain="https://chinsun9.github.io/tags/ReturnType/">ReturnType</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/18/setTimeout-typescript/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>github 잔디, contributions calendar</title>
      <link>https://chinsun9.github.io/2021/06/18/github-contributions-calendar/</link>
      <guid>https://chinsun9.github.io/2021/06/18/github-contributions-calendar/</guid>
      <pubDate>Fri, 18 Jun 2021 01:56:14 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-contributions-calendar20210618/preview.png&quot; alt=&quot; </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-contributions-calendar20210618/preview.png" alt=" "></p><ul><li>평소 잔디라 불러서 원래 이름이 뭔지 알아보았다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/managing-contribution-graphs-on-your-profile/viewing-contributions-on-your-profile#contributions-calendar">https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/managing-contribution-graphs-on-your-profile/viewing-contributions-on-your-profile#contributions-calendar</a></li></ul><h2 id="ㅋㅋ"><a href="#ㅋㅋ" class="headerlink" title="ㅋㅋ"></a>ㅋㅋ</h2><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-contributions-calendar20210618/1.png" alt=" "></p><ul><li>내 커밋 기록 식칼 모양이다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/contributions-calendar/">contributions calendar</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/18/github-contributions-calendar/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>transition ease ease-in ease-out ease-in-out 무슨 차이일까</title>
      <link>https://chinsun9.github.io/2021/06/18/transition-timing-function/</link>
      <guid>https://chinsun9.github.io/2021/06/18/transition-timing-function/</guid>
      <pubDate>Fri, 18 Jun 2021 00:35:21 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight css&quot;&gt;&lt;figcaption&gt;&lt;span&gt;style.css&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight css"><figcaption><span>style.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.2s</span> ease;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>자연스러운 변화를 주기 위해서 사용하곤 했다</li><li>ease는 여러 가지가 있는데 어떤 차이일까?</li></ul><h2 id="transition-timing-function"><a href="#transition-timing-function" class="headerlink" title="transition-timing-function"></a>transition-timing-function</h2><ul><li><em>영상 편집할 때 영상의 앞뒤에 투명도를 가지고 페이드인 페이드아웃하는 그래프가 있는데 그거랑 똑같다</em></li><li>ease, linear, ease-in, ease-out, ease-in-out, cubic-bezier, steps 가 있다</li></ul><h3 id="함수들"><a href="#함수들" class="headerlink" title="함수들"></a>함수들</h3><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/transition-timing-function20210618/preview.png" alt=" "></p><ul><li>캡처 ; <a href="https://cubic-bezier.com/">https://cubic-bezier.com/</a></li></ul><ul><li>ease ; 천천-빠름-천천</li><li>linear ; 등속</li><li>ease-in ; 천천-보통</li><li>ease-out ; 보통-천천</li><li>ease-in-out ; 천천-보통-천천</li><li>cubic-bezier ; 커스텀</li></ul><ul><li>steps ; 뚝뚝 끊어 보여준다</li></ul><h3 id="cubic-bezier"><a href="#cubic-bezier" class="headerlink" title="cubic-bezier"></a>cubic-bezier</h3><p>베지에 곡선이라고 한다<br>ease, in, in-out은 미리 정의어 있는 곡선이다<br>각각을 cubic-bezier로 표현하면 다음과 같다</p><ul><li>ease === cubic-bezier(0.25, 0.1, 0.25, 1.0)</li><li>linear === cubic-bezier(0.0, 0.0, 1.0, 1.0)</li><li>ease-in === cubic-bezier(0.42, 0, 1.0, 1.0)</li><li>ease-out === cubic-bezier(0, 0, 0.58, 1.0)</li><li>ease-in-out === cubic-bezier(0.42, 0, 0.58, 1.0)</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transition-timing-function">https://developer.mozilla.org/en-US/docs/Web/CSS/transition-timing-function</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function">https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function</a></li></ul><h3 id="유용한-도구"><a href="#유용한-도구" class="headerlink" title="유용한 도구"></a>유용한 도구</h3><ul><li>cubic-bezier 커스텀</li><li><a href="https://cubic-bezier.com/">https://cubic-bezier.com/</a></li></ul><h3 id="용어"><a href="#용어" class="headerlink" title="용어"></a>용어</h3><ul><li>베지에 곡선, 베지어 곡선</li><li><a href="https://ko.wikipedia.org/wiki/%EB%B2%A0%EC%A7%80%EC%97%90_%EA%B3%A1%EC%84%A0">https://ko.wikipedia.org/wiki/베지에_곡선</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/transition-timing-function/">transition timing function</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/18/transition-timing-function/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>비공개 npm package 만들어보기</title>
      <link>https://chinsun9.github.io/2021/06/17/my-first-github-package/</link>
      <guid>https://chinsun9.github.io/2021/06/17/my-first-github-package/</guid>
      <pubDate>Thu, 17 Jun 2021 07:03:43 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/my-first-github-package20210617/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/my-first-github-package20210617/preview.png" alt=" "></p><ul><li>깃허브 레지스트리를 통해 (비공개) 패키지를 만들어보자</li><li>PAT을 통해 <strong>퍼블릭하지 않게</strong> 패키지를 배포해 볼 수 있다</li><li>물론, 공개 패키지도 가능하다</li><li>패키지 생성은 동일하고, 패키지를 받을 때만 차이가 있다</li></ul><ul><li>PAT : personal access token</li></ul><h2 id="PAT-발급"><a href="#PAT-발급" class="headerlink" title="PAT 발급"></a>PAT 발급</h2><ul><li>github에 로그인하고,</li><li><a href="https://github.com/settings/tokens/new">https://github.com/settings/tokens/new</a></li><li><code>write:packages</code> 권한의 personal access token을 생성한다</li></ul><h2 id="저장소-패키지-만들기"><a href="#저장소-패키지-만들기" class="headerlink" title="저장소, 패키지 만들기"></a>저장소, 패키지 만들기</h2><ul><li><p>package.json에 필수적으로 채워야 하는 항목들이 있어서,</p></li><li><p>브라우저로 github에 접속해서 저장소 하나를 만들어 로컬로 클론하고<br><code>npm init -y</code> 하는 것을 추천한다</p></li><li><p>타입스크립트로 만든다</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/chinsun9/hello-package.git</span><br><span class="line"></span><br><span class="line">tsc --init</span><br></pre></td></tr></table></figure><h2 id="디렉터리-구조"><a href="#디렉터리-구조" class="headerlink" title="디렉터리 구조"></a>디렉터리 구조</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── dist</span><br><span class="line">│   ├── index.d.ts</span><br><span class="line">│   └── index.js</span><br><span class="line">├── src</span><br><span class="line">│   └── index.ts</span><br><span class="line">├── .gitignore</span><br><span class="line">├── .npmignore</span><br><span class="line">├── .npmrc</span><br><span class="line">├── package.json</span><br><span class="line">├── README.md</span><br><span class="line">└── tsconfig.json</span><br></pre></td></tr></table></figure><ul><li><p>디렉터리 구조는 마음대로</p></li><li><p>나는 위처럼 구성했다</p></li><li><p>src 밑에 ts 코드를 작성하고,</p></li><li><p><code>tsc</code> 명령으로 <strong>dist</strong> 아래 트랜스파일 된 js를 배포하는 방식이다</p></li></ul><h2 id="src-작성"><a href="#src-작성" class="headerlink" title="src 작성"></a>src 작성</h2><figure class="highlight ts"><figcaption><span>src/index.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClassA</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClassB</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClassC</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>원하는 기능을 구현하고 외부에서 사용 가능하도록 <code>export</code>키워드를 붙여준다</li></ul><h2 id="tsconfig-json-설정"><a href="#tsconfig-json-설정" class="headerlink" title="tsconfig.json 설정"></a>tsconfig.json 설정</h2><ul><li>타입스크립트로 코드를 작성하고,</li><li><code>tsc</code>로 트랜스파일한다. 결과로 js파일이 생성된다</li><li>패키지를 인스톨한 사람들은 js파일을 사용하게 된다</li></ul><figure class="highlight plain"><figcaption><span>tsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;compilerOptions&quot;: &#123;</span><br><span class="line">    &#x2F;&#x2F; ...</span><br><span class="line">    &quot;declaration&quot;: true &#x2F;* Generates corresponding &#39;.d.ts&#39; file. *&#x2F;,</span><br><span class="line">    &#x2F;&#x2F; ...</span><br><span class="line">    &quot;outDir&quot;: &quot;.&#x2F;dist&quot;,</span><br><span class="line">    &quot;rootDir&quot;: &quot;.&#x2F;src&quot;</span><br><span class="line">    &#x2F;&#x2F; ...</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;include&quot;: [&quot;src&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>tsc --init</code> 기본값으로 생성된 상태에서 위 옵션만 수정해주었다</li><li><strong>declaration</strong> ; <code>d.ts</code>파일을 생성해서 자동완성에 도움을 준다</li><li><strong>outDir</strong> ; tsc 명령의 결과로 생성되는 js 위치</li><li><strong>rootDir</strong>, <strong>include</strong> ; root ts 파일 위치</li></ul><h2 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dist</span><br><span class="line">node_modules</span><br></pre></td></tr></table></figure><ul><li>커밋에서 무시할 디렉터리, 파일을 나열한다</li></ul><h2 id="npmignore"><a href="#npmignore" class="headerlink" title=".npmignore"></a>.npmignore</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">test</span><br><span class="line">tsconfig.json</span><br></pre></td></tr></table></figure><ul><li>패키지를 publish 할 때 무시할 디렉터리, 파일을 나열한다</li></ul><h2 id="npmrc"><a href="#npmrc" class="headerlink" title=".npmrc"></a>.npmrc</h2><ul><li>워크스페이스에 위치해도 되고,</li><li>어느 워크스페이스든 상관없이 전역적으로 적용하려면 ~/.npmrc에 넣어주면 된다</li></ul><figure class="highlight properties"><figcaption><span>.npmrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">//npm.pkg.github.com/</span>:<span class="string">_authToken=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span></span><br></pre></td></tr></table></figure><ul><li>처음에 발급받은 토큰을 <code>xxxx...</code> 부분에 넣어준다</li><li>자신의 토큰은 아무래도 전역으로 적용하는 게 좋아 보인다</li></ul><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;@chinsun9/hello-package&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;dist/index.js&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;types&quot;</span>: <span class="string">&quot;dist/index.d.ts&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;repository&quot;</span>: <span class="string">&quot;https://github.com/chinsun9/hello-package.git&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;chinsun9 &lt;chin_sung@naver.com&gt;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;MIT&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;publishConfig&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;registry&quot;</span>: <span class="string">&quot;https://npm.pkg.github.com/&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>몇 가지 수정사항이 있다</li><li>name, main, types, publishConfig를 적절하게 수정한다</li><li>name ; <code>@chinsun9/</code>처럼 골뱅이 자기 이름을 넣어준다</li><li>main ; 트랜스파일 결과로 메인 파일을 넣어준다</li><li>types ; 자동완성을 위해서 생성된 d.ts파일을 넣어준다</li><li>publishConfig ; registry를 깃허브로 하겠다는 설정이다</li></ul><h2 id="패키지-배포"><a href="#패키지-배포" class="headerlink" title="패키지 배포"></a>패키지 배포</h2><ul><li><code>npm publish</code></li><li>저장소에 들어가서 패키지가 잘 배포되었는지 확인하다</li></ul><h2 id="배포한-패키지-인스톨해보기"><a href="#배포한-패키지-인스톨해보기" class="headerlink" title="배포한 패키지 인스톨해보기"></a>배포한 패키지 인스톨해보기</h2><ul><li>github registry에 등록된 패키지는 퍼블릭 일지라도 PAT이 필요하다</li><li>퍼블릭일 때 패키지 주인이 생성한 토큰이 아니다</li><li>각자 자기 자신의 토큰으로 가능하다..!</li></ul><ul><li>비공개 패키지라면 패키지 주인이 생성한 토큰이 있어야 한다.</li><li>패키지 주인은 <code>read:packages</code> 권한이 있는 토큰을 알려주면 다른 사람, 컴퓨터에서 패키지를 인스톨할 수 있다</li></ul><ul><li>임시 디렉터리를 하나 만들고 <code>npm init -y</code>한다</li><li><strong>.npmrc</strong>를 생성하고 내용을 추가한다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;npm.pkg.github.com&#x2F;:_authToken&#x3D;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">@chinsun9:registry&#x3D;https:&#x2F;&#x2F;npm.pkg.github.com&#x2F;</span><br></pre></td></tr></table></figure><ul><li><p>워크스페이스의 .npmrc 또는 유저 홈 디렉터리의 .npmrc 에 위 내용을 추가한다</p></li><li><p><code>@chinsun9:registry=https://npm.pkg.github.com/</code></p></li><li><p><strong>@chinsun9</strong>으로 시작하는 패키지는 <a href="https://npm.pkg.github.com/">https://npm.pkg.github.com/</a> 에서 가져오라고 알려주자</p></li></ul><h2 id="헷갈린-점"><a href="#헷갈린-점" class="headerlink" title="헷갈린 점"></a>헷갈린 점</h2><ul><li>퍼블릭한 패키지도 PAT가 필요했다</li><li>당연히 퍼블릭한 패키지에는 토큰이 필요 없을 거라 생각했다</li><li>그래서 어쩔 수 없이 패키지 오너의 토큰이 필요할 거라 생각했다</li><li>근데, 패키지 주인이 생성한 토큰이 아니더라도 패키지를 인스톨할 수 있었다</li><li>즉, github 계정을 가지고 있고, <code>read:packages</code> 토큰을 생성하면 퍼블릭 패키지를 인스톨할 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><h3 id="내-첫-패키지"><a href="#내-첫-패키지" class="headerlink" title="내 첫 패키지"></a>내 첫 패키지</h3><ul><li><a href="https://github.com/chinsun9/hello-package">https://github.com/chinsun9/hello-package</a></li></ul><h3 id="GitHub-패키지-저장소-호스팅-GitHub-Package-Registry-시작하기"><a href="#GitHub-패키지-저장소-호스팅-GitHub-Package-Registry-시작하기" class="headerlink" title="GitHub 패키지 저장소 호스팅: GitHub Package Registry 시작하기"></a>GitHub 패키지 저장소 호스팅: GitHub Package Registry 시작하기</h3><ul><li><a href="https://musma.github.io/2019/09/30/github-package-registry.html">https://musma.github.io/2019/09/30/github-package-registry.html</a></li></ul><h3 id="d-ts-만들기"><a href="#d-ts-만들기" class="headerlink" title="d.ts 만들기"></a>d.ts 만들기</h3><ul><li><a href="https://www.typescriptlang.org/docs/handbook/declaration-files/dts-from-js.html">https://www.typescriptlang.org/docs/handbook/declaration-files/dts-from-js.html</a></li></ul><h3 id="rc-뜻"><a href="#rc-뜻" class="headerlink" title="*rc 뜻"></a>*rc 뜻</h3><ul><li><a href="https://stackoverflow.com/questions/52800196/what-does-the-rc-stand-for-in-the-names-of-configuration-files">https://stackoverflow.com/questions/52800196/what-does-the-rc-stand-for-in-the-names-of-configuration-files</a></li><li><a href="https://stackoverflow.com/questions/11030552/what-does-rc-mean-in-dot-files">https://stackoverflow.com/questions/11030552/what-does-rc-mean-in-dot-files</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/package/">package</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/17/my-first-github-package/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>windows cmd로 홈 디렉터리(~) 가기</title>
      <link>https://chinsun9.github.io/2021/06/17/windows-user-home/</link>
      <guid>https://chinsun9.github.io/2021/06/17/windows-user-home/</guid>
      <pubDate>Thu, 17 Jun 2021 04:55:24 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;홈 디렉터리는 보통 &lt;code&gt;~&lt;/code&gt;로 표현된다&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>홈 디렉터리는 보통 <code>~</code>로 표현된다</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># linux</span></span><br><span class="line">vi ~/.npmrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># windows</span></span><br><span class="line">notepad %userprofile%/.npmrc</span><br></pre></td></tr></table></figure><ul><li>유저 홈 디렉터리에 설정 파일들이 많이 있는데,</li><li>이 디렉터리를 windows cmd에서 가고 싶을 때 <code>%userprofile%</code>을 참조하면 된다</li></ul><h2 id="cmd로-유저-홈-디렉터리-이동"><a href="#cmd로-유저-홈-디렉터리-이동" class="headerlink" title="cmd로 유저 홈 디렉터리 이동"></a>cmd로 유저 홈 디렉터리 이동</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd %userprofile%</span><br></pre></td></tr></table></figure><h2 id="홈-디렉터리-탐색기로-열기"><a href="#홈-디렉터리-탐색기로-열기" class="headerlink" title="홈 디렉터리 탐색기로 열기"></a>홈 디렉터리 탐색기로 열기</h2><ul><li>Win + R</li><li><code>%userprofile%</code> 입력 후 엔터</li></ul><h2 id="번외-git-bash-쓰기"><a href="#번외-git-bash-쓰기" class="headerlink" title="번외 : git bash 쓰기"></a>번외 : git bash 쓰기</h2><ul><li>간단한 명령어인데, 리눅스 명령어라서 cmd에서 안될 때</li><li>git bash를 켜서 실행한다</li><li>대부분 잘 동작한다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/windows/">windows</category>
      
      
      <category domain="https://chinsun9.github.io/tags/windows/">windows</category>
      
      <category domain="https://chinsun9.github.io/tags/home/">home</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/17/windows-user-home/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>input datalist</title>
      <link>https://chinsun9.github.io/2021/06/17/input-datalist/</link>
      <guid>https://chinsun9.github.io/2021/06/17/input-datalist/</guid>
      <pubDate>Thu, 17 Jun 2021 00:08:07 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;label for=&quot;myInput&quot;&gt;select: &lt;/label&gt;&lt;br&gt;&lt;input list=&quot;myInputList&quot; id=&quot;myInput&quot; /&gt;&lt;/p&gt;
&lt;datalist id=&quot;myInputList&quot;&gt;
  &lt;option value=&quot;hello</description>
        
      
      
      
      <content:encoded><![CDATA[<p><label for="myInput">select: </label><br><input list="myInputList" id="myInput" /></p><datalist id="myInputList">  <option value="hello">안녕</option>  <option value="hi">안뇽</option>  <option value="bye">잘가</option></datalist><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;myInput&quot;</span>&gt;</span>select: <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">list</span>=<span class="string">&quot;myInputList&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myInput&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;myInputList&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>안녕<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;hi&quot;</span>&gt;</span>안뇽<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bye&quot;</span>&gt;</span>잘가<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>datalist를 사용하면 input 태그를 select 태그와 비슷하게 쓸 수 있다</li><li>input에 입력하면 자동으로 필터링된다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/HTML/Element/datalist">https://developer.mozilla.org/ko/docs/Web/HTML/Element/datalist</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/datalist/">datalist</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/17/input-datalist/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>CSS BEM</title>
      <link>https://chinsun9.github.io/2021/06/16/CSS-BEM/</link>
      <guid>https://chinsun9.github.io/2021/06/16/CSS-BEM/</guid>
      <pubDate>Wed, 16 Jun 2021 13:09:27 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;BEM&quot;&gt;&lt;a href=&quot;#BEM&quot; class=&quot;headerlink&quot; title=&quot;BEM&quot;&gt;&lt;/a&gt;BEM&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Block, Element, Modifier&lt;/li&gt;
&lt;li&gt;css class 이름&lt;/li&gt;
&lt;li&gt;&lt;cod</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="BEM"><a href="#BEM" class="headerlink" title="BEM"></a>BEM</h2><ul><li>Block, Element, Modifier</li><li>css class 이름</li><li><code>__</code> 를 이어붙인다</li></ul><h2 id="🤔"><a href="#🤔" class="headerlink" title="🤔"></a>🤔</h2><ul><li>amazon clone 할 떄, 한번 사용해봤는데</li><li>마크업할 때 클래스 작성하기가 불편했다</li><li>sass를 배웠는데 어째선지 더 쓰지않게 되었다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/aKenj9ZQwJg">https://youtu.be/aKenj9ZQwJg</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/BEM/">BEM</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/16/CSS-BEM/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GTD</title>
      <link>https://chinsun9.github.io/2021/06/16/GTD/</link>
      <guid>https://chinsun9.github.io/2021/06/16/GTD/</guid>
      <pubDate>Wed, 16 Jun 2021 06:21:43 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;Getting Things Done (GTD) by David Allen - Animated Book Summary And Review&lt;br&gt;&lt;a href=&quot;https://youtu.be/gCswMsONkwY&quot;&gt;https:</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>Getting Things Done (GTD) by David Allen - Animated Book Summary And Review<br><a href="https://youtu.be/gCswMsONkwY">https://youtu.be/gCswMsONkwY</a></p></blockquote><ul><li>위 영상에 대한 메모</li></ul><h2 id="GTD"><a href="#GTD" class="headerlink" title="GTD"></a>GTD</h2><ul><li>5 스텝으로 이뤄짐</li><li>capture -&gt; process -&gt; oranize -&gt; review -&gt; engage</li></ul><ol><li><p>capture</p><ul><li>머릿속에 두지 말고 모든 생각을 다 적어라</li></ul></li><li><p>process</p><ul><li><p>담아둔 아이템들에 대해 질문해라</p></li><li><p>is it actionable? yes</p></li><li><p>can you do it in less than 2 minutes? yes/no</p><ul><li>yes ; 바로 실행</li><li>no ; 액션 리스트에 추가</li></ul></li><li><p>is it actionable? no</p></li><li><p>2 choices ; discard / keep it as reference</p></li><li><p>모든 항목에 대해 생각해라</p></li></ul></li><li><p>oganize</p><ul><li><p>마법이 일어난다</p></li><li><p>by project, time, context</p></li><li><p>다음 항목에 대해 생각해라</p></li><li><p>시퀀스를 잘 짜라</p></li></ul></li><li><p>review</p><ul><li>매주 리뷰해라</li><li>모든 것을 원활하게 실행하려면 주간 검토가 필수적이다</li><li>목표에 맞게 진행되고 있는지 반성해라</li></ul></li><li><p>engage</p><ul><li>let’s get cracking! ; 즉시 일을 시작해라</li></ul></li></ol><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>Getting Things Done (GTD) by David Allen - Animated Book Summary And Review</li><li><a href="https://youtu.be/gCswMsONkwY">https://youtu.be/gCswMsONkwY</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      <category domain="https://chinsun9.github.io/tags/GTD/">GTD</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/16/GTD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>공유기가 2개일 때 포트포워딩</title>
      <link>https://chinsun9.github.io/2021/06/16/two-routers-port-forwarding/</link>
      <guid>https://chinsun9.github.io/2021/06/16/two-routers-port-forwarding/</guid>
      <pubDate>Wed, 16 Jun 2021 01:43:27 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/two-routers-port-forwarding20210616/preview.png&quot; alt=&quot; &quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/two-routers-port-forwarding20210616/preview.png" alt=" "></p><ul><li>통신사 공유기가 메인으로 있고,</li><li>내 방 공유기가 있고, 컴퓨터에 연결된다</li><li>위 상황일 때 특정 포트를 외부에서 접속할 수 있도록 포트포워딩해보자</li></ul><h2 id="최종-형태"><a href="#최종-형태" class="headerlink" title="최종 형태"></a>최종 형태</h2><ul><li>공유기 DMZ 설정하면 공유기 모든 포트가 개방된다</li><li>내 방 공유기를 DMZ 설정하고, 메인 공유기에서만 포트포워딩하는 방향으로 설정해보겠다</li></ul><h2 id="내-방-공유기-DMZ-설정"><a href="#내-방-공유기-DMZ-설정" class="headerlink" title="내 방 공유기 DMZ 설정"></a>내 방 공유기 DMZ 설정</h2><ul><li>내 방 공유기에 접속하기 위해서 cmd를 열고 <code>ipconfig</code>를 입력한다</li><li><code>이더넷 어댑터 이더넷</code>에 기본 게이트웨이 주소로 접속한다</li><li>각자 공유기 모델명과 DMZ 설정을 검색해 DMZ를 활성화하고 적용한다</li><li>그러면 내 방 공유기로 3000번 포트 요청이 오면 내 컴퓨터 3000번 앱과 연결된다 (같은 포트로 1:1)</li><li>이제 메인 공유기를 설정해보자</li></ul><h2 id="메인-공유기-포트포워딩"><a href="#메인-공유기-포트포워딩" class="headerlink" title="메인 공유기 포트포워딩"></a>메인 공유기 포트포워딩</h2><ul><li>메인 공유기에 접속을 어떻게 해야 할까?</li><li>내 방 공유기 요약정보(보통 가장 첫 메뉴, 메인화면)에 보면 외부 ip를 확인할 수 있다</li><li>외부 ip 주소로 접속하면 메인 공유기에 접속할 수 있다</li><li>여기서 포트포워딩 설정을 해주면 된다</li></ul><h2 id="내-방-공유기-고정아이피-설정"><a href="#내-방-공유기-고정아이피-설정" class="headerlink" title="내 방 공유기 고정아이피 설정"></a>내 방 공유기 고정아이피 설정</h2><ul><li><p>나는 내 방 공유기를 고정아이피로 설정해주었다</p></li><li><p>포트포워딩할 때 특정 아이피에 대해 설정해줘야 한다</p></li><li><p>내 방 공유기가 유동 아이피를 가진다면 제대로 동작하지 않을 것이다</p></li><li><p>메인 공유기에서 특정 맥에 대해 고정 아이피 설정이 되지 않았다 (무슨 퍼미션 오류..)</p></li><li><p>그래서 반대로, 내 방 공유기에서 자기 자신에 대해 고정아이피를 설정했다 (<strong>xxx.xxx.xxx.2</strong>)</p></li><li><p>DNS 서버, 보조 DNS 서버는 <code>ipconfig</code> 명령에서 찾아 적을 수 있다</p></li><li><p>이제 메인 공유기 설정으로 돌아와서,</p></li><li><p>위에서 설정한 고정아이피 주소가 다른 컴퓨터에 할당되어 충돌이 나면 안 된다</p></li><li><p>메인 공유기에서 할당해주는 ip범위가 <strong>xxx.xxx.xxx.2</strong>를 포함하지 않도록 수정한다</p></li></ul><h2 id="포트포워딩-확인하기"><a href="#포트포워딩-확인하기" class="headerlink" title="포트포워딩 확인하기"></a>포트포워딩 확인하기</h2><ul><li>나는 간단하게 vscode로 live server 켰다</li><li>내 아이피를 검색한다 (xxx.xxx.xxx.xxx)</li><li>핸드폰으로 데이터를 켜서 접속해본다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/port-forwarding/">port forwarding</category>
      
      <category domain="https://chinsun9.github.io/tags/router/">router</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/16/two-routers-port-forwarding/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>keyword 카테고리 생성</title>
      <link>https://chinsun9.github.io/2021/06/16/create-keyword-category/</link>
      <guid>https://chinsun9.github.io/2021/06/16/create-keyword-category/</guid>
      <pubDate>Wed, 16 Jun 2021 00:26:50 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;어떤 키워드에 대해 옆에 있는 사람한테 설명할 정도로 잘 알지는 못하지만 알고 있는 대로 적어보기&lt;/li&gt;
&lt;li&gt;잘 모르는 때, 해당 키워드에 대해 어떻게 설명할 수 있을까?&lt;/li&gt;
&lt;li&gt;글 작성 당시의 나는 해당 키워드를 어떻게</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>어떤 키워드에 대해 옆에 있는 사람한테 설명할 정도로 잘 알지는 못하지만 알고 있는 대로 적어보기</li><li>잘 모르는 때, 해당 키워드에 대해 어떻게 설명할 수 있을까?</li><li>글 작성 당시의 나는 해당 키워드를 어떻게 인식하고 있을까?</li><li><del>흑역사 생성기</del></li></ul><ul><li>어떤 지식에 대해 아주 잘 알고 있을 때, 하나도 모르는 사람에게 잘 알려줄 수 있을까?</li><li>라는 물음으로 시작!</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/16/create-keyword-category/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>blog update 404</title>
      <link>https://chinsun9.github.io/2021/06/15/blog-update-404/</link>
      <guid>https://chinsun9.github.io/2021/06/15/blog-update-404/</guid>
      <pubDate>Tue, 15 Jun 2021 08:31:19 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chinsun9.github.io/404&quot;&gt;https://chinsun9.github.io/404&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chi</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><a href="https://chinsun9.github.io/404">https://chinsun9.github.io/404</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-40420210615/preview.png" alt="after"></p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-40420210615/1.png" alt="before"></p><ul><li>기존에는 iframe으로 배너메이커를 보여줬다</li><li>hexo 프론트 메터를 <code>layout: false</code>로 설정해 내가 원하는 대로 커스텀할 수 있었다</li><li>당시에는 404 페이지에 넣을 내용도 없고 당시 만들었던 배너메이커를 자랑하고자 했다</li><li>근데 블로그와 404페이지는 아무 관계가 없는 것처럼 느껴졌다</li><li>그래서 이번엔 <code>layout: true</code> 레이아웃을 하면서 간단한 css 이펙트를 넣어보자 생각했다</li></ul><h2 id="typewriter-animation"><a href="#typewriter-animation" class="headerlink" title="typewriter animation"></a>typewriter animation</h2><ul><li>Kevin Powell 의 <a href="https://youtu.be/w1nhwUGsG6M">https://youtu.be/w1nhwUGsG6M</a> 영상을 보고 따라 했다</li></ul><h2 id="hexo-front-matter"><a href="#hexo-front-matter" class="headerlink" title="hexo front-matter"></a>hexo front-matter</h2><ul><li><p>내 환경은 다음과 같다</p><ul><li>hexo: 5.4.0</li><li>hexo-cli: 4.2.0</li></ul></li></ul><figure class="highlight md"><figcaption><span>404.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404</span><br><span class="line">widgets: null</span><br><span class="line">comment: false</span><br><span class="line">article:</span><br><span class="line"><span class="bullet">  -</span> license: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>404 화면에 위젯, 코멘트, 라인센스 영역을 없애기 위해 설정했다</li><li>title은 넣어주면 head의 title tag에 반영되어서 넣어줬다</li></ul><figure class="highlight html"><figcaption><span>404.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">h1</span><span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">display</span>: none;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>실제 포스트 영역에서 보이지 않게 했다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/w1nhwUGsG6M">https://youtu.be/w1nhwUGsG6M</a></li><li><a href="https://chinsun9.github.io/2020/09/21/%EC%BB%A4%EC%8A%A4%ED%85%80-404-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/">https://chinsun9.github.io/2020/09/21/커스텀-404-페이지-만들기/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/15/blog-update-404/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>First Contribution</title>
      <link>https://chinsun9.github.io/2021/06/08/first-contribution/</link>
      <guid>https://chinsun9.github.io/2021/06/08/first-contribution/</guid>
      <pubDate>Tue, 08 Jun 2021 12:39:56 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/first-contribution20210608/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/first-contribution20210608/preview.png" alt=" "></p><ul><li>캬캬캬컄</li><li>첫 번째? 기여</li><li>npm으로 다운받아지는 모듈에 내가…</li></ul><h2 id="tsc-문제"><a href="#tsc-문제" class="headerlink" title="tsc 문제"></a>tsc 문제</h2><ul><li>타입스크립트로 프론트 프레임워크 없이 바닐라? 웹 프로젝트를 했다</li><li>vscode live server로 개발하고 있었다</li><li>import/export 구문을 사용하고 싶어서 tsconfig에서 module옵션을 commonjs가 아닌 es2020으로 사용했다</li><li>그런데 한 가지 문제가 있었다</li><li>아래 tsc의 결과로 트랜스파일 된 js들이 있다</li></ul><figure class="highlight ts"><figcaption><span>main.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tmp <span class="keyword">from</span> <span class="string">&#x27;./tmp&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tmp <span class="keyword">from</span> <span class="string">&#x27;./tmp&#x27;</span>; <span class="comment">// tsc 결과</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tmp <span class="keyword">from</span> <span class="string">&#x27;./tmp.js&#x27;</span>; <span class="comment">// 내 기대값</span></span><br></pre></td></tr></table></figure><ul><li>tsc 이후에 확장자가 달리지 않는 문제?가 있었다</li><li>이러면 live server는 <code>localhost:5500/js/tmp</code>를 못 찾는다</li><li><code>localhost:5500/js/tmp.js</code> 확장자까지 모두 있어야 파일을 찾아 로드할 수 있었다</li></ul><ul><li>이거에 대해 구글링을 해보니까</li><li>.ts 파일에서 작업할 때 <code>.js</code> 확장자를 붙이는 방법이 있었다</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src-ts/tmp.ts</span></span><br><span class="line"><span class="keyword">const</span> tmp = <span class="string">&#x27;chinsung&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> tmp;</span><br><span class="line"></span><br><span class="line"><span class="comment">// src-ts/main.ts</span></span><br><span class="line"><span class="keyword">import</span> tmp <span class="keyword">from</span> <span class="string">&#x27;./tmp.js&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(tmp);</span><br></pre></td></tr></table></figure><ul><li>근데 이건 에디터에서는 잘 알아듣게 할 수 있지만</li><li>코드를 봐서도 아름답지 못한 느낌이 팍 들었다</li></ul><ul><li>다른 방법으로는 서버에서 파일을 찾을 때</li><li>확장자가 생략이 되어도 그에 맞는 파일을 서빙하도록 설정하는 방법이 있었다</li><li>먼저 live server에서 라우터나 서빙 관련 뭔가 설정 가능한 게 있는지 살펴봤는데 없었다</li><li>express 서버를 만들고 해당 기능을 추가하기에는 auto refresh 기능을 포기하고 싶지 않았다</li></ul><h2 id="tsc-es2020-fix-발견"><a href="#tsc-es2020-fix-발견" class="headerlink" title="tsc-es2020-fix 발견"></a>tsc-es2020-fix 발견</h2><ul><li>이리저리 찾아보다가</li><li><a href="https://github.com/microsoft/TypeScript/issues/13422#issuecomment-838857980">https://github.com/microsoft/TypeScript/issues/13422#issuecomment-838857980</a></li><li>이 코멘트를 발견하고 <code>tsc-es2020-fix</code> 모듈을 받아 사용했다</li><li>이 모듈은 tsc이후에 생성된 js 파일들을 읽어서 import / export 구문에 확장자를 달아준다</li></ul><h2 id="tsc-es2020-fix-문제-발견"><a href="#tsc-es2020-fix-문제-발견" class="headerlink" title="tsc-es2020-fix 문제 발견"></a>tsc-es2020-fix 문제 발견</h2><ul><li>잘 쓰고 있다가 한 가지 문제점을 발견했다</li></ul><figure class="highlight ts"><figcaption><span>main.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tmp <span class="keyword">from</span> <span class="string">&#x27;./tmp&#x27;</span>;</span><br><span class="line"><span class="comment">// -&gt;</span></span><br><span class="line"><span class="keyword">import</span> tmp <span class="keyword">from</span> <span class="string">&#x27;./tmp.js&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li>같은 레벨의 파일 참조는 잘 변환이 되는데</li></ul><figure class="highlight ts"><figcaption><span>main.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tmp <span class="keyword">from</span> <span class="string">&#x27;../tmp&#x27;</span>;</span><br><span class="line"><span class="comment">// -&gt;</span></span><br><span class="line"><span class="keyword">import</span> tmp <span class="keyword">from</span> <span class="string">&#x27;../tmp&#x27;</span>; <span class="comment">// 확장자가 붙지 않는다..!</span></span><br></pre></td></tr></table></figure><ul><li>상위 디렉터리를 거치는 경우에 기대한 대로 동작하지 않았다</li><li>node_modules에서 tsc-es2020-fix를 이리저리 둘러보다가</li><li>변환이 이뤄지는 로직을 찾았다</li></ul><figure class="highlight js"><figcaption><span>fix.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">contents.replace(</span><br><span class="line">  /(\sfrom |\simport\()([<span class="string">&quot;&#x27;])(\.\/[^&quot;</span><span class="string">&#x27;]+)([&quot;&#x27;</span>])/g,</span><br><span class="line">  (matched, control, q1, <span class="keyword">from</span>, q2) =&gt;</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;control&#125;</span><span class="subst">$&#123;q1&#125;</span><span class="subst">$&#123;resolveDependency(filename, <span class="keyword">from</span>, filenames)&#125;</span><span class="subst">$&#123;q2&#125;</span>`</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>정규식으로 import / export 구문을 찾고 확장자를 붙여주는 것이었다</li><li>나는 여기서 정규식을 수정하면 될 것 같았다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/first-contribution20210608/1.png" alt=" "></p><ul><li>간단하게 위 경우도 찾을 수 있게 수정했다</li></ul><figure class="highlight js"><figcaption><span>fix.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">contents.replace(</span><br><span class="line">  /(\sfrom |\simport\()([<span class="string">&quot;&#x27;])(\.&#123;0,2&#125;\/&#123;0,1&#125;[^&quot;</span><span class="string">&#x27;]+)([&quot;&#x27;</span>])/g,</span><br><span class="line">  (matched, control, q1, <span class="keyword">from</span>, q2) =&gt;</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;control&#125;</span><span class="subst">$&#123;q1&#125;</span><span class="subst">$&#123;resolveDependency(filename, <span class="keyword">from</span>, filenames)&#125;</span><span class="subst">$&#123;q2&#125;</span>`</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>그러자 내가 기대하는 대로 동작하기 시작했다</li><li>이때 너무 기분이 좋아서 원본 레포에 가서 fork하고 자신감 넘치게 PR를 했다</li></ul><h2 id="첫-기여"><a href="#첫-기여" class="headerlink" title="첫 기여"></a>첫 기여</h2><ul><li>PR을 보내고 얼마 지나지 않아 답변이 왔다</li><li>테스트를 추가해 달라였는데, 나는 엄청 당황했다 ㅋㅋㅋ</li><li>테스트 케이스인 파일을 추가하고 <code>jest -u</code>를 돌려달라는데</li><li><strong>jest</strong>부터 몰라서 jest 공부도 하고..</li><li>프로젝트 구조도 잘 모르는데, 어찌어찌 내가 생각하는 대로 파일 추가하고 테스트 한 다음에</li><li>내 PR을 적용하기 전과 후 결과를 스샷 찍어서 답글을 달았다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/first-contribution20210608/2.png" alt=" "></p><ul><li>괜찮아 보인다며 내 PR이 병합됐다!!</li><li>내 변경사항으로 모듈이 업데이트되고, 뭔가 기분이 좋았다</li></ul><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><ul><li>처음 모르는 레포에 가서 PR을 했다</li><li>PR하고 피드백받고, 테스트 코드 추가하면서 엄청 떨렸다</li><li>그러면서 기여를 어떻게 해야하는지 찾아보고</li><li><a href="https://github.com/sindresorhus/.github/blob/main/contributing.md">https://github.com/sindresorhus/.github/blob/main/contributing.md</a></li><li>엄청난 오픈소스 개발자 깃허브도 찾고,,</li><li>기여를 어떻게 해야 하는지에 대한 문서에</li><li><strong>fork 한 다음에 master 브랜치 작업하고 PR를 보내지 마라</strong>라는 항목이 있어서 부끄러워졌다..</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/antongolub/tsc-es2020-fix/pull/9">https://github.com/antongolub/tsc-es2020-fix/pull/9</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/contribution/">contribution</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/08/first-contribution/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>블로그 댓글 시스템 disqus에서 utterances로 바꾸기</title>
      <link>https://chinsun9.github.io/2021/06/08/blog-comment-migration-from-disqus-to-utterances/</link>
      <guid>https://chinsun9.github.io/2021/06/08/blog-comment-migration-from-disqus-to-utterances/</guid>
      <pubDate>Tue, 08 Jun 2021 07:46:02 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/preview.png" alt=" "></p><ul><li>disqus에 달린 댓글을 utterances가 읽을 수 있게 이슈 생성하기</li><li>자문자답하는 것처럼 하나의 계정으로 달리지만 댓글이 없어지지 않는 게 의미가 크다..!</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/9.png" alt=" "></p><ul><li>이런 형식이 utterances가 사용하는 포맷이다</li><li>이 포맷과 동일하게 수동으로 이슈를 등록하는 것도 좋은? 방법이다</li></ul><h2 id="하는-법"><a href="#하는-법" class="headerlink" title="하는 법"></a>하는 법</h2><h3 id="환경"><a href="#환경" class="headerlink" title="환경"></a>환경</h3><ul><li>windows 10</li><li>나는 hexo, icarus theme를 사용하고 있다</li><li>hexo version ; 5.0.0</li><li>hexo-theme-icarus version ; 4.0.1</li></ul><h3 id="disqus-기존-댓글-가져오기"><a href="#disqus-기존-댓글-가져오기" class="headerlink" title="disqus 기존 댓글 가져오기"></a>disqus 기존 댓글 가져오기</h3><ul><li>블로그에 댓글 몇 개 없지만 없는 만큼 너무 소중해서 같이 옮긴다</li></ul><blockquote><p><a href="https://lazywinadmin.com/2019/04/moving_blog_comments.html">https://lazywinadmin.com/2019/04/moving_blog_comments.html</a></p></blockquote><ul><li>위 글을 따라가면서 블로그 댓글 시스템 disqus에서 utterances로 바꿔보자</li><li>위 글에서는 파워셸을 통해서 export 한 xml을 조작해서 utterances에서 사용하는 이슈로 등록해준다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/3.png" alt=" "></p><ul><li>disqus에 로그인한 상태로</li><li><a href="https://chinsung.disqus.com/admin/discussions/export/">https://chinsung.disqus.com/admin/discussions/export/</a></li><li>위 링크로 접속해서 버튼을 누르면 된다</li><li>버튼을 누르면 내 요청이 큐가 되었다고 하면서 결과를 이메일로 보내준다고 한다</li><li>나 같은 경우 바로 이메일이 왔다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/4.png" alt=" "></p><ul><li>링크를 눌러 다운로드하자</li><li>압축을 풀면 xml 파일이 나온다</li><li>앞으로의 내용은 이 xml 파일을 읽어서 작업한다</li></ul><h3 id="disqus-댓글-정제하기"><a href="#disqus-댓글-정제하기" class="headerlink" title="disqus 댓글 정제하기"></a>disqus 댓글 정제하기</h3><ul><li>참고로 나는 파워셸 커맨드를 잘 모른다</li><li>그대로 따라 하다가 내가 겪었던 문제들이 몇 가지 있었다</li><li>원본 글에서는 커맨드에 대해 블록을 나눠서 잘 설명해준다</li><li>나는 설명보다는 내가 어떤 문제를 만나서 코드를 어떻게 수정했고</li><li>성공한 코드를 마지막에 통짜로 첨부하겠다</li></ul><ul><li>파워셸을 관리자 권한으로 실행한다</li><li>편한 작업을 위해 cd 명령으로 xml이 있는 위치로 이동한다</li><li>나는 파워셸 스크립트(foo.ps1)를 만들어서 실행하는 방법으로 했다</li><li>실행은 <code>.\myPsScript.ps1</code> 이렇게 앞에 <code>.\</code>을 붙여 실행할 수 있다</li></ul><h4 id="파워셸-시크립트-실행-활성화"><a href="#파워셸-시크립트-실행-활성화" class="headerlink" title="파워셸 시크립트 실행 활성화"></a>파워셸 시크립트 실행 활성화</h4><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/5.png" alt=" "></p><ul><li>파워셸 스크립트를 실행하려면 실행 정책을 변경해야 한다</li></ul><figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> AllSigned</span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned</span><br></pre></td></tr></table></figure><ul><li>변경하시겠습니까? 물어보면 Y로 답하면 된다</li></ul><h4 id="인코딩-문제"><a href="#인코딩-문제" class="headerlink" title="인코딩 문제"></a>인코딩 문제</h4><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/6.png" alt=" "></p><ul><li>파일을 읽는 것부터 실패했다</li></ul><figure class="highlight ps1"><figcaption><span>new1.ps1</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Load the file</span></span><br><span class="line"><span class="comment"># $Disqus = Get-Content -Path .\origin.xml</span></span><br><span class="line"><span class="variable">$Disqus</span> = <span class="built_in">Get-Content</span> <span class="literal">-Path</span> .\origin.xml <span class="literal">-encoding</span> UTF8 <span class="comment"># 여기 -encoding UTF8 추가</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cast the file to XML format</span></span><br><span class="line"><span class="variable">$DisqusXML</span> = ([<span class="built_in">xml</span>]<span class="variable">$Disqus</span>).disqus</span><br><span class="line"></span><br><span class="line"><span class="comment"># Output result</span></span><br><span class="line"><span class="variable">$DisqusXML</span></span><br></pre></td></tr></table></figure><ul><li><code>-encoding UTF8</code>을 추가해준다</li></ul><h4 id="필터링-문제"><a href="#필터링-문제" class="headerlink" title="필터링 문제"></a>필터링 문제</h4><figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$AllThreads</span> = <span class="variable">$AllThreads</span> |</span><br><span class="line">    <span class="built_in">Where-Object</span> <span class="literal">-FilterScript</span> &#123;</span><br><span class="line">        <span class="variable">$_</span>.link <span class="operator">-match</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">          \.io\/\d&#123;4&#125;\/.+html<span class="variable">$</span>|</span></span><br><span class="line"><span class="string">          \.com\/\d&#123;4&#125;\/.+html<span class="variable">$</span>|</span></span><br><span class="line"><span class="string">          \.com\/p\/.+html<span class="variable">$</span>|</span></span><br><span class="line"><span class="string">          \.io\/minimal-mistakes\/\d&#123;4&#125;\/.+html<span class="variable">$</span>|</span></span><br><span class="line"><span class="string">          \.io\/powershell\/\d&#123;4&#125;\/.+html<span class="variable">$</span>|</span></span><br><span class="line"><span class="string">          \.io\/usergroup\/\d&#123;4&#125;\/.+html<span class="variable">$</span>&quot;</span> <span class="operator">-and</span></span><br><span class="line">        <span class="variable">$_</span>.link <span class="operator">-notmatch</span> <span class="string">&quot;googleusercontent\.com&quot;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>문제까지는 아니고, 글을 잘 안 읽고 그냥 코드를 복붙하다 보니까</li><li>글쓴이에 상황에 맞춰진 조건을 그대로 사용해 생긴 문제였다</li><li>저 코드를 내 상황에서 돌리면 모든 쓰레드가 조건에 충족하지 않아 결과가 빈 배열이다</li><li>나는 필터링이 필요하지 않았다 그래서 이 과정은 생략했다</li></ul><h4 id="개인-설정-문제"><a href="#개인-설정-문제" class="headerlink" title="개인 설정 문제"></a>개인 설정 문제</h4><figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Define Github commands default params</span></span><br><span class="line"><span class="variable">$GithubSplat</span> = <span class="selector-tag">@</span>&#123;</span><br><span class="line">    OwnerName = <span class="string">&#x27;lazywinadmin&#x27;</span></span><br><span class="line">    RepositoryName = <span class="string">&#x27;lazywinadmin.github.io&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$BlogUrl</span> = <span class="string">&#x27;https://lazywinadmin.com&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>코드 좀 보고 복붙하자…</li><li>남의 레포를 업데이트할 권한이 없어서 망정이지…</li></ul><figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Define Github commands default params</span></span><br><span class="line"><span class="variable">$GithubSplat</span> = <span class="selector-tag">@</span>&#123;</span><br><span class="line">    OwnerName = <span class="string">&#x27;chinsun9&#x27;</span></span><br><span class="line">    RepositoryName = <span class="string">&#x27;chinsun9.github.io&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$BlogUrl</span> = <span class="string">&#x27;https://chinsun9.github.io/&#x27;</span> <span class="comment"># 주의! 마지막 슬래시 넣기!</span></span><br></pre></td></tr></table></figure><ul><li>내 환경에 맞게 적절히 수정해준다</li></ul><h4 id="github-personal-access-token-발급-받기"><a href="#github-personal-access-token-발급-받기" class="headerlink" title="github personal access token 발급 받기"></a>github personal access token 발급 받기</h4><ul><li>파워셸에서 github api를 통해 이슈를 자동 생성한다</li><li>github api를 사용하기 위해서는 토큰이 필요하다</li><li>github에 로그인한 상태로</li><li><a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a></li><li>에 접속해서 <code>Generate new token</code> 버튼을 누른다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/7.png" alt=" "></p><ul><li>note를 적당히 작성하고</li><li>repo 전체 권한을 가지도록 생성한다</li><li>생성된 키를 복사한다</li></ul><h4 id="완성-코드"><a href="#완성-코드" class="headerlink" title="완성 코드"></a>완성 코드</h4><ul><li>내가 사용한 코드이다</li><li>실행할 때는 관리자 권한으로 파워셸을 실행시켜야 한다</li><li>가장 상위에 개인이 설정해야 하는 변수들을 몰아놨다</li><li>해당 변수들은 전부 자신에 맞게 수정한 다음 실행해보아야 한다</li><li>특히 RepositoryName은 일회용으로 사용할 레포를 생성하고 한번 테스트해보는 것을 추천한다</li><li>혹시나 잘못된 이슈가 엄청나게 생성될 수 있기 때문이다</li><li>일회용 레포를 하나 만들고 테스트해보고 진짜 레포에 적용하는 게 좋을 것 같다</li><li>파워셸에서 github api를 사용하기 위한 powershellforgithub 모듈을 다운로드하는 코드가 4번째 라인에 있다</li><li>코드를 실행하면 뭐라 뭐라 설치할 건지 물어보는데 모두 Y로 답하면 된다</li></ul><ul><li>utterances는 공개 레포에서 작동하니까 별도 레포를 만들지 않고,</li><li>블로그의 본체인 chinsun9.github.io 레포를 그냥 사용했다</li></ul><figure class="highlight ps1"><figcaption><span>complete code</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 출처 ; https://lazywinadmin.com/2019/04/moving_blog_comments.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># First fetch the module from the PowerShell Gallery</span></span><br><span class="line"><span class="built_in">Install-Module</span> <span class="literal">-Name</span> powershellforgithub <span class="literal">-scope</span> currentuser <span class="literal">-verbose</span></span><br><span class="line"><span class="comment"># Import it</span></span><br><span class="line"><span class="built_in">Import-Module</span> <span class="literal">-Name</span> powershellforgithub</span><br><span class="line"></span><br><span class="line"><span class="comment">### 개인 설정 시작 ###</span></span><br><span class="line"><span class="variable">$filePath</span> = <span class="string">&#x27;.\origin.xml&#x27;</span> <span class="comment"># disqus export xml filepath</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define Github commands default params</span></span><br><span class="line"><span class="variable">$GithubSplat</span> = <span class="selector-tag">@</span>&#123;</span><br><span class="line">    OwnerName      = <span class="string">&#x27;chinsun9&#x27;</span> <span class="comment"># github username</span></span><br><span class="line">    RepositoryName = <span class="string">&#x27;chinsun9.github.io&#x27;</span> <span class="comment"># reponame ; 처음 테스트할 땐 일회용 레포하나 만들고 결과가 어떻게 나오나 확인해자</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$BlogUrl</span> = <span class="string">&#x27;https://chinsun9.github.io/&#x27;</span> <span class="comment"># blog url ; 마지막 슬래시 있어야함!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify our Github Token</span></span><br><span class="line"><span class="variable">$key</span> = <span class="string">&#x27;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#x27;</span> <span class="comment"># 깃허브에서 발급한 personal access token!!</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$IssueLabel</span> = <span class="string">&#x27;blog comments&#x27;</span> <span class="comment"># 라벨 설정</span></span><br><span class="line"><span class="comment">### 개인 설정 끝 ###</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load the file</span></span><br><span class="line"><span class="variable">$Disqus</span> = <span class="built_in">Get-Content</span> <span class="literal">-Path</span> <span class="variable">$filePath</span> <span class="literal">-encoding</span> UTF8</span><br><span class="line"></span><br><span class="line"><span class="comment"># Cast the file to XML format</span></span><br><span class="line"><span class="variable">$DisqusXML</span> = ([<span class="built_in">xml</span>]<span class="variable">$Disqus</span>).disqus</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 코멘트 작업</span></span><br><span class="line"><span class="comment"># Retrieve all Comments</span></span><br><span class="line"><span class="variable">$AllComments</span> = <span class="variable">$DisqusXML</span>.post</span><br><span class="line"></span><br><span class="line"><span class="comment"># Retrieve properties available for each comments</span></span><br><span class="line"><span class="variable">$Properties</span> = <span class="variable">$AllComments</span> | <span class="built_in">Get-Member</span> <span class="literal">-MemberType</span> Property</span><br><span class="line"></span><br><span class="line"><span class="comment"># Process each Comments</span></span><br><span class="line"><span class="variable">$AllComments</span> = <span class="variable">$AllComments</span> | <span class="built_in">Foreach-Object</span> <span class="literal">-process</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Store the current comment</span></span><br><span class="line">    <span class="variable">$Comment</span> = <span class="variable">$_</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create Hashtable to store properties of the current comment</span></span><br><span class="line">    <span class="variable">$Post</span> = <span class="selector-tag">@</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Go through each properties of each comments</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$prop</span> <span class="keyword">in</span> <span class="variable">$Properties</span>.name) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$prop</span> <span class="operator">-eq</span> <span class="string">&#x27;id&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment"># Capture Unique IDs</span></span><br><span class="line">            <span class="variable">$Post</span>.DsqID = <span class="variable">$Comment</span>.id[<span class="number">0</span>]</span><br><span class="line">            <span class="variable">$Post</span>.ID = <span class="variable">$Comment</span>.id[<span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$prop</span> <span class="operator">-eq</span> <span class="string">&#x27;author&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment"># Author information</span></span><br><span class="line">            <span class="variable">$Post</span>.AuthorName = <span class="variable">$Comment</span>.author.name</span><br><span class="line">            <span class="variable">$Post</span>.AuthorIsAnonymous = <span class="variable">$Comment</span>.author.isanonymous</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$prop</span> <span class="operator">-eq</span> <span class="string">&#x27;thread&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment"># Here is the important data about the</span></span><br><span class="line">            <span class="comment">#  thread the comment belong to</span></span><br><span class="line">            <span class="variable">$Post</span>.ThreadId = <span class="variable">$Comment</span>.thread.id</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$prop</span> <span class="operator">-eq</span> <span class="string">&#x27;message&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable">$Post</span>.Message = <span class="variable">$Comment</span>.message.<span class="string">&#x27;#cdata-section&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment"># Other properties</span></span><br><span class="line">            <span class="variable">$Post</span>.<span class="variable">$prop</span> = (<span class="variable">$Comment</span> |</span><br><span class="line">                <span class="built_in">Select-Object</span> <span class="literal">-ExpandProperty</span> <span class="variable">$prop</span> ) <span class="operator">-replace</span> <span class="string">&#x27;`r`n&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># Keep the original comment data structure if we need it later</span></span><br><span class="line">        <span class="variable">$Post</span>.raw = <span class="variable">$Comment</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># Return a PowerShell object for the current comment</span></span><br><span class="line">    <span class="built_in">New-Object</span> <span class="literal">-TypeName</span> PSObject <span class="literal">-Property</span> <span class="variable">$Post</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 쓰레드 작업</span></span><br><span class="line"><span class="comment"># Retrieve threads</span></span><br><span class="line"><span class="variable">$AllThreads</span> = <span class="variable">$DisqusXML</span>.thread</span><br><span class="line"></span><br><span class="line"><span class="comment"># Retrieve Thread properties</span></span><br><span class="line"><span class="variable">$Properties</span> = <span class="variable">$AllThreads</span> | <span class="built_in">Get-Member</span> <span class="literal">-MemberType</span> Property</span><br><span class="line"></span><br><span class="line"><span class="comment"># Process each threads</span></span><br><span class="line"><span class="variable">$AllThreads</span> = <span class="variable">$AllThreads</span> | <span class="built_in">Foreach-Object</span> <span class="literal">-process</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Capture Current ThreadItem</span></span><br><span class="line">    <span class="variable">$ThreadItem</span> = <span class="variable">$_</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create Hashtable for our final object</span></span><br><span class="line">    <span class="variable">$ThreadObj</span> = <span class="selector-tag">@</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Go through each properties of each threads</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$prop</span> <span class="keyword">in</span> <span class="variable">$Properties</span>.name) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$prop</span> <span class="operator">-eq</span> <span class="string">&#x27;id&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment"># Thread ID</span></span><br><span class="line">            <span class="variable">$ThreadObj</span>.ID = <span class="variable">$ThreadItem</span>.id[<span class="number">0</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$prop</span> <span class="operator">-eq</span> <span class="string">&#x27;author&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment"># Author</span></span><br><span class="line">            <span class="variable">$ThreadObj</span>.AuthorName = <span class="variable">$ThreadItem</span>.author.name</span><br><span class="line">            <span class="variable">$ThreadObj</span>.AuthorIsAnonymous = <span class="variable">$ThreadItem</span>.author.isanonymous</span><br><span class="line">            <span class="variable">$ThreadObj</span>.AuthorUsername = <span class="variable">$ThreadItem</span>.author.username</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$prop</span> <span class="operator">-eq</span> <span class="string">&#x27;message&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable">$ThreadObj</span>.Message = <span class="variable">$ThreadItem</span>.message.<span class="string">&#x27;#cdata-section&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$prop</span> <span class="operator">-eq</span> <span class="string">&#x27;category&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable">$ThreadObj</span>.Category = (<span class="variable">$ThreadItem</span> |</span><br><span class="line">                <span class="built_in">Select-Object</span> <span class="literal">-ExpandProperty</span> <span class="variable">$prop</span>).id</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment"># Other properties</span></span><br><span class="line">            <span class="variable">$ThreadObj</span>.<span class="variable">$prop</span> = (<span class="variable">$ThreadItem</span> |</span><br><span class="line">                <span class="built_in">Select-Object</span> <span class="literal">-ExpandProperty</span> <span class="variable">$prop</span>) <span class="operator">-replace</span> <span class="string">&#x27;`r`n&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$ThreadObj</span>.raw = <span class="variable">$ThreadItem</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># Return a PowerShell object for the current ThreadItem</span></span><br><span class="line">    <span class="built_in">New-Object</span> <span class="literal">-TypeName</span> PSObject <span class="literal">-Property</span> <span class="variable">$ThreadObj</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$AllThreads</span> = <span class="variable">$AllThreads</span> |</span><br><span class="line"><span class="built_in">Select-Object</span> <span class="literal">-Property</span> *,</span><br><span class="line"><span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;link2&#x27;</span>; E = &#123;</span><br><span class="line">        <span class="variable">$_</span>.link <span class="operator">-replace</span> <span class="string">&quot;<span class="variable">$</span>(<span class="variable">$BlogUrl</span>)&quot;</span> &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;title2&#x27;</span>; E = &#123;</span><br><span class="line">        <span class="variable">$_</span>.title &#125;</span><br><span class="line">&#125; |</span><br><span class="line"><span class="built_in">Group-Object</span> <span class="literal">-Property</span> link2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$ThreadsUpdated</span> = <span class="variable">$AllThreads</span> |</span><br><span class="line"><span class="built_in">Sort-Object</span> <span class="literal">-Property</span> count |</span><br><span class="line"><span class="built_in">ForEach-Object</span> <span class="literal">-Process</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Capture current post</span></span><br><span class="line">    <span class="variable">$CurrentPost</span> = <span class="variable">$_</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># if one comment is found</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$CurrentPost</span>.count <span class="operator">-eq</span> <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$CurrentPost</span>.group.title2 <span class="operator">-notmatch</span> <span class="string">&#x27;^http&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment"># Add REALTitle property</span></span><br><span class="line">            <span class="variable">$RealTitle</span> = <span class="variable">$CurrentPost</span>.group.title2</span><br><span class="line">            <span class="comment"># output object</span></span><br><span class="line">            <span class="variable">$CurrentPost</span>.group |</span><br><span class="line">            <span class="built_in">Select-Object</span> <span class="literal">-Property</span> *,</span><br><span class="line">            <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;RealTitle&#x27;</span>; e = &#123; <span class="variable">$RealTitle</span> &#125; &#125;,</span><br><span class="line">            <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;ThreadCount&#x27;</span>; e = &#123; <span class="variable">$CurrentPost</span>.count &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$CurrentPost</span>.group.title2 <span class="operator">-match</span> <span class="string">&#x27;^http&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment"># lookup online</span></span><br><span class="line">            <span class="variable">$result</span> = <span class="built_in">Invoke-webrequest</span> <span class="literal">-Uri</span> <span class="variable">$CurrentPost</span>.group.link <span class="literal">-Method</span> Get</span><br><span class="line">            <span class="comment"># add REALTitle prop</span></span><br><span class="line">            <span class="variable">$RealTitle</span> = <span class="variable">$result</span>.ParsedHtml.title</span><br><span class="line">            <span class="comment"># output object</span></span><br><span class="line">            <span class="variable">$CurrentPost</span>.group |</span><br><span class="line">            <span class="built_in">Select-Object</span> <span class="literal">-Property</span> *,</span><br><span class="line">            <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;RealTitle&#x27;</span>; e = &#123; <span class="variable">$RealTitle</span> &#125; &#125;,</span><br><span class="line">            <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;ThreadCount&#x27;</span>; e = &#123; <span class="variable">$CurrentPost</span>.count &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$CurrentPost</span>.count <span class="operator">-gt</span> <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$CurrentPost</span>.group.title2 <span class="operator">-notmatch</span> <span class="string">&#x27;^http&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment"># add REALTitle prop</span></span><br><span class="line">            <span class="variable">$RealTitle</span> = (<span class="variable">$CurrentPost</span>.group.title2 |</span><br><span class="line">                <span class="built_in">Where-Object</span> <span class="literal">-FilterScript</span> &#123;</span><br><span class="line">                    <span class="variable">$_</span> <span class="operator">-notmatch</span> <span class="string">&#x27;^http&#x27;</span> &#125; |</span><br><span class="line">                <span class="built_in">Select-Object</span> <span class="literal">-first</span> <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Output object</span></span><br><span class="line">            <span class="variable">$CurrentPost</span>.group |</span><br><span class="line">            <span class="built_in">Select-Object</span> <span class="literal">-Property</span> *,</span><br><span class="line">            <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;RealTitle&#x27;</span>; e = &#123; <span class="variable">$RealTitle</span> &#125; &#125;,</span><br><span class="line">            <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;ThreadCount&#x27;</span>; e = &#123; <span class="variable">$CurrentPost</span>.count &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span> (<span class="variable">$CurrentPost</span>.group.title2 <span class="operator">-match</span> <span class="string">&#x27;^http&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment"># get url of one</span></span><br><span class="line">            <span class="variable">$u</span> = (<span class="variable">$CurrentPost</span>.group |</span><br><span class="line">                <span class="built_in">Where-Object</span> &#123;</span><br><span class="line">                    <span class="variable">$_</span>.title2 <span class="operator">-match</span> <span class="string">&#x27;^http&#x27;</span> &#125; |</span><br><span class="line">                <span class="built_in">Select-Object</span> <span class="literal">-first</span> <span class="number">1</span>).link</span><br><span class="line"></span><br><span class="line">            <span class="comment"># lookup online</span></span><br><span class="line">            <span class="variable">$result</span> = <span class="built_in">Invoke-webrequest</span> <span class="literal">-Uri</span> <span class="variable">$u</span> <span class="literal">-Method</span> Get</span><br><span class="line"></span><br><span class="line">            <span class="comment"># add REALTitle prop</span></span><br><span class="line">            <span class="variable">$RealTitle</span> = <span class="variable">$result</span>.ParsedHtml.title</span><br><span class="line">            <span class="comment"># output object</span></span><br><span class="line">            <span class="variable">$CurrentPost</span>.group |</span><br><span class="line">            <span class="built_in">Select-Object</span> *, <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;RealTitle&#x27;</span>; e = &#123; <span class="variable">$RealTitle</span> &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment"># add REALTitle prop</span></span><br><span class="line">            <span class="variable">$RealTitle</span> = <span class="string">&#x27;unknown&#x27;</span></span><br><span class="line">            <span class="comment"># output object</span></span><br><span class="line">            <span class="variable">$CurrentPost</span>.group | <span class="built_in">Select-Object</span> *, <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;RealTitle&#x27;</span>; e = &#123; <span class="variable">$RealTitle</span> &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$AllTogether</span> = <span class="variable">$AllComments</span> | <span class="built_in">ForEach-Object</span> <span class="literal">-Process</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$CommentItem</span> = <span class="variable">$_</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$ThreadInformation</span> = <span class="variable">$ThreadsUpdated</span> |</span><br><span class="line">    <span class="built_in">Where-Object</span> <span class="literal">-FilterScript</span> &#123;</span><br><span class="line">        <span class="variable">$_</span>.id <span class="operator">-match</span> <span class="variable">$CommentItem</span>.ThreadId</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$CommentItem</span> |</span><br><span class="line">    <span class="built_in">Select-Object</span> <span class="literal">-Property</span> *,</span><br><span class="line">    <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;ThreadTitle&#x27;</span>; E = &#123; <span class="variable">$ThreadInformation</span>.Realtitle &#125; &#125;,</span><br><span class="line">    <span class="selector-tag">@</span>&#123;L = <span class="string">&#x27;ThreadLink&#x27;</span>; E = &#123; <span class="variable">$ThreadInformation</span>.link2 &#125; &#125;</span><br><span class="line">&#125; |</span><br><span class="line"><span class="built_in">Group-Object</span> <span class="literal">-Property</span> ThreadLink |</span><br><span class="line"><span class="built_in">Where-Object</span> <span class="literal">-FilterScript</span> &#123; <span class="variable">$_</span>.name &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 이슈달기 작업</span></span><br><span class="line"><span class="variable">$KeySec</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="variable">$key</span> <span class="literal">-AsPlainText</span> <span class="literal">-Force</span></span><br><span class="line"><span class="variable">$cred</span> = <span class="built_in">New-Object</span> System.Management.Automation.PSCredential (<span class="string">&#x27;username_is_ignored&#x27;</span>, <span class="variable">$KeySec</span>)</span><br><span class="line"><span class="comment">#$cred = Get-Credential -UserName $null</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set Connection and configuration</span></span><br><span class="line"><span class="built_in">Set-GitHubAuthentication</span> <span class="literal">-Credential</span> <span class="variable">$cred</span></span><br><span class="line"><span class="built_in">Set-GitHubConfiguration</span> <span class="literal">-DisableLogging</span> <span class="literal">-DisableTelemetry</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Retrieve issues</span></span><br><span class="line"><span class="comment">#$issues = Get-GitHubIssue -Uri &#x27;https://github.com/lazywinadmin/lazywinadmin.github.io&#x27;</span></span><br><span class="line"><span class="variable">$issues</span> = <span class="built_in">Get-GitHubIssue</span> @githubsplat</span><br><span class="line"></span><br><span class="line"><span class="comment"># Process each threads with their comments</span></span><br><span class="line"><span class="variable">$AllTogether</span> |</span><br><span class="line"><span class="built_in">Sort-Object</span> name <span class="literal">-Descending</span> |</span><br><span class="line"><span class="built_in">ForEach-Object</span> <span class="literal">-Process</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Capture current thread</span></span><br><span class="line">    <span class="variable">$BlogPost</span> = <span class="variable">$_</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Issue Title, replace the first / and</span></span><br><span class="line">    <span class="comment">#  remove the html at the end of the name</span></span><br><span class="line">    <span class="variable">$IssueTitle</span> = <span class="variable">$BlogPost</span>.group.ThreadLink |</span><br><span class="line">    <span class="built_in">select-object</span> <span class="literal">-first</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># lookup for existing issue</span></span><br><span class="line">    <span class="variable">$IssueObject</span> = <span class="variable">$issues</span> |</span><br><span class="line">    <span class="built_in">Where-Object</span> <span class="literal">-filterscript</span> &#123; <span class="variable">$_</span>.title <span class="operator">-eq</span> <span class="variable">$IssueTitle</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="operator">-not</span> <span class="variable">$IssueObject</span>) &#123;</span><br><span class="line">        <span class="comment"># Build Header of the post</span></span><br><span class="line">        <span class="variable">$IssueHeader</span> = <span class="variable">$BlogPost</span>.group.ThreadTitle |</span><br><span class="line">        <span class="built_in">select-object</span> <span class="literal">-first</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Define blog post link</span></span><br><span class="line">        <span class="variable">$BlogPostLink</span> = <span class="string">&quot;<span class="variable">$</span>(<span class="variable">$BlogUrl</span>)<span class="variable">$</span>(<span class="variable">$BlogPost</span>.name)&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Define body of the issue</span></span><br><span class="line">        <span class="variable">$Body</span> = <span class="string">@&quot;</span></span><br><span class="line"><span class="string"># <span class="variable">$IssueHeader</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[<span class="variable">$BlogPostLink</span>](<span class="variable">$BlogPostLink</span>)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;!--</span></span><br><span class="line"><span class="string">Imported via PowerShell on <span class="variable">$</span>(Get-Date -Format o)</span></span><br><span class="line"><span class="string">--&gt;</span></span><br><span class="line"><span class="string">&quot;@</span></span><br><span class="line">        <span class="comment"># Create an issue</span></span><br><span class="line">        <span class="variable">$IssueObject</span> = <span class="built_in">New-GitHubIssue</span> @githubsplat `</span><br><span class="line">            <span class="literal">-Title</span> <span class="variable">$IssueTitle</span> `</span><br><span class="line">            <span class="literal">-Body</span> <span class="variable">$body</span> `</span><br><span class="line">            <span class="literal">-Label</span> <span class="variable">$IssueLabel</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Sort comment by createdAt</span></span><br><span class="line">    <span class="variable">$BlogPost</span>.group |</span><br><span class="line">    <span class="built_in">Where-Object</span> &#123; <span class="variable">$_</span>.isspam <span class="operator">-like</span> <span class="string">&#x27;*false*&#x27;</span> &#125; |</span><br><span class="line">    <span class="built_in">Sort-Object</span> createdAt |</span><br><span class="line">    <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Current comment</span></span><br><span class="line">        <span class="variable">$CurrenComment</span> = <span class="variable">$_</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Author update</span></span><br><span class="line">        <span class="comment">#  we replace my post author name :)</span></span><br><span class="line">        <span class="variable">$AuthorName</span> = <span class="variable">$</span>(<span class="variable">$CurrenComment</span>.AuthorName)</span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable">$AuthorName</span>) &#123;</span><br><span class="line">            <span class="string">&#x27;Xavier C&#x27;</span> &#123; <span class="variable">$AuthorName</span> = <span class="string">&#x27;Francois-Xavier Cat&#x27;</span> &#125;</span><br><span class="line">            default &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Define body of the comment</span></span><br><span class="line">        <span class="variable">$CommentBody</span> = <span class="string">@&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## **Author**: <span class="variable">$AuthorName</span></span></span><br><span class="line"><span class="string">**Posted on**: ``<span class="variable">$</span>(<span class="variable">$CurrenComment</span>.createdAt)``</span></span><br><span class="line"><span class="string"><span class="variable">$</span>(<span class="variable">$CurrenComment</span>.message)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;!--</span></span><br><span class="line"><span class="string">Imported via PowerShell on <span class="variable">$</span>(Get-Date -Format o)</span></span><br><span class="line"><span class="string">Json_original_message:</span></span><br><span class="line"><span class="string"><span class="variable">$</span>(<span class="variable">$CurrenComment</span>|Select-Object -ExcludeProperty raw|convertTo-Json)</span></span><br><span class="line"><span class="string">--&gt;</span></span><br><span class="line"><span class="string">&quot;@</span></span><br><span class="line">        <span class="comment"># Create Comment</span></span><br><span class="line">        <span class="built_in">New-GitHubComment</span> @githubsplat `</span><br><span class="line">            <span class="literal">-Issue</span> <span class="variable">$IssueObject</span>.number `</span><br><span class="line">            <span class="literal">-Body</span> <span class="variable">$CommentBody</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># Close issue</span></span><br><span class="line">    <span class="built_in">Update-GitHubIssue</span> @githubsplat `</span><br><span class="line">        <span class="literal">-Issue</span> <span class="variable">$IssueObject</span>.number `</span><br><span class="line">        <span class="literal">-State</span> Closed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="utterances-설정하기"><a href="#utterances-설정하기" class="headerlink" title="utterances 설정하기"></a>utterances 설정하기</h3><ul><li>너무 간단하다</li><li><a href="https://github.com/apps/utterances">https://github.com/apps/utterances</a></li><li>위 링크로 가서 install 버튼을 누른다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/8.png" alt=" "></p><ul><li>난 특정 레포에만 설치했다</li><li>여기 설정은 언제든지 수정 가능하다</li><li>놀랍게도 끝났다</li><li>내가 사용하는 icarus 테마는 댓글로 discus, utterances 등 여러 타입의 플러그인을 지원해서 config에 추가하면 적용 완료다</li></ul><h3 id="blog-config-설정하기"><a href="#blog-config-설정하기" class="headerlink" title="blog config 설정하기"></a>blog config 설정하기</h3><figure class="highlight yml"><figcaption><span>_config.icarus.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">comment:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">utterances</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">chinsun9/chinsun9.github.io</span></span><br><span class="line">  <span class="attr">issue_term:</span> <span class="string">pathname</span></span><br><span class="line">  <span class="attr">label:</span> <span class="string">blog</span> <span class="string">comments</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">github-light</span></span><br><span class="line">  <span class="attr">crossorigin:</span> <span class="string">anonymous</span></span><br></pre></td></tr></table></figure><ul><li>위처럼 설정한다</li><li>레포는 이슈가 등록된 퍼블릭 레포여야 한다</li><li>내가 사용한 방법을 그대로 따라왔다면 issue_term은 pathname을 사용해야 한다</li><li>label도 등록된 이슈와 동일하게 설정한다</li></ul><h3 id="utterances-css-수정하기-width-100"><a href="#utterances-css-수정하기-width-100" class="headerlink" title="utterances css 수정하기 ; width 100%"></a>utterances css 수정하기 ; width 100%</h3><figure class="highlight css"><figcaption><span>default.styl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.utterances</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>각자 테마 디렉터리로 가서 css 파일에 가서 추가한다</li></ul><h2 id="주의사항"><a href="#주의사항" class="headerlink" title="주의사항"></a>주의사항</h2><h3 id="테마-설정-시"><a href="#테마-설정-시" class="headerlink" title="테마 설정 시"></a>테마 설정 시</h3><ul><li>hexo icarus config에서 utterances 테마를 설정할 때</li><li><code>preferred-color-scheme</code>는 지원하지 않는 것 같다…</li><li>이 값이 올 수 없다며 스키마 오류가 난다 (버전 문제일 수 있음)</li><li><code>github-dark</code>, <code>github-light</code>은 가능하다</li></ul><h3 id="이슈-제목"><a href="#이슈-제목" class="headerlink" title="이슈 제목"></a>이슈 제목</h3><ul><li>utterances에서 이슈와 포스트를 맵핑할 때 여러 옵션이 있다</li><li>맘에 드는 걸로 골르면 된다 (이 글을 그대로 따라왔다면 pathname으로 해야 함!)</li><li>블로그 포스트를 작성하고 수정될 가능성이 있는 값으로 지정하지 않은 게 좋다</li><li>나는 첫 번째 옵션인 <code>Issue title contains page pathname</code>으로 매핑하기로 했다</li><li>참고로 내 블로그 pathname은 <code>/YYYY/MM/DD/post-title</code> 로 구성되어 유니크한 이름을 가질 수 있다</li><li>포스트의 pathname에 한글이 들어가면 이상한 인코딩 된 이슈 제목을 가진다</li><li>앞으로 pathname에 한글이 들어가지 않도록 글을 써야겠다…</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/1.png" alt=" "></p><ul><li>이렇게 되기 싫으면…</li></ul><h2 id="바꾼-이유"><a href="#바꾼-이유" class="headerlink" title="바꾼 이유"></a>바꾼 이유</h2><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-comment-migration-from-disqus-to-utterances20210607/2.png" alt=" "></p><ul><li>disqus를 사용하면 링크가 넣을 수 없다?</li><li>댓글에 포함되어 있는 링크가 disqus를 통해 리디렉트되도록</li><li><code>https://disq.us/url?url=https%3A%2F%2Fchinsun9.github.io%2F2020%2F11%2F18%2Freact-typescirpt...</code></li><li>이렇게 감싸 진다</li><li>근데 문제는 이렇게 감싸진 링크를 클릭하면 연결이 안 된다</li><li>내가 무슨 설정을 잘못한 건지 모르겠지만…</li></ul><ul><li>또, 나는 disqus를 블로그를 하기 전까지 모르고 있었다</li><li>댓글을 달기 위해서 disqus를 가입해야 하는 벽?이 있지 않을까 생각하게 되었다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://lazywinadmin.com/2019/04/moving_blog_comments.html">https://lazywinadmin.com/2019/04/moving_blog_comments.html</a></li><li><a href="https://ppoffice.github.io/hexo-theme-icarus/Plugins/Comment/icarus-user-guide-comment-plugins/#utterances">https://ppoffice.github.io/hexo-theme-icarus/Plugins/Comment/icarus-user-guide-comment-plugins/#utterances</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog/">blog</category>
      
      
      <category domain="https://chinsun9.github.io/tags/disqus/">disqus</category>
      
      <category domain="https://chinsun9.github.io/tags/blog/">blog</category>
      
      <category domain="https://chinsun9.github.io/tags/utterances/">utterances</category>
      
      <category domain="https://chinsun9.github.io/tags/PowerShell/">PowerShell</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/08/blog-comment-migration-from-disqus-to-utterances/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>blog update utterances</title>
      <link>https://chinsun9.github.io/2021/06/08/blog-update-utterances/</link>
      <guid>https://chinsun9.github.io/2021/06/08/blog-update-utterances/</guid>
      <pubDate>Tue, 08 Jun 2021 04:32:07 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-utterances20210608/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-utterances20210608/preview.png" alt=" "></p><ul><li>댓글 시스템을 disqus에서 <strong>utterances</strong>로 수정했다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/08/blog-update-utterances/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>202105 검색 실적</title>
      <link>https://chinsun9.github.io/2021/06/08/202105-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</link>
      <guid>https://chinsun9.github.io/2021/06/08/202105-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</guid>
      <pubDate>Tue, 08 Jun 2021 04:26:59 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202105-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120210608/prev</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202105-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120210608/preview.png" alt=" "></p>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/08/202105-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>slash converter</title>
      <link>https://chinsun9.github.io/2021/06/02/slash-converter/</link>
      <guid>https://chinsun9.github.io/2021/06/02/slash-converter/</guid>
      <pubDate>Wed, 02 Jun 2021 06:03:39 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/slash-converter20210602/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;l</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/slash-converter20210602/preview.png" alt=" "></p><ul><li><a href="https://chinsun9.github.io/slash-converter/">https://chinsun9.github.io/slash-converter/</a></li></ul><ul><li>파일 경로 문자열 변환기를 만들었다</li><li>파일 경로를 적어야 할 때가 생각보다 많은데</li><li>어떤 때는 <code>/</code>를 사용하고</li><li>어떤 때는 <code>\</code>를 사용하고</li><li>또 어떤 때는 <code>\\</code>를 사용한다</li></ul><ul><li>일일이 수정해주기 귀찮을 때가 분명히 있었을 것이다</li></ul><h2 id="변환-코드"><a href="#변환-코드" class="headerlink" title="변환 코드"></a>변환 코드</h2><figure class="highlight ts"><figcaption><span>Main.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> convertSlash = <span class="function">(<span class="params"><span class="keyword">type</span>: <span class="built_in">string</span>, origin: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> origin.replace(<span class="regexp">/[/\\]+/g</span>, <span class="keyword">type</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>슬래시와 백슬래시를 찾아내서 정해진 타입으로 변환한다</li></ul><h2 id="그-외"><a href="#그-외" class="headerlink" title="그 외"></a>그 외</h2><ul><li><code>emotion theme provider</code>를 사용해 테마를 적용해보았다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/chinsun9/slash-converter">https://github.com/chinsun9/slash-converter</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/02/slash-converter/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>blog update dark theme</title>
      <link>https://chinsun9.github.io/2021/06/01/blog-update-dark-theme/</link>
      <guid>https://chinsun9.github.io/2021/06/01/blog-update-dark-theme/</guid>
      <pubDate>Tue, 01 Jun 2021 14:21:19 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-dark-theme20210601/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-dark-theme20210601/preview.png" alt=" "></p><ul><li>캬캬캬</li><li>블로그 dark 테마 적용</li></ul><ul><li><strong>상단 오른쪽 검색 버튼 옆에서 토글 할 수 있다!!</strong></li></ul><h2 id="다크-테마를-적용한-이유"><a href="#다크-테마를-적용한-이유" class="headerlink" title="다크 테마를 적용한 이유"></a>다크 테마를 적용한 이유</h2><ul><li>github 프로필 메인에 dark theme를 토글하는 버튼이 있었는데</li><li>어느샌가 세팅 하위 메뉴로 들어가야 변경이 가능했다</li><li>세팅에서 테마를 고르는데 시스템 테마를 상속받아 보여주는 옵션이 있었다</li><li>궁금해서 공부해보고 블로그에도 적용하게 되었다</li></ul><ul><li>처음 C언어를 배울 때 visual studio 사용했다</li><li>기본 테마가 화이트였다</li><li>기본 테마를 쓰다가 웹 공부를 시작하면서 유튜버들 세팅을 따라 하다가 다크 테마를 쓰게 됐다</li><li>써보니까 괜찮고 좋은 것 같다!</li></ul><h2 id="환경"><a href="#환경" class="headerlink" title="환경"></a>환경</h2><ul><li>나는 icarus default theme를 사용 중이다</li></ul><h2 id="적용-방법"><a href="#적용-방법" class="headerlink" title="적용 방법"></a>적용 방법</h2><ul><li>기본적으로 body에 dark class 가 있으면 다크 테마에 맞는 css로 오버라이드하는 방식이다</li></ul><h3 id="css-추가"><a href="#css-추가" class="headerlink" title="css 추가"></a>css 추가</h3><ul><li>dark theme에 맞게 새로 추가할 css는</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-dark-theme20210601/1.png" alt=" "></p><ul><li>icarus theme 디렉터리를 기준으로 <code>source/css</code> 아래에 <code>dark.styl</code>이름으로 파일을 하나 생성했다</li><li>앞으로 나오는 경로는 모두 icarus theme 디렉터리가 기준이다</li></ul><figure class="highlight scss"><figcaption><span>source/css/dark.styl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span><span class="selector-class">.dark</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#1e1e1e</span>;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.navbar</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#3C3C3C</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#d4d4d4</span>;</span><br><span class="line"></span><br><span class="line">        <span class="selector-class">.navbar-menu</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: transparent <span class="meta">!important</span>;</span><br><span class="line"></span><br><span class="line">            <span class="selector-class">.navbar-item</span> &#123;</span><br><span class="line">                <span class="attribute">color</span>: inherit;</span><br><span class="line"></span><br><span class="line">                &amp;<span class="selector-pseudo">:hover</span>, &amp;<span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">                    <span class="attribute">background-color</span>: <span class="number">#37373D</span>;</span><br><span class="line">                    <span class="attribute">color</span>: <span class="number">#007acc</span>;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><ul><li>어떤 테마 시스템이 있고 그런 게 아니라서 하나하나 수작업으로 바꿔주었다</li><li>body.dark 일 때 css를 오버라이드 할 수 있도록…</li></ul><figure class="highlight scss"><figcaption><span>source/css/style.styl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;./dark.styl&#x27;</span>;</span><br></pre></td></tr></table></figure><ul><li><code>dark.styl</code>을 <code>style.styl</code> 마지막에 임포트 해준다</li><li>그럼 css는 끝!</li></ul><h3 id="토글-버튼-추가"><a href="#토글-버튼-추가" class="headerlink" title="토글 버튼 추가"></a>토글 버튼 추가</h3><ul><li>이제 토글 버튼을 추가해보자</li><li>나는 navbar 상단 오른쪽 검색 버튼 옆에 추가했다</li></ul><figure class="highlight jsx"><figcaption><span>layout/common/navbar.jsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;navbar-end&quot;</span>&gt;</span><br><span class="line">  &lt;button type=<span class="string">&quot;button&quot;</span> id=<span class="string">&quot;toggleTheme&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;navbar-item&quot;</span>&gt;</span><br><span class="line">    hi</span><br><span class="line">  &lt;/button&gt;</span><br></pre></td></tr></table></figure><ul><li><code>layout/common/navbar.jsx</code> 80라인에 <strong>toggleTheme</strong>라는 ID로 추가했다</li><li>이제 버튼에 기능을 넣어줘야 하는데 <code>navbar.jsx</code>에서 기능도 추가하고 싶었는데,</li><li>어떻게 빌드되는지 구조를 잘 몰라서 실패했다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-dark-theme20210601/2.png" alt=" "></p><ul><li>대신 <code>source/js</code> 디렉터리에 <code>theme.js</code> 파일을 하나 추가했다</li></ul><figure class="highlight js"><figcaption><span>theme.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;toggleTheme&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initTheme</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// chk local storage</span></span><br><span class="line">  <span class="keyword">const</span> theme = <span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;theme&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (theme === <span class="string">&#x27;dark&#x27;</span>) &#123;</span><br><span class="line">    <span class="built_in">document</span>.body.classList.add(<span class="string">&#x27;dark&#x27;</span>);</span><br><span class="line">    btn.innerText = <span class="string">&#x27;🌙&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (theme === <span class="string">&#x27;light&#x27;</span>) &#123;</span><br><span class="line">    btn.innerText = <span class="string">&#x27;🌞&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//   visit first time</span></span><br><span class="line">  <span class="keyword">const</span> isDark = <span class="built_in">window</span>.matchMedia(<span class="string">&#x27;(prefers-color-scheme: dark)&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (isDark) <span class="built_in">document</span>.body.classList.add(<span class="string">&#x27;dark&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;theme&#x27;</span>, isDark ? <span class="string">&#x27;dark&#x27;</span> : <span class="string">&#x27;light&#x27;</span>);</span><br><span class="line">  btn.innerText = isDark ? <span class="string">&#x27;🌙&#x27;</span> : <span class="string">&#x27;🌞&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toggleTheme</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`toggle theme`</span>);</span><br><span class="line">  <span class="built_in">document</span>.body.classList.toggle(<span class="string">&#x27;dark&#x27;</span>);</span><br><span class="line">  <span class="built_in">localStorage</span>.setItem(</span><br><span class="line">    <span class="string">&#x27;theme&#x27;</span>,</span><br><span class="line">    <span class="built_in">document</span>.body.classList.contains(<span class="string">&#x27;dark&#x27;</span>) ? <span class="string">&#x27;dark&#x27;</span> : <span class="string">&#x27;light&#x27;</span></span><br><span class="line">  );</span><br><span class="line">  btn.innerText = <span class="built_in">document</span>.body.classList.contains(<span class="string">&#x27;dark&#x27;</span>) ? <span class="string">&#x27;🌙&#x27;</span> : <span class="string">&#x27;🌞&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span></span><br><span class="line">  .matchMedia(<span class="string">&#x27;(prefers-color-scheme: dark)&#x27;</span>)</span><br><span class="line">  .addEventListener(<span class="string">&#x27;change&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> newColorScheme = e.matches ? <span class="string">&#x27;dark&#x27;</span> : <span class="string">&#x27;light&#x27;</span>;</span><br><span class="line">    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;theme&#x27;</span>, newColorScheme);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (newColorScheme === <span class="string">&#x27;dark&#x27;</span>) &#123;</span><br><span class="line">      <span class="built_in">document</span>.body.classList.add(<span class="string">&#x27;dark&#x27;</span>);</span><br><span class="line">      btn.innerText = <span class="string">&#x27;🌙&#x27;</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.body.classList.remove(<span class="string">&#x27;dark&#x27;</span>);</span><br><span class="line">    btn.innerText = <span class="string">&#x27;🌞&#x27;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">btn.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">  toggleTheme();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">initTheme();</span><br></pre></td></tr></table></figure><ul><li>셀럭터로 위에서 추가한 버튼을 가져와서 클릭 이벤트 리스너를 달아줬다</li><li>이제 hexo로 빌드하면서 생성되는 html에 해당 스크립트를 로드하도록 해야 한다</li></ul><h3 id="스크립트-파일-추가"><a href="#스크립트-파일-추가" class="headerlink" title="스크립트 파일 추가"></a>스크립트 파일 추가</h3><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-dark-theme20210601/3.png" alt=" "></p><ul><li><code>layout/common/scripts.jsx</code>에 위에서 만든 <code>theme.js</code>를 등록하면 된다</li></ul><figure class="highlight jsx"><figcaption><span>layout/common/scripts.jsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Fragment&gt;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  &lt;script src=&#123;url_for(<span class="string">&#x27;/js/main.js&#x27;</span>)&#125; defer&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&#123;url_for(<span class="string">&#x27;/js/theme.js&#x27;</span>)&#125; defer&gt;&lt;/script&gt;</span><br><span class="line">&lt;/Fragment&gt;</span><br></pre></td></tr></table></figure><ul><li>56라인 정도 되는 부분에 <code>&lt;script src=&#123;url_for(&#39;/js/theme.js&#39;)&#125; defer&gt;&lt;/script&gt;</code> 추가한다</li><li>마지막으로 hexo 디렉터리로 돌아와서 <code>public/css</code> 하위에 있는 css를 삭제해준다</li><li>이제 <code>hexo generate</code> 하게 되면 css가 갱신되고, 테마 토글 버튼이 달려 있는 html이 생성될 것이다</li></ul><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><ul><li>뿌듯하다</li><li>다 완성하고 자려고 누워서 폰으로 내 블로그를 들어가 봤는데 눈이 편안했다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog/">blog</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog/">blog</category>
      
      <category domain="https://chinsun9.github.io/tags/dark-theme/">dark theme</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/01/blog-update-dark-theme/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>github 404 page clone</title>
      <link>https://chinsun9.github.io/2021/06/01/github-404-page-clone/</link>
      <guid>https://chinsun9.github.io/2021/06/01/github-404-page-clone/</guid>
      <pubDate>Tue, 01 Jun 2021 13:48:54 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-404-page-clone20210601/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-404-page-clone20210601/preview.png" alt=" "></p><ul><li><a href="https://chinsun9.github.io/github-404-page-clone/">https://chinsun9.github.io/github-404-page-clone/</a></li></ul><ul><li>github 404 페이지를 클론해보았다</li><li>마우스 움직임에 따라 원근감 있게 움직이는 이미지들이 재밌었다</li></ul><ul><li>전에 3d 카드 이펙트 만들면서 perspective css 속성을 사용해보았는데, 그때 사용한 코드를 거의 그대로 사용해서 만들 수 있었다</li><li>3d card effect ; <a href="https://github.com/chinsun9/3d-card-effect">https://github.com/chinsun9/3d-card-effect</a></li></ul><ul><li>이미지는 직접 그렸다. 물론 바닥에 대고…</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/chinsun9/github-404-page-clone">https://github.com/chinsun9/github-404-page-clone</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/">클론코딩</category>
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/01/github-404-page-clone/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>깃허브 블로그 느린 웹 해결하기</title>
      <link>https://chinsun9.github.io/2021/05/31/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%8A%90%EB%A6%B0-%EC%9B%B9-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/05/31/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%8A%90%EB%A6%B0-%EC%9B%B9-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 31 May 2021 08:49:23 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%8A%90%EB%A6%B0-%EC%9B%B9-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B020210531/1.png" alt=" "></p><ul><li>2020.01.04 처음 느린 웹 보고서를 확인하고 그냥 방치 했는데…</li><li>나날이 늘어가는 느린 URL들…</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%8A%90%EB%A6%B0-%EC%9B%B9-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B020210531/preview.png" alt=" "></p><ul><li>jsdelivr 적용 후, 지금까지!</li></ul><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>구글 서치 콘솔에서 블로그에 대한 보고서를 보는데, 느린 웹 문제가 있었다</li><li>어떻게 블로그를 빠르게 할 수 있는지 고민해보았다</li></ul><ul><li><a href="https://derek-mun.com/contents/Contents-Github-page-image-loading-speed.html">https://derek-mun.com/contents/Contents-Github-page-image-loading-speed.html</a></li><li>그러다가 이미지에 cdn을 적용하면 속도를 개선할 수 있겠다는 생각을 하였다</li></ul><h2 id="내-환경"><a href="#내-환경" class="headerlink" title="내 환경"></a>내 환경</h2><ul><li>hexo 프레임워크로 블로그를 운영하고 있다</li><li>블로그 글이 점점 많아지고, 글에 많은 이미지를 포함하는 글도 있다</li></ul><h2 id="해결-jsdelivr-적용"><a href="#해결-jsdelivr-적용" class="headerlink" title="해결 : jsdelivr 적용"></a>해결 : jsdelivr 적용</h2><ul><li>jsdelivr는 npm과 github에서 사용할 수 있는 무료 CDN이다</li><li>오픈소스 프로젝트를 위한 CDN이라고 한다</li><li>jsdelivr는 아무런 설정 없이 누구나(npm, github 사용자) 사용할 수 있는 게 장점이다</li></ul><h3 id="jsdelivr-사용법"><a href="#jsdelivr-사용법" class="headerlink" title="jsdelivr 사용법"></a>jsdelivr 사용법</h3><blockquote><p><a href="https://chinsun9.github.io/images/web-dark-theme20210531/preview.png">https://chinsun9.github.io/images/web-dark-theme20210531/preview.png</a> (원본)<br><a href="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/web-dark-theme20210531/preview.png">https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/web-dark-theme20210531/preview.png</a> (CDN 적용)</p></blockquote><ul><li><a href="https://cdn.jsdelivr.net/gh/%60%7Busername%7D%60/%60%7Breponame%7D%60@%7B%60branch%60%7D/%60%7Bfilepath%7D%60">https://cdn.jsdelivr.net/gh/`{username}`/`{reponame}`@{`branch`}/`{filepath}`</a></li><li>사용 방법이 엄청나게 간단하다</li></ul><ul><li>참고 ; 변환도구 ; <a href="https://www.jsdelivr.com/github">https://www.jsdelivr.com/github</a></li></ul><h3 id="hexo에서-적용"><a href="#hexo에서-적용" class="headerlink" title="hexo에서 적용"></a>hexo에서 적용</h3><ul><li>포스트를 작성할 때 cdn을 적용한 url을 적어줘도 상관은 없지만,</li><li>이미 작성된 글들에 대해 수행해야 하는 불편함이 있다</li><li>hexo 모듈을 살펴보니 <code>node_modules/hexo/lib/plugins/filter/after_post_render/index.js</code>에서 추가적인 작업을 해줄 수 있다는 것을 알게 되었다</li></ul><figure class="highlight js"><figcaption><span>hexo/lib/plugins/filter/after_post_render/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; filter &#125; = ctx.extend;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">lazyProcess</span>(<span class="params">htmlContent</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rootUrl =</span><br><span class="line">      <span class="string">&#x27;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> htmlContent.replace(</span><br><span class="line">      /<span class="xml">&lt;img(.*?)src=&quot;(.*?)&quot;(.*?)&gt;/gi,</span></span><br><span class="line"><span class="xml">      function (str, p1, p2) &#123;</span></span><br><span class="line"><span class="xml">        if (/src=&quot;data:image(.*?)/gi.test(str)) &#123;</span></span><br><span class="line"><span class="xml">          return str;</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">        if (p2.indexOf(&#x27;http&#x27;) === 0) &#123;</span></span><br><span class="line"><span class="xml">          return str;</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">        return str.replace(p2, rootUrl + p2);</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    );</span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">  filter.register(&#x27;after_post_render&#x27;, require(&#x27;./external_link&#x27;));</span></span><br><span class="line"><span class="xml">  filter.register(&#x27;after_post_render&#x27;, require(&#x27;./excerpt&#x27;));</span></span><br><span class="line"><span class="xml">  filter.register(&#x27;after_post_render&#x27;, function (data) &#123;</span></span><br><span class="line"><span class="xml">    data.content = lazyProcess.call(this, data.content);</span></span><br><span class="line"><span class="xml">    return data;</span></span><br><span class="line"><span class="xml">  &#125;);</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br></pre></td></tr></table></figure><ul><li>코드 참고 ; <a href="https://github.com/zhepama/hexo-generator-cdn/blob/master/lib/process.js">https://github.com/zhepama/hexo-generator-cdn/blob/master/lib/process.js</a></li><li>생성된 html에서 이미지 태그 문자열을 정규식으로 뽑는다</li><li><code>rootUrl</code>로 선언한 cdn을 위한 이미지 prefix와 기존 filepath를 결합한다</li></ul><ul><li>node_modules 아래에 있는 파일을 수정한 것이라, 좋은 접근은 아닌 것 같다</li><li>이런 경우에 어떻게 노드 모듈 외부에서 함수를 오버라이딩할 수 있는지…</li><li>일단 나는 이렇게 해서 사용하고 있다</li></ul><h2 id="경과"><a href="#경과" class="headerlink" title="경과"></a>경과</h2><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%8A%90%EB%A6%B0-%EC%9B%B9-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B020210531/2.png" alt=" "></p><ul><li>2021-03-12 이미지에 cdn 적용했다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%8A%90%EB%A6%B0-%EC%9B%B9-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B020210531/3.png" alt=" "></p><ul><li>10일 후에 점점 느린 URL이 없어지고 있는 것을 확인할 수 있다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%8A%90%EB%A6%B0-%EC%9B%B9-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B020210531/preview.png" alt=" "></p><ul><li>지금은 느린 웹이 없다!</li></ul><h2 id="주의사항"><a href="#주의사항" class="headerlink" title="주의사항"></a>주의사항</h2><ul><li>이미지를 수정해도 즉시 반영되지 않는다</li><li>즉시 반영을 원한다면 이름을 바꿔주자</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://derek-mun.com/contents/Contents-Github-page-image-loading-speed.html">https://derek-mun.com/contents/Contents-Github-page-image-loading-speed.html</a></li><li><a href="https://hexo.io/ko/api/filter.html">https://hexo.io/ko/api/filter.html</a></li><li><a href="https://github.com/zhepama/hexo-generator-cdn/blob/master/lib/process.js">https://github.com/zhepama/hexo-generator-cdn/blob/master/lib/process.js</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog/">blog</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog/">blog</category>
      
      <category domain="https://chinsun9.github.io/tags/github-pages/">github pages</category>
      
      <category domain="https://chinsun9.github.io/tags/cdn/">cdn</category>
      
      <category domain="https://chinsun9.github.io/tags/jsdelivr/">jsdelivr</category>
      
      
      <comments>https://chinsun9.github.io/2021/05/31/%EA%B9%83%ED%97%88%EB%B8%8C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%8A%90%EB%A6%B0-%EC%9B%B9-%ED%95%B4%EA%B2%B0%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
