<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Wed, 17 Feb 2021 06:28:46 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>scroll css</title>
      <link>https://chinsun9.github.io/2021/02/17/scroll-css/</link>
      <guid>https://chinsun9.github.io/2021/02/17/scroll-css/</guid>
      <pubDate>Wed, 17 Feb 2021 06:28:46 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/scroll-css20210217/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이런 모양의 스크롤바를 만들 수 있다&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;f</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/scroll-css20210217/preview.png" alt=" "></p><ul><li>이런 모양의 스크롤바를 만들 수 있다</li></ul><figure class="highlight scss"><figcaption><span>index.scss</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* scroll bar */</span></span><br><span class="line">&amp; &#123;</span><br><span class="line">  &amp;::-webkit-scrollbar &#123;</span><br><span class="line">    width: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;::-webkit-scrollbar-track &#123;</span><br><span class="line">    background: <span class="number">#f1f1f1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;::-webkit-scrollbar-thumb &#123;</span><br><span class="line">    background: <span class="number">#888</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;::-webkit-scrollbar-thumb:hover &#123;</span><br><span class="line">    background: <span class="number">#555</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/scss/">scss</category>
      
      <category domain="https://chinsun9.github.io/tags/sass/">sass</category>
      
      <category domain="https://chinsun9.github.io/tags/scrollbar/">scrollbar</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/17/scroll-css/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>js(ts) bind</title>
      <link>https://chinsun9.github.io/2021/01/19/js-bind/</link>
      <guid>https://chinsun9.github.io/2021/01/19/js-bind/</guid>
      <pubDate>Tue, 19 Jan 2021 08:48:31 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> myType &#123;</span><br><span class="line">  name: <span class="built_in">string</span>;</span><br><span class="line">  age: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> me: myType = &#123;</span><br><span class="line">  name: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">  age: <span class="number">99</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].forEach(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="built_in">this</span>: myType, value, index</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(value, index);</span><br><span class="line">&#125;, me);</span><br><span class="line"><span class="comment">// 0 1 &#123; name: &#x27;name&#x27;, age: 11 &#125;</span></span><br><span class="line"><span class="comment">// 1 2 &#123; name: &#x27;name&#x27;, age: 11 &#125;</span></span><br><span class="line"><span class="comment">// 2 3 &#123; name: &#x27;name&#x27;, age: 11 &#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> MyClass &#123;</span><br><span class="line">  me: Person;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params">person: Person</span>) &#123;</span><br><span class="line">    <span class="built_in">this</span>.me = person;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  someFunction() &#123;</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(value, <span class="built_in">this</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  someFunctionBindThis() &#123;</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>].forEach(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="built_in">this</span>: MyClass, value</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(value, <span class="built_in">this</span>);</span><br><span class="line">    &#125;, <span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  someFunctionWithArrow() &#123;</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].forEach(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(value, <span class="built_in">this</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> myclass = <span class="keyword">new</span> MyClass(me);</span><br><span class="line">myclass.someFunction();</span><br><span class="line"><span class="comment">// 1 undefined</span></span><br><span class="line"><span class="comment">// 2 undefined</span></span><br><span class="line"><span class="comment">// 3 undefined</span></span><br><span class="line"></span><br><span class="line">myclass.someFunctionBindThis();</span><br><span class="line"><span class="comment">// 1 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"><span class="comment">// 2 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"><span class="comment">// 3 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"></span><br><span class="line">myclass.someFunctionWithArrow();</span><br><span class="line"><span class="comment">// 1 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"><span class="comment">// 2 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"><span class="comment">// 3 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br></pre></td></tr></table></figure><ul><li>bind 함수를 배워보았다</li><li>bind를 배우면서 <code>function</code>과 <code>arrow function</code> 차이를 실감하게 되었다</li><li><code>arrow function</code>은 bind를 사용할 수 없다</li><li><code>arrow function</code>은 함수 바깥 스코프의 <code>this</code>가 자동 바인딩된다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/bind">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/bind</a></li><li><a href="https://velog.io/@modolee/javascript-function-vs-arrow-function">https://velog.io/@modolee/javascript-function-vs-arrow-function</a></li><li><a href="https://stackoverflow.com/questions/33308121/can-you-bind-this-in-an-arrow-function">https://stackoverflow.com/questions/33308121/can-you-bind-this-in-an-arrow-function</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/bind/">bind</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/19/js-bind/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git 명령어 줄이기</title>
      <link>https://chinsun9.github.io/2021/01/14/git-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A4%84%EC%9D%B4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/01/14/git-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A4%84%EC%9D%B4%EA%B8%B0/</guid>
      <pubDate>Thu, 14 Jan 2021 01:55:36 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.r &#39;! r() &#123; git reset --soft HEAD~&quot;$1&quot; ; &#125; ; r&#39;</span><br><span class="line"></span><br><span class="line">git config --global alias.r1 &#39;! r1() &#123; git reset --soft HEAD~1 ; &#125; ; r1&#39;</span><br></pre></td></tr></table></figure><ul><li><code>git reset --soft HEAD~1</code> 마지막 커밋 하나를 취소하는 명령어이다</li><li>나는 보통 여러 컴퓨터에서 작업할 때, 일단 작업 중을 내용을 임시적으로 커밋 푸쉬해서 깃허브에 업로드한다</li><li>다른 컴퓨터에서 풀로 받아오고, 이 임시적인 커밋을 취소할 때 명령어를 길게 쓰는 게 귀찮아서 <code>alias</code>로 짧게 줄여보았다</li><li><code>git r 2</code> ; 숫자만큼 커밋 취소하기</li><li><code>git r1</code> ; 마지막 커밋 취소하기</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://chinsun9.github.io/2021/01/06/git-commit-push-%EB%AA%85%EB%A0%B9-%ED%95%A9%EC%B9%98%EA%B8%B0/">https://chinsun9.github.io/2021/01/06/git-commit-push-명령-합치기/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/alias/">alias</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/14/git-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A4%84%EC%9D%B4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>rds master 사용자 비밀번호 변경</title>
      <link>https://chinsun9.github.io/2021/01/14/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD/</link>
      <guid>https://chinsun9.github.io/2021/01/14/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD/</guid>
      <pubDate>Thu, 14 Jan 2021 00:22:54 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;브라우저로 aws 콘솔에 접속해서 마스터 유저 비밀번호를 변경할 수 있다&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>브라우저로 aws 콘솔에 접속해서 마스터 유저 비밀번호를 변경할 수 있다</li></ul><p><img src="/images/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD20210114/1.png" alt=" "></p><ul><li>Amazon RDS &gt; 데이터베이스 &gt; 데이터베이스 선택 &gt; 수정 (수정하고자 하는 RDS가 실행되어 있어야 한다)</li><li><code>새 마스터 암호</code>를 채운다</li></ul><p><img src="/images/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD20210114/2.png" alt=" "></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://tecadmin.net/recover-reset-amazon-rds-master-user-password/">https://tecadmin.net/recover-reset-amazon-rds-master-user-password/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/rds/">rds</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/14/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>setTimeout Promise</title>
      <link>https://chinsun9.github.io/2021/01/06/setTimeout-Promise/</link>
      <guid>https://chinsun9.github.io/2021/01/06/setTimeout-Promise/</guid>
      <pubDate>Wed, 06 Jan 2021 08:32:29 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">ms</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      resolve(ms);</span><br><span class="line">    &#125;, ms)</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> main = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`main start`</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = delay(<span class="number">1000</span>);</span><br><span class="line">  result.then(<span class="built_in">console</span>.log);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`main end`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> main2 = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`main start`</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> delay(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(result);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`main end`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">main();</span><br><span class="line"><span class="comment">// main2();</span></span><br></pre></td></tr></table></figure><ul><li>promise를 알려주는 여러 글, 영상에서 <code>setTimeout</code>으로 예제로 진행한다</li><li>setTimeout을 promise로 감싸면 딜레이를 만들 수 있다</li><li>promise가 처음에 엄청 헷갈리는데, 막힐 때마다 이 예제를 먼저 작성해보고 적용해보았던 것 같다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Using_promises">https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Using_promises</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/async/">async</category>
      
      <category domain="https://chinsun9.github.io/tags/await/">await</category>
      
      <category domain="https://chinsun9.github.io/tags/setTimeout/">setTimeout</category>
      
      <category domain="https://chinsun9.github.io/tags/promise/">promise</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/06/setTimeout-Promise/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git commit push 명령 합치기</title>
      <link>https://chinsun9.github.io/2021/01/06/git-commit-push-%EB%AA%85%EB%A0%B9-%ED%95%A9%EC%B9%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/01/06/git-commit-push-%EB%AA%85%EB%A0%B9-%ED%95%A9%EC%B9%98%EA%B8%B0/</guid>
      <pubDate>Wed, 06 Jan 2021 06:12:40 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;git commit 이랑 git push 명령을 합치고 싶은 욕구가 생겼다&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>git commit 이랑 git push 명령을 합치고 싶은 욕구가 생겼다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.acp &#39;! acp() &#123; git commit -a -m &quot;$1&quot; &amp;&amp; git push ; &#125; ; acp&#39;</span><br></pre></td></tr></table></figure><ul><li>git bash를 열고 위 명령을 수행한다</li></ul><ul><li><code>acp</code>란 이름으로 git alias를 추가한다.</li><li><code>--global</code>옵션을 줘서 어디서든 실행될 수 있도록 한다</li><li><code>--global</code>옵션을 주지 않으면 현재 깃 디렉터리에만 적용이 된다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git acp &quot;커밋 메시지&quot;</span><br></pre></td></tr></table></figure><ul><li>이런 식으로 사용한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/19595067/git-add-commit-and-push-commands-in-one">https://stackoverflow.com/questions/19595067/git-add-commit-and-push-commands-in-one</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/push/">push</category>
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/commit/">commit</category>
      
      <category domain="https://chinsun9.github.io/tags/alias/">alias</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/06/git-commit-push-%EB%AA%85%EB%A0%B9-%ED%95%A9%EC%B9%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 라인 정렬</title>
      <link>https://chinsun9.github.io/2021/01/06/vscode-%EB%9D%BC%EC%9D%B8-%EC%A0%95%EB%A0%AC/</link>
      <guid>https://chinsun9.github.io/2021/01/06/vscode-%EB%9D%BC%EC%9D%B8-%EC%A0%95%EB%A0%AC/</guid>
      <pubDate>Wed, 06 Jan 2021 05:51:32 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;정렬하고싶은 라인을 선택하고&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F1&lt;/code&gt; &amp;gt; &lt;code&gt;sort Lines&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>정렬하고싶은 라인을 선택하고</li><li><code>F1</code> &gt; <code>sort Lines</code></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://medium.com/@adammlr/sort-css-properties-in-vscode-e59033c2c675">https://medium.com/@adammlr/sort-css-properties-in-vscode-e59033c2c675</a></li><li>css 정렬하는 방법을 알아보다가 알게되었다. 이 사람은 css를 알파벳순으로 정렬하는 방법을 알려준다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/sort-lines/">sort lines</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/06/vscode-%EB%9D%BC%EC%9D%B8-%EC%A0%95%EB%A0%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>두 값 사이의 난수 생성하기</title>
      <link>https://chinsun9.github.io/2021/01/05/%EB%91%90-%EA%B0%92-%EC%82%AC%EC%9D%B4%EC%9D%98-%EB%82%9C%EC%88%98-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/01/05/%EB%91%90-%EA%B0%92-%EC%82%AC%EC%9D%B4%EC%9D%98-%EB%82%9C%EC%88%98-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 05 Jan 2021 06:57:41 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandomArbitrary</span>(<span class="params">min, max</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.random() * (max - min) + min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mdn에 여러가지 조건의 난수를 생성하는 좋은 예제가 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math/random#%EB%91%90_%EA%B0%92_%EC%82%AC%EC%9D%B4%EC%9D%98_%EB%82%9C%EC%88%98_%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math/random#%EB%91%90_%EA%B0%92_%EC%82%AC%EC%9D%B4%EC%9D%98_%EB%82%9C%EC%88%98_%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/Math/">Math</category>
      
      <category domain="https://chinsun9.github.io/tags/random/">random</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/%EB%91%90-%EA%B0%92-%EC%82%AC%EC%9D%B4%EC%9D%98-%EB%82%9C%EC%88%98-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>aws sam, lambda 정리</title>
      <link>https://chinsun9.github.io/2021/01/05/aws-sam-%EC%A0%95%EB%A6%AC/</link>
      <guid>https://chinsun9.github.io/2021/01/05/aws-sam-%EC%A0%95%EB%A6%AC/</guid>
      <pubDate>Tue, 05 Jan 2021 06:34:30 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;em&gt;nodejs 람다 기준&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;sam&quot;&gt;&lt;a href=&quot;#sam&quot; class=&quot;headerlink&quot; title=&quot;sam&quot;&gt;&lt;/a&gt;sam&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;sam cli로 로컬에서 람다를 </description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><em>nodejs 람다 기준</em></li></ul><h2 id="sam"><a href="#sam" class="headerlink" title="sam"></a>sam</h2><ul><li>sam cli로 로컬에서 람다를 작성하고 배포할 수 있다</li></ul><h2 id="실행환경"><a href="#실행환경" class="headerlink" title="실행환경"></a>실행환경</h2><ul><li>/var/task 에서 람다 함수가 실행된다</li><li>/opt/nodejs 에 레이어가 적재된다</li><li>/tmp 디렉터리는 유일한 쓰기 디렉터리이다</li><li>/tmp 디렉터리의 용량은 512MB이다</li><li>/tmp 디렉터리는 일회성이다</li></ul><h2 id="로컬에서-테스트"><a href="#로컬에서-테스트" class="headerlink" title="로컬에서 테스트"></a>로컬에서 테스트</h2><ul><li><code>sam local start-api</code>로 로컬에서 람다를 테스트해볼 수 있다</li><li><code>--skip-pull-image</code> 옵션을 주어 실행 시간을 단축시킬 수 있다</li><li>로컬에서 실행할 때 도커가 필요하다</li><li>참고로 람다는 아마존 리눅스 2 환경에서 돌아간다</li></ul><h2 id="빌드"><a href="#빌드" class="headerlink" title="빌드"></a>빌드</h2><ul><li><code>sam build</code> 명령으로 설치되는 패키지에는 devDependencies가 포함되지 않는다</li></ul><h2 id="레이어"><a href="#레이어" class="headerlink" title="레이어"></a>레이어</h2><ul><li>레이어는 종속성을 따로 관리할 수 있게 해 준다</li><li>노드 모듈은 웬만하면 레이어로 빼는 게 맞는 것 같다</li><li>람다 노드 모듈 폴더를 포함하여 배포되면 용량이 커져서 브라우저에서 코드 조회를 할 수 없다</li><li>공통적으로 자주 사용되는 패키지들을 묶어서 재사용할 수 있다</li><li>레이어로 사용할</li><li>devDependencies가 포함되건 말건 상관없다면 심볼릭 링크를 사용하는 것도 나쁘지 않은 것 같다 <a href="https://chinsun9.github.io/2020/09/17/%EC%8B%AC%EB%B3%BC%EB%A6%AD-%EB%A7%81%ED%81%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0/#aws-lambda-layer">참고</a></li></ul><h2 id="레이어-내가-만든-모듈"><a href="#레이어-내가-만든-모듈" class="headerlink" title="레이어 (내가 만든 모듈)"></a>레이어 (내가 만든 모듈)</h2><ul><li>내가 제작한 모듈도 레이어로 뺄 수 있다</li><li>sam project 루트 디렉터리를 기준으로 /opt/nodejs 에 내 모듈을 작성한다 (ex. /opt/nodejs/myModule.js)</li><li>sam project 루트 디렉터리에서 <code>jsconfig.json</code>를 다음과 같이 한다 (없으면 생성)</li></ul><figure class="highlight json"><figcaption><span>jsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;paths&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;*&quot;</span>: [<span class="string">&quot;./opt/nodejs/*&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;exclude&quot;</span>: [<span class="string">&quot;node_modules&quot;</span>, <span class="string">&quot;build&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>이를 임포트 해서 사용하는 파일에서는</li></ul><figure class="highlight js"><figcaption><span>app.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myModule = <span class="built_in">require</span>(<span class="string">&quot;myModule&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>이런 식으로 불러와 사용할 수 있다.</li><li>자동 완성도 잘 작동한다</li></ul><h2 id="레이어-yaml-설정"><a href="#레이어-yaml-설정" class="headerlink" title="레이어 yaml 설정"></a>레이어 yaml 설정</h2><figure class="highlight yaml"><figcaption><span>tmplate.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Resources:</span></span><br><span class="line">  <span class="attr">HelloWorldFunction:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::Function</span> <span class="comment"># More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">CodeUri:</span> <span class="string">functions/hello-world/</span></span><br><span class="line">      <span class="attr">Handler:</span> <span class="string">app.lambdaHandler</span></span><br><span class="line">      <span class="attr">Runtime:</span> <span class="string">nodejs12.x</span></span><br><span class="line">      <span class="attr">Layers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="type">!Ref</span> <span class="string">MyModuleLayer</span></span><br><span class="line">        <span class="bullet">-</span> <span class="type">!Ref</span> <span class="string">HelloWorldFunctionLayer</span></span><br><span class="line">      <span class="attr">Events:</span></span><br><span class="line">        <span class="attr">HelloWorld:</span></span><br><span class="line">          <span class="attr">Type:</span> <span class="string">Api</span> <span class="comment"># More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api</span></span><br><span class="line">          <span class="attr">Properties:</span></span><br><span class="line">            <span class="attr">Path:</span> <span class="string">/hello</span></span><br><span class="line">            <span class="attr">Method:</span> <span class="string">get</span></span><br><span class="line">  <span class="comment"># ...</span></span><br><span class="line">  <span class="attr">HelloWorldFunctionLayer:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::LayerVersion</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">LayerName:</span> <span class="string">HelloWorldFunctionLayer</span></span><br><span class="line">      <span class="attr">Description:</span> <span class="string">Dependencies</span> <span class="string">for</span> <span class="string">SAM</span></span><br><span class="line">      <span class="attr">ContentUri:</span> <span class="string">layer/HelloWorldFunction</span></span><br><span class="line">      <span class="attr">CompatibleRuntimes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">nodejs12.x</span></span><br><span class="line">      <span class="attr">LicenseInfo:</span> <span class="string">&quot;MIT&quot;</span></span><br><span class="line">      <span class="attr">RetentionPolicy:</span> <span class="string">Retain</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">MyModuleLayer:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::LayerVersion</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">LayerName:</span> <span class="string">my-layer</span></span><br><span class="line">      <span class="attr">Description:</span> <span class="string">Dependencies</span> <span class="string">for</span> <span class="string">SAM</span></span><br><span class="line">      <span class="attr">ContentUri:</span> <span class="string">opt</span></span><br><span class="line">      <span class="attr">CompatibleRuntimes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">nodejs12.x</span></span><br><span class="line">      <span class="attr">LicenseInfo:</span> <span class="string">&quot;MIT&quot;</span></span><br><span class="line">      <span class="attr">RetentionPolicy:</span> <span class="string">Retain</span></span><br></pre></td></tr></table></figure><ul><li>이런 식으로 리소스에 레이어를 작성한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/best-practices.html">https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/best-practices.html</a></li><li><a href="https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/gettingstarted-limits.html">https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/gettingstarted-limits.html</a></li><li><a href="https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-tools.html">https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-tools.html</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/sam/">sam</category>
      
      <category domain="https://chinsun9.github.io/tags/lambda/">lambda</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/aws-sam-%EC%A0%95%EB%A6%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>process.exit(1)</title>
      <link>https://chinsun9.github.io/2021/01/05/process-exit-1/</link>
      <guid>https://chinsun9.github.io/2021/01/05/process-exit-1/</guid>
      <pubDate>Tue, 05 Jan 2021 01:54:06 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">process.exit(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><ul><li>이 줄을 만나면 즉시 종료된다</li><li>나는 보통 코드를 주먹구구로 작성하다가 아래 라인을 실행시키고 싶지 않을 때 사용한다..</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://nodejs.dev/learn/how-to-exit-from-a-nodejs-program">https://nodejs.dev/learn/how-to-exit-from-a-nodejs-program</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/process/">process</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/process-exit-1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Moment.js utc 사용하기</title>
      <link>https://chinsun9.github.io/2021/01/05/moment-js-utc-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/01/05/moment-js-utc-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 05 Jan 2021 01:36:20 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> date1 = moment().utc().format(<span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(date1);</span><br></pre></td></tr></table></figure><ul><li><code>utc()</code> 메소드를 이용한다.</li></ul><h2 id="활용한-곳"><a href="#활용한-곳" class="headerlink" title="활용한 곳"></a>활용한 곳</h2><ul><li>rds는 기본적으로 utc를 사용한다</li><li>그래서 현재 지역 시간으로 포맷팅 된 값을 그대로 db에 넣으면 안 된다</li><li>rds의 시간대를 변경하거나, insert, update 할 때 잘 가공해서 쿼리를 해야 한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://momentjs.com/docs/#/parsing/utc/">https://momentjs.com/docs/#/parsing/utc/</a></li></ul><ul><li><a href="https://aws.amazon.com/ko/premiumsupport/knowledge-center/rds-change-time-zone/">https://aws.amazon.com/ko/premiumsupport/knowledge-center/rds-change-time-zone/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/momentjs/">momentjs</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/moment-js-utc-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>forEach await 안되는 문제</title>
      <link>https://chinsun9.github.io/2021/01/05/forEach-await-%EC%95%88%EB%90%98%EB%8A%94-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://chinsun9.github.io/2021/01/05/forEach-await-%EC%95%88%EB%90%98%EB%8A%94-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Tue, 05 Jan 2021 01:27:25 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;상황&quot;&gt;&lt;a href=&quot;#상황&quot; class=&quot;headerlink&quot; title=&quot;상황&quot;&gt;&lt;/a&gt;상황&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;배열로 저장되어 있는 데이터를 forEach로 순회하면서 db에 &lt;code&gt;INSERT&lt;/code&gt;하는 쿼리를 만들</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>배열로 저장되어 있는 데이터를 forEach로 순회하면서 db에 <code>INSERT</code>하는 쿼리를 만들려고 했다</li><li>근데 비동기적으로 동작했다</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> data.forEach(<span class="keyword">async</span> (element: ArticlePreview, idx: <span class="built_in">number</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// insert query</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> element <span class="keyword">of</span> data) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> a = <span class="keyword">await</span> databaseConnection.query(queryString, [</span><br><span class="line">          <span class="comment">// ...</span></span><br><span class="line">        ]);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><code>for of</code>에서는 await을 통해서 순차적으로 처리가 가능했다</li></ul><h2 id="시도해보지-않은-다른-방향"><a href="#시도해보지-않은-다른-방향" class="headerlink" title="시도해보지 않은 다른 방향"></a>시도해보지 않은 다른 방향</h2><ul><li>한번에 INSERT하기</li><li><a href="https://stackoverflow.com/questions/8899802/how-do-i-do-a-bulk-insert-in-mysql-using-node-js">https://stackoverflow.com/questions/8899802/how-do-i-do-a-bulk-insert-in-mysql-using-node-js</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/37576685/using-async-await-with-a-foreach-loop">https://stackoverflow.com/questions/37576685/using-async-await-with-a-foreach-loop</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/async/">async</category>
      
      <category domain="https://chinsun9.github.io/tags/await/">await</category>
      
      <category domain="https://chinsun9.github.io/tags/forEach/">forEach</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/forEach-await-%EC%95%88%EB%90%98%EB%8A%94-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>css 선언 순서 정렬하기 prettier-plugin-style-order</title>
      <link>https://chinsun9.github.io/2021/01/05/css-%EC%84%A0%EC%96%B8-%EC%88%9C%EC%84%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-prettier-plugin-style-order/</link>
      <guid>https://chinsun9.github.io/2021/01/05/css-%EC%84%A0%EC%96%B8-%EC%88%9C%EC%84%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-prettier-plugin-style-order/</guid>
      <pubDate>Tue, 05 Jan 2021 01:10:59 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;css를 조금 더 아름답고 일관되게 작성해보자.&lt;/li&gt;
&lt;li&gt;기본 prettier 포맷팅을 사용하면 들여 쓰기를 예쁘게 고쳐준다&lt;/li&gt;
&lt;li&gt;그런데 규칙 없이 나열된 속성들을 일관되게 포맷팅을 하고 싶은 욕구가 생겨서 찾아보았다</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>css를 조금 더 아름답고 일관되게 작성해보자.</li><li>기본 prettier 포맷팅을 사용하면 들여 쓰기를 예쁘게 고쳐준다</li><li>그런데 규칙 없이 나열된 속성들을 일관되게 포맷팅을 하고 싶은 욕구가 생겨서 찾아보았다</li><li>이런 것들은 직접 하는 것보다는 도구의 도움을 받는 게 훨씬 좋다고 생각한다</li></ul><h2 id="prettier-plugin-style-order"><a href="#prettier-plugin-style-order" class="headerlink" title="prettier-plugin-style-order"></a>prettier-plugin-style-order</h2><ul><li>(참고) 나는 scss로 작업했다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D prettier-plugin-style-order</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; postcss-scss 도 인스톨 하라고 메시지가 나옴</span><br><span class="line">yarn add -D postcss-scss</span><br></pre></td></tr></table></figure><ul><li>이렇게 패키지를 설치하고,</li><li><code>fonmat on save</code> 옵션이 켜져 있다면,</li><li>아무 css 파일에서 저장을 해보면 순서가 아름답게 정렬되는 것을 알 수 있다.</li><li>기존에 작업하던 것들을 일괄적으로 포맷팅 하고 싶다면</li><li>npm script에 prettier 명령어로 원하는 경로의 css파일들을 지정해서 일괄 포맷팅 한다.</li><li><code>&quot;cssSort&quot;: &quot;prettier --write src/**/*.scss&quot;</code></li></ul><h2 id="생각"><a href="#생각" class="headerlink" title="생각"></a>생각</h2><ul><li>이전에는 항상 css를 주먹구구 중에서도 주먹구구로 작성해왔는데,</li><li>그러지 않을 수 있겠다.</li></ul><ul><li>css property order, css property sort 이런 식으로 검색을 했었는데</li><li>stylelint 등 여러 가지 css를 정렬하는 도구들이 있는 것 같았다</li><li>그런데 prettier을 사용하고 있기 때문에, 다른 거 쓰지 말고 prettier에서 플러그인을 깔아서 해결해 보자 하여 <code>prettier-plugin-style-order</code>를 설치해서 사용해 보았다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://9elements.com/css-rule-order/">https://9elements.com/css-rule-order/</a></li><li><a href="https://github.com/brandon-rhodes/Concentric-CSS/blob/master/style3.css">https://github.com/brandon-rhodes/Concentric-CSS/blob/master/style3.css</a></li><li><a href="https://css-tricks.com/poll-results-how-do-you-order-your-css-properties/">https://css-tricks.com/poll-results-how-do-you-order-your-css-properties/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/prettier/">prettier</category>
      
      <category domain="https://chinsun9.github.io/tags/style-order/">style order</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/css-%EC%84%A0%EC%96%B8-%EC%88%9C%EC%84%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-prettier-plugin-style-order/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 유용한 단축키</title>
      <link>https://chinsun9.github.io/2021/01/05/vscode-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%8B%A8%EC%B6%95%ED%82%A4/</link>
      <guid>https://chinsun9.github.io/2021/01/05/vscode-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%8B%A8%EC%B6%95%ED%82%A4/</guid>
      <pubDate>Tue, 05 Jan 2021 00:29:37 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/_QCNqV_EfzE&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/_QCNqV_EfzE" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>김정환님 영상을 보고 정리한 내용</li></ul><h2 id="단축키"><a href="#단축키" class="headerlink" title="단축키"></a>단축키</h2><ul><li>Ctrl Shift \<ul><li>Go to Bracket</li><li>현재 커서를 포함하는 괄호로 이동한다.</li></ul></li></ul><ul><li>F12<ul><li>Go to Definition</li></ul></li></ul><ul><li>Alt F12<ul><li>Peek Definition</li></ul></li></ul><ul><li>Ctrl 0<ul><li>Focus into Side Bar</li></ul></li></ul><ul><li>Ctrl Shift .<ul><li>Focus Breadcrumbs</li></ul></li></ul><ul><li>Ctrl T<ul><li>Go to Symbol in Workspace</li><li><code>#</code></li></ul></li></ul><ul><li>Ctrl Shift O<ul><li>Go to Symbol in Editor</li><li><code>@</code></li></ul></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/_QCNqV_EfzE">https://youtu.be/_QCNqV_EfzE</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/%EB%8B%A8%EC%B6%95%ED%82%A4/">단축키</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/vscode-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%8B%A8%EC%B6%95%ED%82%A4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>202012 검색 실적</title>
      <link>https://chinsun9.github.io/2021/01/04/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</link>
      <guid>https://chinsun9.github.io/2021/01/04/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</guid>
      <pubDate>Mon, 04 Jan 2021 03:48:48 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120210104/prev</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120210104/preview.png" alt=" "></p>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/04/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 절대경로 import, require 하기</title>
      <link>https://chinsun9.github.io/2020/12/30/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/30/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Wed, 30 Dec 2020 06:00:22 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B020201230/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;l</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B020201230/preview.png" alt=" "></p><ul><li>프로젝트 루트 경로를 <code>/</code> 로 표현하고 싶은데, 방법이…</li></ul><figure class="highlight json"><figcaption><span>jsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;paths&quot;</span>: &#123;</span><br><span class="line">      <span class="comment">//Assuming your components/utilities live in ./src</span></span><br><span class="line">      <span class="comment">//Update this path as necessary</span></span><br><span class="line">      <span class="attr">&quot;/*&quot;</span>: [<span class="string">&quot;./*&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//Add any build/compiled folders here to stop vscode searching those</span></span><br><span class="line">  <span class="attr">&quot;exclude&quot;</span>: [<span class="string">&quot;node_modules&quot;</span>, <span class="string">&quot;build&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>프로젝트 루트 경로에 <code>jsconfig.json</code>을 생성하고 내용을 위처럼 한다.</li></ul><p><img src="/images/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B020201230/1.png" alt=" "></p><ul><li>이렇게 내가 지정한 대로 참조가 되는 것을 확인할 수 있다.</li><li>참고로, 위 <code>opt</code>디렉터리는 내 프로젝트 루트에 있는 디렉터리이다.</li></ul><h2 id="활용한-곳"><a href="#활용한-곳" class="headerlink" title="활용한 곳"></a>활용한 곳</h2><ul><li>sam project에서 공통 모듈을 layer로 빼는데,</li><li>layer로 뺀 공통 모듈을 임포트 할 때 상대 경로를 사용하기 껄끄러운 문제가 있었다.</li></ul><ul><li>로컬에서 개발할 때는 상대 경로로 개발하다가 (자동완성 위해)</li><li>람다를 배포할 때에, 배포하기 전에 절대 경로로 바꿔준다거나 하는 귀찮은 과정이 있었는데</li><li>jsconfig로 절대 경로를 사용해 내가 만든 공통 모듈을 임포트 해서 사용하니까</li><li>그런 귀찮은 과정을 하지 않을 수 있었다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://nimblewebdeveloper.com/blog/absolute-alias-imports-in-javascript-vscode">https://nimblewebdeveloper.com/blog/absolute-alias-imports-in-javascript-vscode</a></li></ul><figure class="highlight json"><figcaption><span>jsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">&quot;paths&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;/*&quot;</span>: [<span class="string">&quot;./*&quot;</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 이런것도 된다.</span></span><br><span class="line">    <span class="attr">&quot;@hello/*&quot;</span>: [<span class="string">&quot;./src/*&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/jsconfig/">jsconfig</category>
      
      <category domain="https://chinsun9.github.io/tags/absolute-path/">absolute path</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/30/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>typescript에서 json import</title>
      <link>https://chinsun9.github.io/2020/12/29/typescript%EC%97%90%EC%84%9C-json-import/</link>
      <guid>https://chinsun9.github.io/2020/12/29/typescript%EC%97%90%EC%84%9C-json-import/</guid>
      <pubDate>Tue, 29 Dec 2020 06:11:19 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/typescript%EC%97%90%EC%84%9C-json-import20201228/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/typescript%EC%97%90%EC%84%9C-json-import20201228/preview.png" alt=" "></p><figure class="highlight plain"><figcaption><span>tsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;compilerOptions&quot;: &#123;</span><br><span class="line">    &#x2F;&#x2F;...</span><br><span class="line">    &quot;resolveJsonModule&quot;: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><figcaption><span>ex.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> myJsonData <span class="keyword">from</span> <span class="string">&quot;./myJson.json&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>이런식으로 가져다 쓸 수 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://gracefullight.dev/2019/11/26/import-json-with-typescript-ts5071/">https://gracefullight.dev/2019/11/26/import-json-with-typescript-ts5071/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/tsconfig/">tsconfig</category>
      
      <category domain="https://chinsun9.github.io/tags/json/">json</category>
      
      <category domain="https://chinsun9.github.io/tags/import/">import</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/29/typescript%EC%97%90%EC%84%9C-json-import/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>타자 속도</title>
      <link>https://chinsun9.github.io/2020/12/28/%ED%83%80%EC%9E%90-%EC%86%8D%EB%8F%84/</link>
      <guid>https://chinsun9.github.io/2020/12/28/%ED%83%80%EC%9E%90-%EC%86%8D%EB%8F%84/</guid>
      <pubDate>Mon, 28 Dec 2020 10:34:47 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;한타 ; 534타&lt;/li&gt;
&lt;li&gt;영타 ; 329타&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;한타&quot;&gt;&lt;a href=&quot;#한타&quot; class=&quot;headerlink&quot; title=&quot;한타&quot;&gt;&lt;/a&gt;한타&lt;/h2&gt;&lt;div class=&quot;video-contai</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>한타 ; 534타</li><li>영타 ; 329타</li></ul><h2 id="한타"><a href="#한타" class="headerlink" title="한타"></a>한타</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/u3j-ndydcnU" frameborder="0" loading="lazy" allowfullscreen></iframe></div><h2 id="영타"><a href="#영타" class="headerlink" title="영타"></a>영타</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/oa722y5TxtQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div><br><div class="video-container"><iframe src="https://www.youtube.com/embed/0hlAexpopJs" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/%ED%83%80%EC%9E%90%EC%86%8D%EB%8F%84/">타자속도</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/28/%ED%83%80%EC%9E%90-%EC%86%8D%EB%8F%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Formatter vscode 확장도구</title>
      <link>https://chinsun9.github.io/2020/12/27/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC/</link>
      <guid>https://chinsun9.github.io/2020/12/27/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC/</guid>
      <pubDate>Sun, 27 Dec 2020 11:46:49 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Format Document&lt;/code&gt; 로 &lt;code&gt;.sql&lt;/code&gt; 포맷팅하기&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><code>Format Document</code> 로 <code>.sql</code> 포맷팅하기</li></ul><p><img src="/images/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC20201227/preview.png" alt=" "></p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=adpyke.vscode-sql-formatter">https://marketplace.visualstudio.com/items?itemName=adpyke.vscode-sql-formatter</a></li><li><code>sql-formatter</code> 확장도구 설치</li></ul><figure class="highlight json"><figcaption><span>settings.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;[sql]&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// 방금 설치한 익스텐션을 통해 포맷팅하도록</span></span><br><span class="line">    <span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;adpyke.vscode-sql-formatter&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// sql 키워드(select, from 등)를 대문자로 자동 치환해줌.</span></span><br><span class="line">  <span class="attr">&quot;sql-formatter.uppercase&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>위처럼 세팅해주고 <code>Format Document</code> 명령을 실행하면 잘 동작하는 것을 확인할 수 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=adpyke.vscode-sql-formatter">https://marketplace.visualstudio.com/items?itemName=adpyke.vscode-sql-formatter</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/sql/">sql</category>
      
      <category domain="https://chinsun9.github.io/tags/formatter/">formatter</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/27/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>sass, scss 연습</title>
      <link>https://chinsun9.github.io/2020/12/23/sass-scss-%EC%97%B0%EC%8A%B5/</link>
      <guid>https://chinsun9.github.io/2020/12/23/sass-scss-%EC%97%B0%EC%8A%B5/</guid>
      <pubDate>Wed, 23 Dec 2020 06:52:47 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/sass-scss-%EC%97%B0%EC%8A%B520201223/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.yo</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/sass-scss-%EC%97%B0%EC%8A%B520201223/preview.png" alt=" "></p><div class="video-container"><iframe src="https://www.youtube.com/embed/Zz6eOVaaelI" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li><a href="https://www.youtube.com/watch?v=Zz6eOVaaelI">Learn Sass In 20 Minutes | Sass Crash Course</a> 를 보면서</li><li>sass, scss 를 공부해보았다.</li></ul><h2 id="sass"><a href="#sass" class="headerlink" title="sass"></a>sass</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 변수</span></span><br><span class="line"><span class="variable">$primaryBtn</span>: rgb(<span class="number">78</span>, <span class="number">201</span>, <span class="number">253</span>);</span><br><span class="line"><span class="variable">$textColor</span>: rgb(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">$primaryBtn</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 중첩 nesting 가능</span></span><br><span class="line">  <span class="comment">//   &amp; ; 상위 선택자</span></span><br><span class="line">  &amp;<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;hellooo&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 중첩된 속성</span></span><br><span class="line">  <span class="attribute">margin</span>: &#123;</span><br><span class="line">    top: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">padding</span>: &#123;</span><br><span class="line">    bottom: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>중첩 이 기능 하나만으로도 엄청나게 강력한 기능이라고 생각한다.</li><li>스타일 적용되는 것도 직관적이고, html이랑 같은 구조로 css를 작성할 수 있을 것 같다.</li></ul><h2 id="연습-코드-저장소"><a href="#연습-코드-저장소" class="headerlink" title="연습 코드 저장소"></a>연습 코드 저장소</h2><ul><li><a href="https://github.com/chinsun9/sass-practice">https://github.com/chinsun9/sass-practice</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/scss/">scss</category>
      
      <category domain="https://chinsun9.github.io/tags/sass/">sass</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/23/sass-scss-%EC%97%B0%EC%8A%B5/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
