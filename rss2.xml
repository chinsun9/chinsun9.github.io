<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Thu, 29 Apr 2021 04:05:13 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>내가 사랑하는 vscode 단축키, 명령, 확장도구 모음</title>
      <link>https://chinsun9.github.io/2021/04/29/%EB%82%B4%EA%B0%80-%EC%82%AC%EB%9E%91%ED%95%98%EB%8A%94-vscode-%EB%8B%A8%EC%B6%95%ED%82%A4-%EB%AA%85%EB%A0%B9-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC-%EB%AA%A8%EC%9D%8C/</link>
      <guid>https://chinsun9.github.io/2021/04/29/%EB%82%B4%EA%B0%80-%EC%82%AC%EB%9E%91%ED%95%98%EB%8A%94-vscode-%EB%8B%A8%EC%B6%95%ED%82%A4-%EB%AA%85%EB%A0%B9-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC-%EB%AA%A8%EC%9D%8C/</guid>
      <pubDate>Thu, 29 Apr 2021 04:04:59 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;vscode 관련 글을 여럿 썼는데, 검색해서 찾기에 조각조각인 내용들이 있어&lt;/li&gt;
&lt;li&gt;하나의 글에 정리하려고 한다&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;cli&quot;&gt;&lt;a href=&quot;#cli&quot; class=&quot;headerlink&quot; titl</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>vscode 관련 글을 여럿 썼는데, 검색해서 찾기에 조각조각인 내용들이 있어</li><li>하나의 글에 정리하려고 한다</li></ul><h2 id="cli"><a href="#cli" class="headerlink" title="cli"></a>cli</h2><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 현재 디렉터리에서 code 열기</span></span><br><span class="line">code .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 현재 디렉터리를 vscode현재창에서 열기</span></span><br><span class="line">code . -r</span><br></pre></td></tr></table></figure><h2 id="단축키"><a href="#단축키" class="headerlink" title="단축키"></a>단축키</h2><ul><li>⭐<code>F1</code> ; show all commands ; 명령 팔레트 열기</li><li>⭐<code>ctrl p</code> ; go to file ; 파일 열기</li><li>⭐<code>ctrl alft arrow</code> ; move editor into next group ; 분할창 이동</li><li>⭐<code>F2</code> ; rename symbol ; 변수명 변경</li><li>⭐<code>ctrl shift \</code> ; go to bracket ; 괄호로 이동</li><li>⭐<code>shift alt rifhtarrow</code> ; expand selection ; 확장 선택</li><li>⭐<code>shift alt leftarrow</code> ; shrink selection ; 축소 선택</li><li>⭐<code>ctrl rightarrow</code> ; cursor word end right ; 다음 단어로 이동</li><li>⭐<code>ctrl leftarrow</code> ; cursor word left ; 이전 단어로 이동</li><li>⭐<code>ctrl shift v</code> ; markdown preview ; 마크다운 미리보기</li><li>⭐<code>F12</code> ; go to definition ; 선언부로이동</li><li>⭐<code>ctrl leftclick</code> ; go to definition ; 선언부로이동</li><li><code>alt F12</code> ; peek definition / peek references ; 선언, 참조 보기</li><li><code>ctrl 0</code> ; focus into side bar ; 사이드바 포커스</li><li><code>ctrl 1</code> ; focus editor group ; 에디터 포커스</li><li><code>ctrl shift .</code> ; focus breadcrumbs ; 브레드크럼 포커스</li><li><code>ctrl t</code> ; go to symbol in workspace ; 심볼로 바로가기 (범위 ; 워크스페이스 전체)</li><li><code>ctrl shift o</code> ; go to symbol in editor ; 심볼로 바로가기 (범위 ; 현재 포커스된 파일)</li><li><code>ctrl ` </code> ; toggle terminal ; 터미널뷰 토글</li><li><code>ctrl g</code> ; go to line/colum ; 커서이동 ; <em>라인번호,칼럼번호</em></li></ul><h2 id="확장도구"><a href="#확장도구" class="headerlink" title="확장도구"></a>확장도구</h2><ul><li><p>⭐ prettier ; 코드 포매터</p></li><li><p>⭐ eslint ; 린트</p></li><li><p>⭐ shell-launcher ; 여러 터미널 구성</p></li><li><p>⭐ code-settings-sync ; vscode setting 클라우드 저장</p></li><li><p>⭐ JavaScript (ES6) code snippets ; 코드 스니펫, 자동완성 도구</p></li><li><p>⭐ TabOut ; 탭키로 괄호 탈출</p></li><li><p>vscode-pandoc ; md to word</p></li><li><p>live share ; 실시간 멀티유저 코드 편집</p></li><li><p>vscode-sql-formatter ; sql 포매터</p></li><li><p>ascii tree generator ; 디렉터리 트리 스트링 생성</p></li><li><p>auto rename tag ; html 태그 자동 리네임</p></li><li><p>bracket pair colorizer ; 괄호색 구분</p></li><li><p>indent-rainbow ; 들여쓰기 색 구분</p></li><li><p>⭐ live server</p></li><li><p>⭐ material icon theme</p></li><li><p>⭐ remote - ssh</p></li><li><p>path intellisense</p></li><li><p>rest client</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/29/%EB%82%B4%EA%B0%80-%EC%82%AC%EB%9E%91%ED%95%98%EB%8A%94-vscode-%EB%8B%A8%EC%B6%95%ED%82%A4-%EB%AA%85%EB%A0%B9-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC-%EB%AA%A8%EC%9D%8C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>좋은 사용자</title>
      <link>https://chinsun9.github.io/2021/04/28/%EC%A2%8B%EC%9D%80-%EC%82%AC%EC%9A%A9%EC%9E%90/</link>
      <guid>https://chinsun9.github.io/2021/04/28/%EC%A2%8B%EC%9D%80-%EC%82%AC%EC%9A%A9%EC%9E%90/</guid>
      <pubDate>Wed, 28 Apr 2021 14:38:11 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;생활코딩님 커뮤니티 글을 보고..&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCvc8kv-i5fvFTJBFAk6n1SA/community?lb=Ugx1aIE3Olb8931OhW54AaAB</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>생활코딩님 커뮤니티 글을 보고..</li><li><a href="https://www.youtube.com/channel/UCvc8kv-i5fvFTJBFAk6n1SA/community?lb=Ugx1aIE3Olb8931OhW54AaABCQ">https://www.youtube.com/channel/UCvc8kv-i5fvFTJBFAk6n1SA/community?lb=Ugx1aIE3Olb8931OhW54AaABCQ</a></li></ul><h2 id="사용자"><a href="#사용자" class="headerlink" title="사용자"></a>사용자</h2><ul><li>이론에 대해 잘 몰라도 사용은 할 수 있다</li><li>사용해보면서 이 이론, 개념이 어떤 일을 할 수 있는지 알게 된다</li><li>그 이론, 개념이 내부적으로 어떻게 동작하는지 모르지만</li><li>컴퓨터 덕분에 복잡한 것을 쉽게 사용, 경험해 볼 수 있다</li></ul><ul><li>그래픽 도구로 이미지를 편집할 때에도</li><li>클릭 몇 번이면 멋진 효과를 줄 수 있다</li><li>내부적으로 어떻게 동작하는지 모르지만</li><li>이 도구를 사용하면 어떤 결과가 나오는지 알 수 있다</li><li>그러면서 이 도구를 어떻게 만들었는지 궁금해지고</li><li>그 원리에 대해 궁금해질 때도 있다</li><li>또는 이 도구를 사용했을 때 이런 결과가 나오니까</li><li>적절히 응용해서 더 멋진 결과를 만들어 낼 수도 있다</li></ul><ul><li>프로그램은 보통 내부적으로 어떤 일을 하는지 사용자는 알 수 없고, 딱히 알 필요도 없다</li><li>나는 OOP에서 추상화와 캡슐화가 이런 의미도 포함한다고 생각한다</li></ul><ul><li>좋은 사용자, 또 좋은 사용자를 만드는 사람이 되자</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.youtube.com/channel/UCvc8kv-i5fvFTJBFAk6n1SA/community?lb=Ugx1aIE3Olb8931OhW54AaABCQ">https://www.youtube.com/channel/UCvc8kv-i5fvFTJBFAk6n1SA/community?lb=Ugx1aIE3Olb8931OhW54AaABCQ</a></li><li><a href="https://www.youtube.com/watch?v=C6VG4d28z3A">https://www.youtube.com/watch?v=C6VG4d28z3A</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/%EC%83%9D%EA%B0%81/">생각</category>
      
      
      <category domain="https://chinsun9.github.io/tags/%EC%83%9D%EA%B0%81/">생각</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/28/%EC%A2%8B%EC%9D%80-%EC%82%AC%EC%9A%A9%EC%9E%90/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>aws credentials 여러개</title>
      <link>https://chinsun9.github.io/2021/04/28/aws-credentials-%EC%97%AC%EB%9F%AC%EA%B0%9C/</link>
      <guid>https://chinsun9.github.io/2021/04/28/aws-credentials-%EC%97%AC%EB%9F%AC%EA%B0%9C/</guid>
      <pubDate>Wed, 28 Apr 2021 07:37:57 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;여러개의 자격 증명 프로필을 가질 수 있다&lt;/li&gt;
&lt;li&gt;이 경우에 aws cli, aws sam cli 등 커맨드라인을 사용할 때&lt;/li&gt;
&lt;li&gt;프로필을 지정해 줘야한다&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;프로필-추가&quot;&gt;&lt;a hre</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>여러개의 자격 증명 프로필을 가질 수 있다</li><li>이 경우에 aws cli, aws sam cli 등 커맨드라인을 사용할 때</li><li>프로필을 지정해 줘야한다</li></ul><h2 id="프로필-추가"><a href="#프로필-추가" class="headerlink" title="프로필 추가"></a>프로필 추가</h2><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># aws configure --profile &#123;profile name&#125;</span></span><br><span class="line">aws configure --profile newprofile</span><br></pre></td></tr></table></figure><blockquote><p>AWS Access Key ID [None]: new<br>AWS Secret Access Key [None]: newkey<br>Default region name [None]:<br>Default output format [None]:</p></blockquote><ul><li><code>aws configure --profile &#123;profile name&#125;</code> 명령을 치면 위 처럼 나오는데</li><li>여기에 키아이디와 키를 입력한다</li></ul><figure class="highlight txt"><figcaption><span>%USERPROFILE%/.aws/credentials</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[default]</span><br><span class="line">aws_access_key_id = xxxxxxxxxxxxxxxxxxxx</span><br><span class="line">aws_secret_access_key = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line"></span><br><span class="line">[newprofile]</span><br><span class="line">aws_access_key_id = new</span><br><span class="line">aws_secret_access_key = newkey</span><br></pre></td></tr></table></figure><ul><li><strong>%USERPROFILE%/.aws/credentials</strong> 파일을 열어보면 위처럼 [default] 프로필 아래에</li><li>새로운 프로필이 등록되었을 것이다</li></ul><h2 id="프로필-스위치"><a href="#프로필-스위치" class="headerlink" title="프로필 스위치"></a>프로필 스위치</h2><ul><li>나는 두 가지 방법을 써봤다</li></ul><h3 id="방법-1-AWS-PROFILE-환경-변수-설정"><a href="#방법-1-AWS-PROFILE-환경-변수-설정" class="headerlink" title="방법 1; AWS_PROFILE 환경 변수 설정"></a>방법 1; AWS_PROFILE 환경 변수 설정</h3><ul><li>환경 변수 <code>AWS_PROFILE</code>을 원하는 프로필명으로 설정한다</li><li><code>set AWS_PROFILE &#123;profilename&#125;</code></li><li><code>setx AWS_PROFILE &#123;profilename&#125;</code></li><li>이렇게 2가지를 사용할 수 있다</li><li>set은 해당 터미널에서만 적용된다. 해당 터미널이 닫히면 같이 날라간다</li><li>setx는 모든 터미널에서 적용된다.</li><li>setx의 경우 모든 터미널을 닫았다가 열어야 적용된다. vscode 전부 닫았다가 켜야 적용된다</li></ul><ul><li>참고 ;</li><li>환경 변수 삭제 <code>setx AWS_PROFILE &quot;&quot;</code></li><li>명명된 프로파일 ; <a href="https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-configure-profiles.html">https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-configure-profiles.html</a></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$AWS_PROFILE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cmd (windows)</span></span><br><span class="line"><span class="built_in">echo</span> %AWS_PROFILE%</span><br></pre></td></tr></table></figure><ul><li>환경 변수 적용 확인을 꼭하자</li></ul><ul><li>방법 1은 가장 자주 쓰는 프로필을 지정할 때 좋을 것 같다</li></ul><h3 id="방법-2-옵션-사용"><a href="#방법-2-옵션-사용" class="headerlink" title="방법 2; 옵션 사용"></a>방법 2; 옵션 사용</h3><ul><li>환경변수 세팅 말고,</li><li>aws cli를 사용할 때 <code>--profile</code>옵션을 줄 수 있다</li><li>aws cli를 사용하다 보면 옵션을 주지 않아도 프로필이 한 개가 아니면 명령을 실행하다가도 어떤 프로필을 사용할지 물어본다</li><li>근데 실수로 다른 계정에 배포를 할 수 있으니까.. <code>--profile</code> 옵션을 쓰는 게 좋을 것 같다</li><li>sam cli의 경우 deploy 할 때 <code>sam deploy --profile newprofile</code> 이런 식으로 할 수 있겠다</li></ul><ul><li>방법 2는 워크스페이스 별로 여러 프로필로 작업할 때 좋을 것 같다.. 헷갈리지 않도록 메모 필수..!</li><li>sam deploy ; <a href="https://docs.aws.amazon.com/ko_kr/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-deploy.html">https://docs.aws.amazon.com/ko_kr/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-deploy.html</a></li></ul><h3 id="방법-3-번외-config-file-사용-aws-sdk"><a href="#방법-3-번외-config-file-사용-aws-sdk" class="headerlink" title="방법 3 (번외?); config file 사용 (aws-sdk)"></a>방법 3 (번외?); config file 사용 (aws-sdk)</h3><ul><li>cli에 적용되는 것은 아닌데, nodejs app에서 aws sdk 자격 증명하는데 json 파일을 쓸 수 있다</li><li>로컬에서 개발하고 클라우드 환경으로 올릴 때, 그 환경마다 <code>aws configure</code> 하는 게 귀찮다</li></ul><figure class="highlight json"><figcaption><span>config.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;accessKeyId&quot;</span>: <span class="string">&quot;xxxxxxxxxxxxxxxxxxxx&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;secretAccessKey&quot;</span>: <span class="string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;region&quot;</span>: <span class="string">&quot;ap-northeast-2&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>example.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> AWS <span class="keyword">from</span> <span class="string">&#x27;aws-sdk&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span>;</span><br><span class="line">AWS.config.loadFromPath(path.join(__dirname, <span class="string">&#x27;./config.json&#x27;</span>));</span><br></pre></td></tr></table></figure><ul><li>json 파일로 자격 증명할 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>프로필 추가 ; <a href="https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-configure-quickstart.html">https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-configure-quickstart.html</a></li><li>명명된 프로파일 ; <a href="https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-configure-profiles.html">https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-configure-profiles.html</a></li><li>sam deploy ; <a href="https://docs.aws.amazon.com/ko_kr/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-deploy.html">https://docs.aws.amazon.com/ko_kr/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-deploy.html</a></li><li>구성 및 자격 증명 파일 설정 ; <a href="https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-configure-files.html?shortFooter=true">https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-configure-files.html?shortFooter=true</a></li><li>자격 증명 우선순위 ; <a href="https://docs.aws.amazon.com/ko_kr/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html">https://docs.aws.amazon.com/ko_kr/sdk-for-javascript/v2/developer-guide/setting-credentials-node.html</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/aws-cli/">aws cli</category>
      
      <category domain="https://chinsun9.github.io/tags/credentials/">credentials</category>
      
      <category domain="https://chinsun9.github.io/tags/sam-cli/">sam cli</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/28/aws-credentials-%EC%97%AC%EB%9F%AC%EA%B0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>aws lambda에서 git쓰기</title>
      <link>https://chinsun9.github.io/2021/04/28/aws-lambda%EC%97%90%EC%84%9C-git%EC%93%B0%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/04/28/aws-lambda%EC%97%90%EC%84%9C-git%EC%93%B0%EA%B8%B0/</guid>
      <pubDate>Wed, 28 Apr 2021 06:14:01 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;arn:aws:lambda:us-east-1:553035198032:layer:git-lambda2:8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;람다 레이어에 위 arn을 추가한다&lt;/li&gt;
&lt;li&gt;사용 런타임에 따라</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>arn:aws:lambda:us-east-1:553035198032:layer:git-lambda2:8</p></blockquote><ul><li>람다 레이어에 위 arn을 추가한다</li><li>사용 런타임에 따라 다른 arn을 추가해야 한다는데</li><li><a href="https://github.com/lambci/git-lambda-layer">https://github.com/lambci/git-lambda-layer</a> README.md를 확인해서 추가하자</li></ul><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>람다에서 git 명령을 사용하고 싶다</li></ul><h2 id="레이어-추가"><a href="#레이어-추가" class="headerlink" title="레이어 추가"></a>레이어 추가</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Resources:</span></span><br><span class="line">  <span class="attr">HelloWorldFunction:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::Function</span> <span class="comment"># More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">CodeUri:</span> <span class="string">hello-world/</span></span><br><span class="line">      <span class="attr">Handler:</span> <span class="string">app.lambdaHandler</span></span><br><span class="line">      <span class="attr">Runtime:</span> <span class="string">nodejs14.x</span></span><br><span class="line">      <span class="attr">Layers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&#x27;arn:aws:lambda:us-east-1:553035198032:layer:git-lambda2:8&#x27;</span> <span class="comment"># 여기를 추가!!</span></span><br></pre></td></tr></table></figure><ul><li>sam template.yaml에서는 위와 같이 추가한다</li><li>또는 aws console로 직접 해당 람다에 가서 추가해 줄 수 있다</li></ul><h2 id="람다에서-깃-쓸-때-고려사항"><a href="#람다에서-깃-쓸-때-고려사항" class="headerlink" title="람다에서 깃 쓸 때 고려사항"></a>람다에서 깃 쓸 때 고려사항</h2><ul><li>람다에서는 가급적 가벼운 일을 해야 한다</li><li>git clone 한다면 /tmp 디렉터리에서 한다 (clone 옵션을 살펴서 최대한 필요한 것만 가져오자)</li><li>인증은 <code>Personal access tokens</code>을 사용했다<ul><li>토큰이 <code>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</code> 이렇게 있을 때,</li><li>https://<code>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</code>@github.com/<code>&#123;레포 오너&#125;</code>/<code>&#123;레포 명&#125;</code>.git</li><li>이렇게 사용할 수 있다</li></ul></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/lambci/git-lambda-layer">https://github.com/lambci/git-lambda-layer</a></li><li>람다 레이어 정리 ; <a href="https://chinsun9.github.io/2021/01/05/aws-sam-%EC%A0%95%EB%A6%AC/">https://chinsun9.github.io/2021/01/05/aws-sam-정리/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/lambda/">lambda</category>
      
      <category domain="https://chinsun9.github.io/tags/arn/">arn</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/28/aws-lambda%EC%97%90%EC%84%9C-git%EC%93%B0%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>shell 파라미터 사용하기</title>
      <link>https://chinsun9.github.io/2021/04/28/shell-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/04/28/shell-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Wed, 28 Apr 2021 00:55:59 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;example.sh&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight sh"><figcaption><span>example.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;zzzz <span class="variable">$#</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;zzzz <span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;zzzz <span class="variable">$@</span>&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>$ ./example.sh 1 2 3<br>zzzz 3<br>zzzz 1<br>zzzz 1 2 3</p></blockquote><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://jink1982.tistory.com/36">https://jink1982.tistory.com/36</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/bash/">bash</category>
      
      
      <category domain="https://chinsun9.github.io/tags/bash/">bash</category>
      
      <category domain="https://chinsun9.github.io/tags/shell/">shell</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/28/shell-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>윈도우 aws sam cli 설치</title>
      <link>https://chinsun9.github.io/2021/04/27/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-sam-cli-%EC%84%A4%EC%B9%98/</link>
      <guid>https://chinsun9.github.io/2021/04/27/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-sam-cli-%EC%84%A4%EC%B9%98/</guid>
      <pubDate>Tue, 27 Apr 2021 07:49:54 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-sam-cli-%EC%84%A4%EC%B9%9</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-sam-cli-%EC%84%A4%EC%B9%9820210427/preview.png" alt=" "></p><ul><li><a href="https://docs.aws.amazon.com/ko_kr/serverless-application-model/latest/developerguide/serverless-sam-cli-install-windows.html#serverless-sam-cli-install-windows-sam-cli">https://docs.aws.amazon.com/ko_kr/serverless-application-model/latest/developerguide/serverless-sam-cli-install-windows.html#serverless-sam-cli-install-windows-sam-cli</a></li><li>위 링크로 들어가면 설치 프로그램을 받을 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.aws.amazon.com/ko_kr/serverless-application-model/latest/developerguide/serverless-sam-cli-install-windows.html#serverless-sam-cli-install-windows-sam-cli">https://docs.aws.amazon.com/ko_kr/serverless-application-model/latest/developerguide/serverless-sam-cli-install-windows.html#serverless-sam-cli-install-windows-sam-cli</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/aws-cli/">aws cli</category>
      
      <category domain="https://chinsun9.github.io/tags/aws-sam-cli/">aws sam cli</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/27/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-sam-cli-%EC%84%A4%EC%B9%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>윈도우 aws cli 설치</title>
      <link>https://chinsun9.github.io/2021/04/27/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-cli-%EC%84%A4%EC%B9%98/</link>
      <guid>https://chinsun9.github.io/2021/04/27/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-cli-%EC%84%A4%EC%B9%98/</guid>
      <pubDate>Tue, 27 Apr 2021 07:46:27 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-cli-%EC%84%A4%EC%B9%98202</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-cli-%EC%84%A4%EC%B9%9820210427/preview.png" alt=" "></p><ul><li><a href="https://aws.amazon.com/ko/cli/">https://aws.amazon.com/ko/cli/</a> 들어가면 설치 프로그램으로 받을 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://aws.amazon.com/ko/cli/">https://aws.amazon.com/ko/cli/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/aws-cli/">aws cli</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/27/%EC%9C%88%EB%8F%84%EC%9A%B0-aws-cli-%EC%84%A4%EC%B9%98/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>parseInt vs. Math.floor</title>
      <link>https://chinsun9.github.io/2021/04/26/parseInt-vs-Math-floor/</link>
      <guid>https://chinsun9.github.io/2021/04/26/parseInt-vs-Math-floor/</guid>
      <pubDate>Mon, 26 Apr 2021 06:07:40 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> n = <span class="number">1.1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(n), <span class="built_in">parseInt</span>(n)); <span class="comment">// 1 1</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">1.9</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(n), <span class="built_in">parseInt</span>(n)); <span class="comment">// 1 1</span></span><br><span class="line"></span><br><span class="line">n = -<span class="number">1.1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(n), <span class="built_in">parseInt</span>(n)); <span class="comment">// -2 -1</span></span><br><span class="line"></span><br><span class="line">n = -<span class="number">1.9</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(n), <span class="built_in">parseInt</span>(n)); <span class="comment">// -2 -1</span></span><br></pre></td></tr></table></figure><ul><li>소수점 이하를 버릴 때 <code>Math.floor()</code>(내림)를 주로 썼는데 음수에서 기대한 것과 다르게 동작하는 것을 알게 되었다…</li><li><code>parseInt()</code>는 매개변수로 문자열을 받기 때문에 주로 문자열로부터 숫자를 파싱 할 때 사용하는 줄 알았다</li><li><code>parseInt()</code>는 매개변수로 string 타입이 아니면 스트링으로 자동 캐스팅하여 그냥 숫자를 넘겨줘도 잘 동작한다</li></ul><ul><li>⚠️ 음 근데 문자열로 된 숫자를 인풋으로 줄 때 주의해야 한다</li><li>parseInt나 Math.floor나 상관없이 엄청나게 큰 문자열로 된 숫자를 number 타입으로 캐스팅하는 용도로 사용하면 안 된다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/parseInt">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/parseInt</a></li><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/BigInt">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/BigInt</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/parseInt/">parseInt</category>
      
      <category domain="https://chinsun9.github.io/tags/Math-floor/">Math.floor</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/26/parseInt-vs-Math-floor/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>js scope 스코프, 렉시컬 스코프</title>
      <link>https://chinsun9.github.io/2021/04/26/js-scope-%EC%8A%A4%EC%BD%94%ED%94%84/</link>
      <guid>https://chinsun9.github.io/2021/04/26/js-scope-%EC%8A%A4%EC%BD%94%ED%94%84/</guid>
      <pubDate>Mon, 26 Apr 2021 02:12:50 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;전역 변수, 지역 변수 구분하는 것이다&lt;/li&gt;
&lt;li&gt;스코프 ; 중괄호로 묶인 영역&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;전역-지역-변수&quot;&gt;&lt;a href=&quot;#전역-지역-변수&quot; class=&quot;headerlink&quot; title=&quot;전역, 지역 변</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>전역 변수, 지역 변수 구분하는 것이다</li><li>스코프 ; 중괄호로 묶인 영역</li></ul><h2 id="전역-지역-변수"><a href="#전역-지역-변수" class="headerlink" title="전역, 지역 변수"></a>전역, 지역 변수</h2><figure class="highlight js"><figcaption><span>지역변수는 바깥에서 사용할 수 없다</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> f = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> x = <span class="number">123</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">f(); <span class="comment">// 123</span></span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// 에러 ; ReferenceError: x is not defined</span></span><br></pre></td></tr></table></figure><ul><li>함수 f 에 선언된 f의 지역변수 <code>x</code>를 바깥에서 사용하지 못하는 모습이다</li></ul><figure class="highlight js"><figcaption><span>전역 변수 사용</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> f = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// 123</span></span><br><span class="line">f(); <span class="comment">// 123</span></span><br></pre></td></tr></table></figure><ul><li>반대로 함수에서는 바깥에 선언된 전역 변수 x를 사용할 수 있다</li></ul><figure class="highlight js"><figcaption><span>같은 변수명 일 때는 지역변수</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> f = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> x = <span class="number">999</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(x); <span class="comment">// 123</span></span><br><span class="line">f(); <span class="comment">// 999</span></span><br></pre></td></tr></table></figure><ul><li>전역 변수, 지역 변수에 동일한 이름의 변수가 있으면 가까운 변수를 참조한다</li></ul><h2 id="스코프-체인"><a href="#스코프-체인" class="headerlink" title="스코프 체인"></a>스코프 체인</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    x = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(x); <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">let</span> x = <span class="number">111</span>;</span><br><span class="line">      <span class="built_in">console</span>.log(x); <span class="comment">// 111</span></span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(x); <span class="comment">// 111</span></span><br><span class="line">        x = <span class="number">222</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(x); <span class="comment">// 222</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>가깝다는 것은 일단 <code>&#123;&#125;</code> 스코프를 기준으로</li><li>일단 자기 자신이 속한 스코프에서 변수 x를 찾는다</li><li>없으면 상위 스코프에서 찾는다</li><li>찾을 때까지 반복한다</li><li>이를 <strong>스코프 체인</strong>이라고 한다</li></ul><ul><li>근데 이 스코프에 의한 전역, 지역 변수 구분은,</li><li>그러니까 내가 진짜로 참조하는 변수는 스코프를 선언할 때 결정된다 (렉시컬 스코핑)</li></ul><h2 id="렉시컬-스코핑"><a href="#렉시컬-스코핑" class="headerlink" title="렉시컬 스코핑"></a>렉시컬 스코핑</h2><figure class="highlight js"><figcaption><span>렉시컬 스코핑</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> f = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> main = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> x = <span class="number">999</span>;</span><br><span class="line">  f(); <span class="comment">// 1</span></span><br><span class="line">  <span class="built_in">console</span>.log(x); <span class="comment">// 999</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">main();</span><br></pre></td></tr></table></figure><ul><li>선언할 때 결정된다는 것은</li><li>위 코드의 결과처럼</li><li>함수 f 가 선언 당시에 최상위 스코프의 <code>let x = 1</code>을 바라본다는 것이다</li><li>함수 main을 보면 함수 f가 실행되기 전에 스코프의 <code>let x = 999</code>는 함수 f에 영향을 주지 않는다</li></ul><ul><li>이런 개념들은 js를 하면서 그냥 익숙해져 있어서 용어로 설명할 수 있을 정도는 아니었다</li><li>이번 기회에 js 개념, 용어들을 정리해봐야겠다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.zerocho.com/category/JavaScript/post/5740531574288ebc5f2ba97e">https://www.zerocho.com/category/JavaScript/post/5740531574288ebc5f2ba97e</a></li><li>스코프 ; <a href="https://developer.mozilla.org/ko/docs/Glossary/Scope">https://developer.mozilla.org/ko/docs/Glossary/Scope</a></li><li>렉시컬 스코핑 ; <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Closures#%EC%96%B4%ED%9C%98%EC%A0%81_%EB%B2%94%EC%9C%84_%EC%A7%80%EC%A0%95lexical_scoping">https://developer.mozilla.org/ko/docs/Web/JavaScript/Closures#%EC%96%B4%ED%9C%98%EC%A0%81_%EB%B2%94%EC%9C%84_%EC%A7%80%EC%A0%95lexical_scoping</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/scope/">scope</category>
      
      <category domain="https://chinsun9.github.io/tags/scope-chain/">scope chain</category>
      
      <category domain="https://chinsun9.github.io/tags/lexical-scoping/">lexical scoping</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/26/js-scope-%EC%8A%A4%EC%BD%94%ED%94%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>js !! not not (double not)</title>
      <link>https://chinsun9.github.io/2021/04/26/js-not-not/</link>
      <guid>https://chinsun9.github.io/2021/04/26/js-not-not/</guid>
      <pubDate>Mon, 26 Apr 2021 00:52:19 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;어느 날 조건문에서 &lt;code&gt;!!&lt;/code&gt;을 본 적이 있다&lt;/li&gt;
&lt;li&gt;처음에는 왜 쓸모없이 not을 2번 썼지?하면서 리팩토링이랍시고 &lt;code&gt;!!&lt;/code&gt;을 지워버렸다 ㅋㅋㅋ&lt;/li&gt;
&lt;li&gt;그런데 알아보니까 &lt;cod</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>어느 날 조건문에서 <code>!!</code>을 본 적이 있다</li><li>처음에는 왜 쓸모없이 not을 2번 썼지?하면서 리팩토링이랍시고 <code>!!</code>을 지워버렸다 ㅋㅋㅋ</li><li>그런데 알아보니까 <code>Boolean</code> 타입으로 캐스팅해주는 것이었다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!obj) <span class="keyword">return</span>; <span class="comment">// obj가 존재하면 다음 로직 진행</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// obj ...</span></span><br></pre></td></tr></table></figure><ul><li>나는 보통 obj가 유효한지 체크하려고 <code>!</code>을 붙여서 사용하곤 했는데</li><li>이미 <code>!</code>한 개를 붙이면 자동으로 <strong>Boolean</strong>으로 캐스팅된다</li><li>거기에 한 번 더 not을 하면 not not 이라서 <code>Boolean(obj)</code>와 똑같아진다는 것을 알 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_NOT#double_not">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_NOT#double_not</a>_!!</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/not-not/">not not</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/26/js-not-not/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>내가 타입스크립트를 쓰는 이유</title>
      <link>https://chinsun9.github.io/2021/04/23/%EB%82%B4%EA%B0%80-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%93%B0%EB%8A%94-%EC%9D%B4%EC%9C%A0/</link>
      <guid>https://chinsun9.github.io/2021/04/23/%EB%82%B4%EA%B0%80-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%93%B0%EB%8A%94-%EC%9D%B4%EC%9C%A0/</guid>
      <pubDate>Fri, 23 Apr 2021 14:42:08 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;타입스크립트-입문-전&quot;&gt;&lt;a href=&quot;#타입스크립트-입문-전&quot; class=&quot;headerlink&quot; title=&quot;타입스크립트 입문 전&quot;&gt;&lt;/a&gt;타입스크립트 입문 전&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;C, C++, JAVA를 학교 수업으로 들었다&lt;/l</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="타입스크립트-입문-전"><a href="#타입스크립트-입문-전" class="headerlink" title="타입스크립트 입문 전"></a>타입스크립트 입문 전</h2><ul><li>C, C++, JAVA를 학교 수업으로 들었다</li><li>3,4 학년 때는 웹 프로그래밍을 많이 하면서 백엔드는 nodejs, 프론트는 ejs를 했었다</li><li>nodejs 위에서 js를 쓰면서 이것저것 쓰면서 익숙해지고 있었다</li><li>자바스크립트는 공부해서 했기보다는 그냥 막히는 부분마다 검색해서 해결했었다</li><li>for문도 그냥 array api(foreach, map, reduce) 안 쓰고 <code>for(;;)</code>로 다 짜고..</li><li>그당시 내가 느끼기로 자바스크립트는 C나 JAVA에 없는 괴랄한 문법이 많이 있었다</li><li>그런거에 흥미를 가지면서 for(;;) 쓰는거 그만하고 js스러운 코드를 짜기 시작했었던 같다</li><li>또 js는 여태껏 배워온 C나 JAVA와 다르게 타입에 전혀 얽매이지 않고, 웬만하면 에러없이 동작해서 엄청 편했다</li></ul><h2 id="타입스크립트-입문-동기"><a href="#타입스크립트-입문-동기" class="headerlink" title="타입스크립트 입문 동기"></a>타입스크립트 입문 동기</h2><ul><li>ts를 한번 쓰면 못 빠져나온다는 조언을 들음</li><li>(그만큼 좋다)</li></ul><h2 id="타입스크립트-첫인상"><a href="#타입스크립트-첫인상" class="headerlink" title="타입스크립트 첫인상"></a>타입스크립트 첫인상</h2><ul><li>기존에 배웠던 엄격한 언어들과는 다르게 js는 엄청 유연한? 언어였다</li><li>나는 이런 특성이 편하게 다가왔다</li><li>타입 때문에 골머리 아프지 않아도 돼서 뭔가 해방된 느낌이 들었기 때문이다</li><li>그런데 타입스크립트라고 자바스크립트에서 굳이 타입을 붙여 써서 뭐가 좋아지는지</li><li>왜 다시 역행하는지에 대해 약간 의문이 있었다</li><li>실제로 시작해서도 그간 타입을 명시하지 않았던 편안함을 잃은 기분이었다</li></ul><ul><li>타입스크립트를 쓰면…</li></ul><blockquote><p>1 + ‘1’<br>// ‘11’</p></blockquote><ul><li>숫자+숫자로 예상했는데 실제론 숫자+문자열하는 일은 안 겪어되는 것부터 해서</li><li>실행 전에 에러를 잡아 준다는데,,</li><li>그거야 처음에 잘 짜면 되는 것을,, 이때는 공감하지 못했다.</li></ul><h2 id="내가-생각하는-타입스크립트-장점"><a href="#내가-생각하는-타입스크립트-장점" class="headerlink" title="내가 생각하는 타입스크립트 장점"></a>내가 생각하는 타입스크립트 장점</h2><h3 id="7개월차-20년-9월-21년-4월"><a href="#7개월차-20년-9월-21년-4월" class="headerlink" title="7개월차 (20년 9월 - 21년 4월)"></a>7개월차 (20년 9월 - 21년 4월)</h3><ul><li>타입스크립트는 짱이다</li><li>위에서 말한 타입스크립트를 쓰는 일반적인 장점이 있지만,</li><li>나는 이 장점 다 필요 없고 <strong>자동완성이 100%</strong> 보장된다는 점에서 타입스크립트를 좋아한다</li><li>예를 들면 그냥 js를 쓸 때는 배열 변수에 <code>.</code> 찍어도 array api 자동완성이 안된다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EB%82%B4%EA%B0%80-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%93%B0%EB%8A%94-%EC%9D%B4%EC%9C%A020210423/preview.png" alt=" "></p><ul><li>위가 js고 아래가 ts다</li><li>위는 그냥 arr 변수가 배열이든 아니든 그냥 스니펫만 제공하는 반면</li><li>아래 ts의 경우 배열 타입에 맞춰서 그에 맞는 array api를 자동완성해주는 모습이다</li></ul><ul><li>이 정도까지는 그냥 코드 스니펫으로 해결할 수 있는 수준이지만</li><li>이런 api 자동완성은 기본이고, 어떤 클래스나 객체를 생성해서 하위에 멤버 변수가 있을 때</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EB%82%B4%EA%B0%80-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%93%B0%EB%8A%94-%EC%9D%B4%EC%9C%A020210423/1.png" alt=" "></p><ul><li><code>.</code>만 찍으면 전부 자동완성 해준다. 오타로 인해 삽질할 필요가 전혀없는거다</li></ul><ul><li>나는 코드 쓸 때 쉬프트 누르는 것을 별로 안 좋아한다. 쉬프트를 누르면 순간 느려지고 오타도 생기기도 하고.. 답답해진다</li><li>c나 java를 할 때도 일단 소문자로 쓰고 나중에 rename 기능을 통해 카멜 케이스로 변경할 만큼..</li><li>ts를 쓰면 이런 고민이 필요 없는 게 최초 1회만 잘 작성해두면 <code>ctrl space</code>만으로 코드를 작성할 수 있다 ㅋㅋㅋ</li></ul><ul><li>또 장점이라면 내가 잘못된 코드를 작성했을 때 실행도 시켜주지 않기 때문에 모르고 지나갈 수 없다</li><li>오류가 생기면 어디서 오류가 생겼는지 확실히 알 수 있다!</li></ul><ul><li>결론! 자동완성에 한번 빠지면 헤어 나올 수 없다</li><li>아니 이것도 자동완성이 된다고? 하는 곳까지 진짜 다 된다</li><li>ts하다가 js가면 한숨이 나올 것이다</li></ul><h3 id="타입스크립트-더-고수가-되고-생각나면-추가해야지"><a href="#타입스크립트-더-고수가-되고-생각나면-추가해야지" class="headerlink" title="타입스크립트 더 고수가 되고 생각나면 추가해야지.."></a>타입스크립트 더 고수가 되고 생각나면 추가해야지..</h3>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/23/%EB%82%B4%EA%B0%80-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%93%B0%EB%8A%94-%EC%9D%B4%EC%9C%A0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>taskkill -jar</title>
      <link>https://chinsun9.github.io/2021/04/23/taskkill-jar/</link>
      <guid>https://chinsun9.github.io/2021/04/23/taskkill-jar/</guid>
      <pubDate>Fri, 23 Apr 2021 08:40:23 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;상황&quot;&gt;&lt;a href=&quot;#상황&quot; class=&quot;headerlink&quot; title=&quot;상황&quot;&gt;&lt;/a&gt;상황&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;java -jar&lt;/code&gt;로 runable jar을 실행할 수 있다&lt;/li&gt;
&lt;li&gt;그런데 이 jar</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li><code>java -jar</code>로 runable jar을 실행할 수 있다</li><li>그런데 이 jar을 cmd로 종료할 수 없을까?</li><li>보통의 프로그램이라면 <code>taskkill /F /IM</code>로 <strong>프로세스 이름</strong>을 통해 종료할 수 있다</li><li>근데 <code>java -jar</code> 실행한 앱의 경우, 프로세스명이 java.exe, javaw.exe 정도이다</li></ul><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><ul><li><code>jps</code> 명령으로 .jar 파일 이름을 통해 PID를 얻을 수 있다</li><li>jps는 jdk가 설치되어있고 환경 변수만 잘 설정되어있다면 그냥 동작한다</li></ul><figure class="highlight bat"><figcaption><span>example.bat</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">rem example</span></span><br><span class="line"><span class="keyword">for</span> /f &quot;tokens=<span class="number">1</span>&quot; %i <span class="keyword">in</span> (&#x27;jps -m ^| <span class="built_in">find</span> &quot;myApp&quot;&#x27;) <span class="keyword">do</span> ( <span class="built_in">taskkill</span> /F /PID %i )</span><br></pre></td></tr></table></figure><ul><li>find “myApp” 부분에 jar 파일 명을 적으면 된다</li><li>jar 파일명을 완전히 적지 않아도 된다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://yannickloriot.com/2012/08/kill-a-java-process-from-the-command-line-or-a-bat-file/">https://yannickloriot.com/2012/08/kill-a-java-process-from-the-command-line-or-a-bat-file/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/java/">java</category>
      
      
      <category domain="https://chinsun9.github.io/tags/java/">java</category>
      
      <category domain="https://chinsun9.github.io/tags/taskkill/">taskkill</category>
      
      <category domain="https://chinsun9.github.io/tags/jar/">jar</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/23/taskkill-jar/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>gradle build 특정 jdk 버전으로</title>
      <link>https://chinsun9.github.io/2021/04/22/gradle-build-%ED%8A%B9%EC%A0%95-jdk-%EB%B2%84%EC%A0%84%EC%9C%BC%EB%A1%9C/</link>
      <guid>https://chinsun9.github.io/2021/04/22/gradle-build-%ED%8A%B9%EC%A0%95-jdk-%EB%B2%84%EC%A0%84%EC%9C%BC%EB%A1%9C/</guid>
      <pubDate>Thu, 22 Apr 2021 02:19:47 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;상황&quot;&gt;&lt;a href=&quot;#상황&quot; class=&quot;headerlink&quot; title=&quot;상황&quot;&gt;&lt;/a&gt;상황&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;내 컴퓨터에는 여러 가지 자바 버전이 설치되어있다. (jdk1.8.0_281, jdk-13.0.2)&lt;/li&gt;
&lt;li</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>내 컴퓨터에는 여러 가지 자바 버전이 설치되어있다. (jdk1.8.0_281, jdk-13.0.2)</li><li>자바 버전 1.8에서 동작하는 runable jar 파일을 만드는데, 1.8에서 실행이 안되었다</li><li>그래들 프로젝트이다</li><li>분명 프로젝트 세팅은 1.8로 되어있는데 막상 빌드 결과물 jar이 1.8에서 실행이 안되었다</li><li>그런데 13에서 실행이 되는 것을 확인하고, 빌드가 다른 자바 버전으로 되는 것을 확인했다</li></ul><figure class="highlight plain"><figcaption><span>error message</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: A JNI Error has occurred, ... has been compiled by a more recent version of the java runtime</span><br></pre></td></tr></table></figure><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradlew build -Dorg.gradle.java.home&#x3D;&quot;C:\Program Files\Java\jdk1.8.0_281&quot;</span><br></pre></td></tr></table></figure><ul><li>빌드할 때 자바 홈을 명시해 주었더니 해결되었다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/a/66795979">https://stackoverflow.com/a/66795979</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/java/">java</category>
      
      
      <category domain="https://chinsun9.github.io/tags/java/">java</category>
      
      <category domain="https://chinsun9.github.io/tags/gradle/">gradle</category>
      
      <category domain="https://chinsun9.github.io/tags/jar/">jar</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/22/gradle-build-%ED%8A%B9%EC%A0%95-jdk-%EB%B2%84%EC%A0%84%EC%9C%BC%EB%A1%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>code . 현재창으로 열기</title>
      <link>https://chinsun9.github.io/2021/04/14/code-%ED%98%84%EC%9E%AC%EC%B0%BD%EC%9C%BC%EB%A1%9C-%EC%97%B4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/04/14/code-%ED%98%84%EC%9E%AC%EC%B0%BD%EC%9C%BC%EB%A1%9C-%EC%97%B4%EA%B8%B0/</guid>
      <pubDate>Wed, 14 Apr 2021 12:20:42 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd project</span><br><span class="line">code .</span><br></pre></td></tr></table></figure><ul><li>vscode 내부 터미널에서 <code>cd</code> 명령을 통해 다른 폴더로 이동한다</li><li>해당 폴더를 <code>code .</code>으로 열 수 있다</li><li>이 경우에는 새창으로 해당 폴더가 열린다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code . -r</span><br></pre></td></tr></table></figure><ul><li><code>-r</code>옵션을 붙여주면 현재 창을 통해 열리게 된다</li><li>이 옵션을 자주 쓸 것 같다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://code.visualstudio.com/docs/editor/command-line#_core-cli-options">https://code.visualstudio.com/docs/editor/command-line#_core-cli-options</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/14/code-%ED%98%84%EC%9E%AC%EC%B0%BD%EC%9C%BC%EB%A1%9C-%EC%97%B4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>정규식으로 숫자를 포함하지 않는 것만 가져오기</title>
      <link>https://chinsun9.github.io/2021/04/14/%EC%A0%95%EA%B7%9C%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EC%88%AB%EC%9E%90%EB%A5%BC-%ED%8F%AC%ED%95%A8%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%83%EB%A7%8C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/04/14/%EC%A0%95%EA%B7%9C%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EC%88%AB%EC%9E%90%EB%A5%BC-%ED%8F%AC%ED%95%A8%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%83%EB%A7%8C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/</guid>
      <pubDate>Wed, 14 Apr 2021 12:00:08 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> nickNameList = [<span class="string">&#x27;chinsung&#x27;</span>, <span class="string">&#x27;chinsun99999999&#x27;</span>, <span class="string">&#x27;2021&#x27;</span>, <span class="string">&#x27;regexp&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> noNumber = nickNameList.filter(<span class="function">(<span class="params">nickName</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> hasNumber = <span class="regexp">/\d/</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> !hasNumber.test(nickName);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(noNumber);</span><br></pre></td></tr></table></figure><ul><li>배열에서 숫자를 포함하는 값만 뽑아보자</li><li>또는 숫자를 포함하는 값만 뽑아보자</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/reg-exp/">reg exp</category>
      
      
      <category domain="https://chinsun9.github.io/tags/reg-exp/">reg exp</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/14/%EC%A0%95%EA%B7%9C%EC%8B%9D%EC%9C%BC%EB%A1%9C-%EC%88%AB%EC%9E%90%EB%A5%BC-%ED%8F%AC%ED%95%A8%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%83%EB%A7%8C-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>정규식으로 2개 이상 연속된 문자열 찾기</title>
      <link>https://chinsun9.github.io/2021/04/14/%EC%A0%95%EA%B7%9C%EC%8B%9D%EC%9C%BC%EB%A1%9C-2%EA%B0%9C-%EC%9D%B4%EC%83%81-%EC%97%B0%EC%86%8D%EB%90%9C-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%B0%BE%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/04/14/%EC%A0%95%EA%B7%9C%EC%8B%9D%EC%9C%BC%EB%A1%9C-2%EA%B0%9C-%EC%9D%B4%EC%83%81-%EC%97%B0%EC%86%8D%EB%90%9C-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%B0%BE%EA%B8%B0/</guid>
      <pubDate>Wed, 14 Apr 2021 11:35:08 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> reg = <span class="regexp">/(.)\1+/</span>;</span><br><span class="line"></span><br><span class="line">reg.test(<span class="string">&quot;aa&quot;</span>); <span class="comment">//true</span></span><br><span class="line">reg.test(<span class="string">&quot;ab&quot;</span>); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">reg.test(<span class="string">&quot;cook&quot;</span>); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/reg-exp/">reg exp</category>
      
      
      <category domain="https://chinsun9.github.io/tags/reg-exp/">reg exp</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/14/%EC%A0%95%EA%B7%9C%EC%8B%9D%EC%9C%BC%EB%A1%9C-2%EA%B0%9C-%EC%9D%B4%EC%83%81-%EC%97%B0%EC%86%8D%EB%90%9C-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%B0%BE%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git submodule 중첩된 깃 사용하기</title>
      <link>https://chinsun9.github.io/2021/04/14/git-submodule-%EC%A4%91%EC%B2%A9%EB%90%9C-%EA%B9%83-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/04/14/git-submodule-%EC%A4%91%EC%B2%A9%EB%90%9C-%EA%B9%83-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Wed, 14 Apr 2021 01:38:21 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/git-submodule-%EC%A4%91%EC%B2%A9%EB%90%9C-%EA%B9%83-%EC%8</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/git-submodule-%EC%A4%91%EC%B2%A9%EB%90%9C-%EA%B9%83-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B020210414/preview.png" alt=" "></p><ul><li>깃 아래 깃..!</li></ul><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">super</span><br><span class="line">├── client</span><br><span class="line">│   └── 1</span><br><span class="line">└── server</span><br><span class="line">    └── 1</span><br></pre></td></tr></table></figure><ul><li>이런 구조의 프로젝트가 있다</li><li>super에서 <code>git init</code> 하여 프로젝트를 관리하다 보면</li><li>깃 히스토리가 client 내용, server 내용이 합쳐져 있다</li><li>구분하기 위해 커밋 메시지를 적을 때도 어떻게 적어야 할지 망설이게 된다</li></ul><ul><li>그래서 super, client, server에 모두 <code>git init</code>하고</li><li>super에서는 client와 server를 gitignore에 추가하고 사용해봤는데,</li><li>이것도 좋은 방법은 아닌 것 같았다.</li></ul><ul><li>그래서 <strong>nested git repository</strong> 라는 키워드로 검색했고 <code>submodule</code> 이라는 것을 사용하면 된다는 것을 알게 되었다</li><li>submodule을 사용하면 super 디렉터리에서 명령어 하나로 하위의 서브모듈 깃 프로젝트를 업데이트(pull) 할 수 있다</li></ul><h2 id="공부"><a href="#공부" class="headerlink" title="공부"></a>공부</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/TAe4uZqYt6c" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>생활코딩님의 강의를 보고 공부했다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 전제조건</span><br><span class="line">&#x2F;&#x2F; 명령어를 실행하는 위치는 super 디렉터리이다</span><br><span class="line">&#x2F;&#x2F; submodule로 추가할 프로젝트(client, server)는 모두 git init으로 초기화된 깃 프로젝트이며 원격 저장소에 올라가 있어야 한다</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; submodule 추가 &#x2F;&#x2F; 처음 super에 서브모듈을 추가하는 과정이다</span><br><span class="line">git submodule add &#123;repo url&#125; 디렉터리명</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 이후 다른 컴퓨터에서 super를 클론하는 경우</span><br><span class="line">git clone &#123;super-repo-url&#125; &#x2F;&#x2F; git clone https:&#x2F;&#x2F;github.com&#x2F;chinsun9&#x2F;super.git</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 하위 서브 모듈은 클론되지 않는다</span><br><span class="line">&#x2F;&#x2F; 서브 모듈도 가져오기</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 위 명령은 하위 모든 서브 모듈을 가져온다</span><br><span class="line">&#x2F;&#x2F; 특정 서브 모듈만 가져오고 싶다면</span><br><span class="line">git submodule init &#123;submodule명&#125;</span><br></pre></td></tr></table></figure><ul><li>super에서는 하위 서브모듈의 변경을 감지하고,</li><li>하위 모듈의 해시(특정 버전을 가리키는)를 기억하는 방식으로 관리된다</li></ul><ul><li><code>git submodule update</code> 명령을 사용하여 super에서 저장하고 있는 특정 버전의 하위 모듈로 업데이트한다</li><li><code>git submodule update --remote</code> 명령을 사용하여 각 하위 모듈을 최신 상태로 업데이트할 수 있다</li><li>여러 컴퓨터에서 작업할 때 super를 클론하고 <code>git pull &amp;&amp; git submodule update</code> 명령으로 한 번에 가져올 수 있겠다!</li></ul><h2 id="발생한-문제"><a href="#발생한-문제" class="headerlink" title="발생한 문제"></a>발생한 문제</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git submodule update --remote</span><br><span class="line"></span><br><span class="line">fatal: Needed a single revision</span><br><span class="line">Unable to find current https:&#x2F;&#x2F;github.com&#x2F;chinsun9&#x2F;my-submodule&#x2F;master revision in submodule path &#39;lib&#39;</span><br><span class="line">error Command failed with exit code 1.</span><br><span class="line">info Visit https:&#x2F;&#x2F;yarnpkg.com&#x2F;en&#x2F;docs&#x2F;cli&#x2F;run for documentation about this command.</span><br></pre></td></tr></table></figure><ul><li><code>git submodule update --remote</code> 명령을 실행하니 이런 에러가 발생했다.</li><li>나는 submodule을 알기 전에 그냥 하위에 또 다른 깃 디렉터리를 사용하고 있었는데,</li><li>그 상태 그대로 <code>submodule add</code>하고 사용했더니 위 에러가 발생했다</li></ul><ul><li>해결방법은 기존 하위 레포를 삭제하고 다시 <code>git submodule update --remote</code>를 실행한다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf lib&#x2F;</span><br><span class="line">git submodule update --remote</span><br></pre></td></tr></table></figure><ul><li>혹시 특정 브랜치에 대해 가져오고 싶으면 <code>.gitmodules</code> 파일을 열고 branch 값을 명시해준다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 수정 전</span><br><span class="line">[submodule &quot;client&quot;]</span><br><span class="line">path &#x3D; client</span><br><span class="line">url &#x3D; https:&#x2F;&#x2F;github.com&#x2F;chinsun9&#x2F;my-submodule</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 수정 후</span><br><span class="line">[submodule &quot;client&quot;]</span><br><span class="line">path &#x3D; client</span><br><span class="line">branch &#x3D; mybranchname &#x2F;&#x2F; 추가됨!</span><br><span class="line">url &#x3D; https:&#x2F;&#x2F;github.com&#x2F;chinsun9&#x2F;my-submodule</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/TAe4uZqYt6c">https://youtu.be/TAe4uZqYt6c</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/submodule/">submodule</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/14/git-submodule-%EC%A4%91%EC%B2%A9%EB%90%9C-%EA%B9%83-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>비공개로 작업하던 레포 공개로 전환하기 위해 스크릿 파일 삭제하기</title>
      <link>https://chinsun9.github.io/2021/04/13/%EB%B9%84%EA%B3%B5%EA%B0%9C%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%98%EB%8D%98-%EB%A0%88%ED%8F%AC-%EA%B3%B5%EA%B0%9C%EB%A1%9C-%EC%A0%84%ED%99%98%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EC%8A%A4%ED%81%AC%EB%A6%BF-%ED%8C%8C%EC%9D%BC-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/04/13/%EB%B9%84%EA%B3%B5%EA%B0%9C%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%98%EB%8D%98-%EB%A0%88%ED%8F%AC-%EA%B3%B5%EA%B0%9C%EB%A1%9C-%EC%A0%84%ED%99%98%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EC%8A%A4%ED%81%AC%EB%A6%BF-%ED%8C%8C%EC%9D%BC-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 13 Apr 2021 13:46:27 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;상황&quot;&gt;&lt;a href=&quot;#상황&quot; class=&quot;headerlink&quot; title=&quot;상황&quot;&gt;&lt;/a&gt;상황&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;리액트 스터디가 끝났다..!&lt;/li&gt;
&lt;li&gt;스터디하면서 github에 비공개 레포로 진행했었는데&lt;/li&gt;
&lt;li&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>리액트 스터디가 끝났다..!</li><li>스터디하면서 github에 비공개 레포로 진행했었는데</li><li>스터디를 끝내면서 공개로 전환하기로 했다</li><li>하지만 공개로 전환하기 전에 aws를 사용하면서 저장해둔 rds 접속 정보 등 시크릿 파일을 제거해야 한다</li><li>히스토리에서도 완전히 삭제하는 것을 목표로 한다</li></ul><h2 id="시도1-git-filter-branch"><a href="#시도1-git-filter-branch" class="headerlink" title="시도1 ; git filter-branch"></a>시도1 ; git filter-branch</h2><ul><li><a href="https://docs.github.com/en/github/authenticating-to-github/removing-sensitive-data-from-a-repository#using-filter-branch">https://docs.github.com/en/github/authenticating-to-github/removing-sensitive-data-from-a-repository#using-filter-branch</a></li><li>위 문서를 보니까 <code>git filter-branch</code>를 사용한다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git filter-branch --index-filter &#39;git rm --cached --ignore-unmatch utils\rdsSecret.ts&#39; HEAD</span><br></pre></td></tr></table></figure><ul><li>명령을 실행하니까 <code>filter-repo</code>를 사용하라고 했다</li></ul><h2 id="시도2-git-filter-repo"><a href="#시도2-git-filter-repo" class="headerlink" title="시도2 ; git filter-repo"></a>시도2 ; git filter-repo</h2><ul><li><a href="https://github.com/newren/git-filter-repo/blob/main/INSTALL.md">https://github.com/newren/git-filter-repo/blob/main/INSTALL.md</a></li><li>git filter-repo는 파이썬이 필요하므로, 파이썬이 설치가 안되어있다면 설치하자</li></ul><ul><li>나는 윈도우를 쓰고 있는데, 윈도우에서 인스톨할 때 주의사항이 있었다</li><li>scoop을 통해 설치하면 문제없다 하여 scoop을 설치한다</li></ul><h3 id="scoop-설치-및-filter-repo-설치"><a href="#scoop-설치-및-filter-repo-설치" class="headerlink" title="scoop 설치 및 filter-repo 설치"></a>scoop 설치 및 filter-repo 설치</h3><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EA%B3%B5%EA%B0%9C%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%98%EB%8D%98-%EB%A0%88%ED%8F%AC-%EA%B3%B5%EA%B0%9C%EB%A1%9C-%EC%A0%84%ED%99%98%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EC%8A%A4%ED%81%AC%EB%A6%BF-%ED%8C%8C%EC%9D%BC-%EC%82%AD%EC%A0%9C%ED%95%9820210322/preview.png" alt=" "></p><ul><li><a href="https://scoop.sh/">https://scoop.sh/</a></li><li>scoop은 윈도우용 커맨드 라인 인스톨러라고 한다</li><li>설치를 위해 파워쉘을 관리자 권한으로 실행하고 다음을 실행한다</li></ul><figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scoop 설치</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned <span class="literal">-scope</span> CurrentUser</span><br><span class="line"><span class="built_in">Invoke-Expression</span> (<span class="built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="string">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># filter-repo 설치</span></span><br><span class="line">scoop install git<span class="literal">-filter</span><span class="literal">-repo</span></span><br></pre></td></tr></table></figure><h3 id="filter-repo로-git-history-속-민감한-정보-삭제하기"><a href="#filter-repo로-git-history-속-민감한-정보-삭제하기" class="headerlink" title="filter-repo로 git history 속 민감한 정보 삭제하기"></a>filter-repo로 git history 속 민감한 정보 삭제하기</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git filter-repo --invert-paths --path utils&#x2F;rdsSecret.ts</span><br><span class="line">&#x2F;&#x2F;...</span><br><span class="line">git filter-repo --invert-paths --path secret1</span><br><span class="line">git filter-repo --invert-paths --path secret2</span><br><span class="line">git filter-repo --invert-paths --path secret3</span><br></pre></td></tr></table></figure><ul><li><code>README.md</code>에 민감한 정보가 있는 경우, 기존 내용을 복사했다가</li><li>명령어로 히스토리에서 제거하고,</li><li>다시 파일을 생성하고 민감한 정보를 없애고 새로 커밋을 해주었다.</li></ul><ul><li>이 작업을 진행하면 리모트 주소가 삭제되는데,</li><li><code>git remote add &#123;레포 주소&#125;</code> 한다</li></ul><h2 id="주의사항"><a href="#주의사항" class="headerlink" title="주의사항"></a>주의사항</h2><ul><li>작업을 진행하기 전에 백업 레포를 하나 생성하자</li><li><code>--path</code> 경로 작성할 때, <code>\</code>로 작성하면 안 되고 <code>/</code>로 작성해야 한다</li><li>제거하고자 하는 파일을 이름을 변경한 적이 있던가,</li><li>폴더를 이동했었으면 이전의 내역까지 완전히 사라지지 않는다</li><li>그래서 수동으로 하나씩 찾아서 해줘야 한다</li><li>sourcetree에서 히스토리 검색을 통해서 꼼꼼히 체크하여 삭제를 진행한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.github.com/en/github/authenticating-to-github/removing-sensitive-data-from-a-repository">https://docs.github.com/en/github/authenticating-to-github/removing-sensitive-data-from-a-repository</a></li><li><a href="https://www.youtube.com/watch?v=Bo-8EfDpKxA">https://www.youtube.com/watch?v=Bo-8EfDpKxA</a></li><li><a href="https://github.com/newren/git-filter-repo/">https://github.com/newren/git-filter-repo/</a></li><li><a href="https://m.blog.naver.com/PostView.nhn?blogId=chandong83&amp;logNo=221101838350&amp;proxyReferer=https://www.google.com/">https://m.blog.naver.com/PostView.nhn?blogId=chandong83&amp;logNo=221101838350&amp;proxyReferer=https:%2F%2Fwww.google.com%2F</a> // scoop 설치</li><li><a href="https://marcofranssen.nl/remove-files-from-git-history-using-git-filter-repo/">https://marcofranssen.nl/remove-files-from-git-history-using-git-filter-repo/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/git-filter-repo/">git-filter-repo</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/13/%EB%B9%84%EA%B3%B5%EA%B0%9C%EB%A1%9C-%EC%9E%91%EC%97%85%ED%95%98%EB%8D%98-%EB%A0%88%ED%8F%AC-%EA%B3%B5%EA%B0%9C%EB%A1%9C-%EC%A0%84%ED%99%98%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4-%EC%8A%A4%ED%81%AC%EB%A6%BF-%ED%8C%8C%EC%9D%BC-%EC%82%AD%EC%A0%9C%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>202103 검색 실적</title>
      <link>https://chinsun9.github.io/2021/04/13/202103-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</link>
      <guid>https://chinsun9.github.io/2021/04/13/202103-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</guid>
      <pubDate>Tue, 13 Apr 2021 12:02:41 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202103-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120210413/prev</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202103-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120210413/preview.png" alt=" "></p>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/13/202103-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>유용한 사이트 - Flat UI Color Palette</title>
      <link>https://chinsun9.github.io/2021/04/05/Flat-UI-Color-Palette/</link>
      <guid>https://chinsun9.github.io/2021/04/05/Flat-UI-Color-Palette/</guid>
      <pubDate>Mon, 05 Apr 2021 09:30:33 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;🎨 Flat UI Palette v1 | Flat UI Colors 🎨 280 handpicked colors ready for COPY &amp;amp; PASTE&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://flatuicolors.com</description>
        
      
      
      
      <content:encoded><![CDATA[<p>🎨 Flat UI Palette v1 | Flat UI Colors 🎨 280 handpicked colors ready for COPY &amp; PASTE</p><ul><li><a href="https://flatuicolors.com/palette/defo">https://flatuicolors.com/palette/defo</a></li></ul><ul><li>원하는 색을 클릭하면 클립보드에 복사된다</li><li>복사할 때 애니메이션이랑 소리가 재미나다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      
      <comments>https://chinsun9.github.io/2021/04/05/Flat-UI-Color-Palette/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
