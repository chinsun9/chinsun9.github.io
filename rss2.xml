<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Tue, 22 Jun 2021 08:35:24 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>blog fix 카피 버튼이 안나오는 문제</title>
      <link>https://chinsun9.github.io/2021/06/22/blog-fix-copy-button-not-dispalyed/</link>
      <guid>https://chinsun9.github.io/2021/06/22/blog-fix-copy-button-not-dispalyed/</guid>
      <pubDate>Tue, 22 Jun 2021 08:35:24 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-fix-copy-button-not-dispalyed20210622/preview.gif&quot; a</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-fix-copy-button-not-dispalyed20210622/preview.gif" alt=" "></p><ul><li>블로그에 코드 스니펫 오른쪽 위에 카피 버튼이 나올 때도 있고 안 나올 때도 있었다</li><li>무한 새로고침하면 종종 모습을 비춘다… (이스터에그도 아닌 것이..)</li></ul><h2 id="환경"><a href="#환경" class="headerlink" title="환경"></a>환경</h2><ul><li>hexo-theme-icarus v4.0.1</li></ul><h2 id="해결하기"><a href="#해결하기" class="headerlink" title="해결하기"></a>해결하기</h2><ul><li>일단 어디서 이 버튼을 생성하는지 알아내야 한다</li><li>버튼이 정상적으로 출력되었을 때 해당 버튼의 클래스명을 확인했다</li><li>그리고 <code>main.js</code>라는 곳에서 동적으로 버튼을 생성하고 있음을 알아냈다</li></ul><figure class="highlight js"><figcaption><span>themes\icarus\source\js\main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(clipboard, <span class="keyword">typeof</span> ClipboardJS);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> ClipboardJS !== <span class="string">&#x27;undefined&#x27;</span> &amp;&amp; clipboard) &#123;</span><br><span class="line">  $(<span class="string">&#x27;figure.highlight&#x27;</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> id = <span class="string">&#x27;code-&#x27;</span> + <span class="built_in">Date</span>.now() + ((<span class="built_in">Math</span>.random() * <span class="number">1000</span>) | <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">const</span> button =</span><br><span class="line">      <span class="string">&#x27;&lt;a href=&quot;javascript:;&quot; class=&quot;copy&quot; title=&quot;Copy&quot; data-clipboard-target=&quot;#&#x27;</span> +</span><br><span class="line">      id +</span><br><span class="line">      <span class="string">&#x27; .code&quot;&gt;&lt;i class=&quot;fas fa-copy&quot;&gt;&lt;/i&gt;&lt;/a&gt;&#x27;</span>;</span><br><span class="line">    $(<span class="built_in">this</span>).attr(<span class="string">&#x27;id&#x27;</span>, id);</span><br><span class="line">    $(<span class="built_in">this</span>).find(<span class="string">&#x27;figcaption div.level-right&#x27;</span>).append(button);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">new</span> ClipboardJS(<span class="string">&#x27;.highlight .copy&#x27;</span>); <span class="comment">// eslint-disable-line no-new</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>조건문에 <code>ClipboardJS</code>가 있으면 버튼을 생성하는데</li><li>main.js에는 ClipboardJS에 대해 따로 선언이 없었고, 외부 라이브러리라는 것을 알았다</li><li>이 ClipboardJS가 어디서 오는지 확인해야 했다</li></ul><figure class="highlight js"><figcaption><span>themes\icarus\layout\common\scripts.jsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  clipboard &amp;&amp; (</span><br><span class="line">    &lt;script</span><br><span class="line">      src=&#123;cdn(<span class="string">&#x27;clipboard&#x27;</span>, <span class="string">&#x27;2.0.4&#x27;</span>, <span class="string">&#x27;dist/clipboard.min.js&#x27;</span>)&#125;</span><br><span class="line">      <span class="comment">// async</span></span><br><span class="line">      defer</span><br><span class="line">    &gt;&lt;/script&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>layout\common\scripts.jsx</code>에서 가져오는 코드를 확인했는데</li><li><code>async</code>으로 가져오고 있었다</li><li>문제는 clipboardJS가 로드되기 전에 main.js가 먼저 실행되는 문제였다</li><li><code>defer</code>로 수정하니까 잘 동작했다!</li></ul><h2 id="최신-버전-확인"><a href="#최신-버전-확인" class="headerlink" title="최신 버전 확인"></a>최신 버전 확인</h2><ul><li>hexo-theme-icarus v4.2.0</li><li>최신 버전을 확인하니까 defer로 변경되어있었다… (이슈 검색했을 때는 못 찼았다…)</li><li>처음부터 최신 버전을 참고하면 좋았겠다</li></ul><ul><li>9개월 정도 나름대로 커스텀하면서 사용해왔는데,</li><li>나중에 시간 나면 커스텀한 내용을 유지하면서 최신 버전에 맞게 업데이트해줘야겠다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><h3 id="async-defer"><a href="#async-defer" class="headerlink" title="async, defer"></a>async, defer</h3><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement">https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      <category domain="https://chinsun9.github.io/tags/async/">async</category>
      
      <category domain="https://chinsun9.github.io/tags/defer/">defer</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/22/blog-fix-copy-button-not-dispalyed/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>github topic</title>
      <link>https://chinsun9.github.io/2021/06/22/github-topic/</link>
      <guid>https://chinsun9.github.io/2021/06/22/github-topic/</guid>
      <pubDate>Tue, 22 Jun 2021 04:59:52 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-topic20210622/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;저</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-topic20210622/preview.png" alt=" "></p><ul><li>저장소와 관련된 태그? 같은 것을 나열할 수 있는 기능이다</li><li>사용하면 무엇을 하는 저장소인지 나타내기 좋을 것 같다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.github.com/en/github/administering-a-repository/managing-repository-settings/classifying-your-repository-with-topics">https://docs.github.com/en/github/administering-a-repository/managing-repository-settings/classifying-your-repository-with-topics</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/22/github-topic/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>jest &#39;describe&#39; is not defined</title>
      <link>https://chinsun9.github.io/2021/06/22/eslint-with-jest/</link>
      <guid>https://chinsun9.github.io/2021/06/22/eslint-with-jest/</guid>
      <pubDate>Tue, 22 Jun 2021 04:31:50 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight json&quot;&gt;&lt;figcaption&gt;&lt;span&gt;.eslintrc.json&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight json"><figcaption><span>.eslintrc.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;env&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="attr">&quot;jest&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>env에 추가해준다</li></ul><ul><li>⚠️ 추가 해주고 <code>F1 &gt; eslint.restart</code> 명령을 실행해 eslint를 재부팅한다</li></ul><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>jest를 eslint와 처음 사용해본다</li></ul><blockquote><p>eslint(no-undef)</p></blockquote><blockquote><p>‘describe’ is not defined.<br>‘test’ is not defined.<br>‘expect’ is not defined.</p></blockquote><ul><li>위 에러가 나왔다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/44611190/using-jest-in-my-react-app-describe-is-not-defined">https://stackoverflow.com/questions/44611190/using-jest-in-my-react-app-describe-is-not-defined</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/eslint/">eslint</category>
      
      <category domain="https://chinsun9.github.io/tags/jest/">jest</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/22/eslint-with-jest/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>tldr</title>
      <link>https://chinsun9.github.io/2021/06/22/tldr/</link>
      <guid>https://chinsun9.github.io/2021/06/22/tldr/</guid>
      <pubDate>Tue, 22 Jun 2021 04:22:23 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;too long; didn’t read&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;tl;dr&lt;/li&gt;
&lt;li&gt;요약&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; t</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>too long; didn’t read</p></blockquote><ul><li>tl;dr</li><li>요약</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://ko.wikipedia.org/wiki/TL;DR">https://ko.wikipedia.org/wiki/TL;DR</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/tldr/">tldr</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/22/tldr/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>커밋 메시지 작성을 도와줄 확장도구 vscode-conventional-commits</title>
      <link>https://chinsun9.github.io/2021/06/22/vscode-conventional-commits/</link>
      <guid>https://chinsun9.github.io/2021/06/22/vscode-conventional-commits/</guid>
      <pubDate>Tue, 22 Jun 2021 02:15:28 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/vscode-conventional-commits20210622/preview.png&quot; alt=&quot; &quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/vscode-conventional-commits20210622/preview.png" alt=" "></p><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>기존에 <strong>Visual Studio Code Commitizen Support</strong> 확장 도구를 사용하고 있었다</li><li>그런데 커밋 body에 적는 내용이 어째선지 반영되지 않았다…</li><li>관련해서 구글링을 해봤는데 도움되는 내용을 찾지 못했다</li><li>그러다가 다른 확장도구를 발견했다</li></ul><h2 id="Conventional-Commits"><a href="#Conventional-Commits" class="headerlink" title="Conventional Commits"></a>Conventional Commits</h2><ul><li><strong>Conventional Commits</strong>이라는 확장도구이다</li><li>사용법은 Commitizen과 동일하다</li><li>이 확장도구를 사용하면 body(description)가 정상적으로 등록된다!</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits">https://marketplace.visualstudio.com/items?itemName=vivaxy.vscode-conventional-commits</a></li><li><a href="https://github.com/vivaxy/vscode-conventional-commits">https://github.com/vivaxy/vscode-conventional-commits</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/extension/">extension</category>
      
      <category domain="https://chinsun9.github.io/tags/commit/">commit</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/22/vscode-conventional-commits/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>디바운스와 스로틀</title>
      <link>https://chinsun9.github.io/2021/06/21/debounce-throttle/</link>
      <guid>https://chinsun9.github.io/2021/06/21/debounce-throttle/</guid>
      <pubDate>Mon, 21 Jun 2021 05:28:15 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;스크롤 이벤트가 발생하면 &lt;code&gt;1&lt;/code&gt;을 출력하는 함수를 실행시킨다고 하자&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;기본&quot;&gt;&lt;a href=&quot;#기본&quot; class=&quot;headerlink&quot; title=&quot;기본&quot;&gt;&lt;/a&gt;기본&lt;/h2&gt;&lt;ul&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>스크롤 이벤트가 발생하면 <code>1</code>을 출력하는 함수를 실행시킨다고 하자</li></ul><h2 id="기본"><a href="#기본" class="headerlink" title="기본"></a>기본</h2><ul><li>아날로그 신호처럼 콘솔창에 1이 찍힌다</li></ul><h2 id="throttle"><a href="#throttle" class="headerlink" title="throttle"></a>throttle</h2><ul><li>설정한 주기를 간격으로 1이 찍힌다</li></ul><ul><li>쓰로틀은 연속된 이벤트를 설정한 시간 간격</li><li>예) 스크롤중 300ms 마다 함수 실행</li><li>예) 네이버 검색창 자동완성</li></ul><h2 id="debounce"><a href="#debounce" class="headerlink" title="debounce"></a>debounce</h2><ul><li>스크롤 이벤트 도중에는 아무것도 일어나지 않는다</li><li>이벤트가 끝나고 설정한 1이 찍힌다</li></ul><ul><li>디바운스는 연속된 이벤트가 멈추고, 한번 실행한다</li><li>마지막 이벤트로부터 설정한 시간만큼 이벤트가 발생하지 않으면 실행한다</li><li>예) 스크롤이 멈추고 300ms 뒤에 함수 실행</li><li>예) 버튼을 연속적으로 여러 번 눌러도 한 번만 실행되는… (광클 방지)</li></ul><h2 id="쓰는-이유"><a href="#쓰는-이유" class="headerlink" title="쓰는 이유"></a>쓰는 이유</h2><ul><li>디바운스와 쓰로틀은 부하를 줄이기 위해 사용한다</li><li>매 이벤트마다 비싼 API를 호출하는 것을 방지할 수 있다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      <category domain="https://chinsun9.github.io/tags/debounce/">debounce</category>
      
      <category domain="https://chinsun9.github.io/tags/throttle/">throttle</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/21/debounce-throttle/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>geolocation 등 HTTP에서 사용할 수 없는 Web API 목록</title>
      <link>https://chinsun9.github.io/2021/06/21/features-restricted-to-secure-contexts/</link>
      <guid>https://chinsun9.github.io/2021/06/21/features-restricted-to-secure-contexts/</guid>
      <pubDate>Mon, 21 Jun 2021 02:31:45 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;geolocation 등 특정 Web API들은 &lt;code&gt;localhost&lt;/code&gt; 또는 &lt;code&gt;HTTPS&lt;/code&gt; 환경에서만 동작한다&lt;/li&gt;
&lt;li&gt;그래서 로컬에서 테스트했을 땐 동작하는 것들이 http로 배포했을 때 </description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>geolocation 등 특정 Web API들은 <code>localhost</code> 또는 <code>HTTPS</code> 환경에서만 동작한다</li><li>그래서 로컬에서 테스트했을 땐 동작하는 것들이 http로 배포했을 때 동작하지 않을 수 있다</li><li><strong>secure context</strong>가 필요한 API 목록은 아래 링크에서 확인할 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts">https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/geolocation/">geolocation</category>
      
      <category domain="https://chinsun9.github.io/tags/secure-contexts/">secure contexts</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/21/features-restricted-to-secure-contexts/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>github archived repository</title>
      <link>https://chinsun9.github.io/2021/06/21/github-archived-repository/</link>
      <guid>https://chinsun9.github.io/2021/06/21/github-archived-repository/</guid>
      <pubDate>Mon, 21 Jun 2021 00:35:13 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-archived-repository20210621/preview.png&quot; alt=&quot; &quot;&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-archived-repository20210621/preview.png" alt=" "></p><ul><li>레포명 옆에 <strong>Archived</strong> 가 붙어있는 레포를 발견했다</li><li>뭔가 하고 찾아보았다</li></ul><h2 id="Archiving-Repositories"><a href="#Archiving-Repositories" class="headerlink" title="Archiving Repositories"></a>Archiving Repositories</h2><ul><li>읽기 전용 레포이다</li><li>더 이상 유지 보수되지 않는다는 것을 나타낸다</li><li>이 저장소에서는 새로운 활동이 생성될 수 없다</li><li>이슈나 풀리퀘스트를 생성할 수 없다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/archiving-a-github-repository/archiving-repositories">https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/archiving-a-github-repository/archiving-repositories</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/archiving-repositories/">archiving-repositories</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/21/github-archived-repository/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SSR, CSR</title>
      <link>https://chinsun9.github.io/2021/06/18/ssr-csr/</link>
      <guid>https://chinsun9.github.io/2021/06/18/ssr-csr/</guid>
      <pubDate>Fri, 18 Jun 2021 08:42:11 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;SSR, server side rendering&lt;br&gt;CSR, client side rendering&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;CSR&quot;&gt;&lt;a href=&quot;#CSR&quot; class=&quot;headerlink&quot; ti</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>SSR, server side rendering<br>CSR, client side rendering</p></blockquote><h2 id="CSR"><a href="#CSR" class="headerlink" title="CSR"></a>CSR</h2><ul><li>CSR은 리액트로 만든 SPA 웹앱이라고 생각하면 된다</li><li>index.html이 텅텅 비어있고,</li><li>버튼을 누르면 자바스크립트로 동적으로 화면을 다시 그려서 페이지가 넘어가는 것처럼 보인다</li><li>처음 리액트를 배울 때 안드로이드 앱 만드는 느낌이 강하게 들었다</li><li>최초에 index.html를 서버에서 받고, 화면이 넘어가는 경우 필요한 데이터만 서버에 요청한다<br>(JSON 등 데이터만 주고받음으로 가볍다고 볼 수 있다)</li><li>데이터를 가져오면 이미 가지고 있는 틀에다가 바인딩하여 보여준다</li></ul><h2 id="SSR"><a href="#SSR" class="headerlink" title="SSR"></a>SSR</h2><ul><li>전통?적인 방법이다</li><li>버튼, 링크를 누르면 서버로 다른 html 파일을 요청한다</li><li>CSR과 반대로 html 내용이 꽉꽉 차있다</li><li>SEO에 유리하다</li><li>크롤러(bot)는 그냥 html의 내용을 읽으면 된다</li><li>CSR은 페이지 접속 만으로는 콘텐츠가 생성이 되어있지 않기 때문에 크롤러(bot)가 난감할 것이다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      <category domain="https://chinsun9.github.io/tags/SSR/">SSR</category>
      
      <category domain="https://chinsun9.github.io/tags/CSR/">CSR</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/18/ssr-csr/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>setTimeout typescript</title>
      <link>https://chinsun9.github.io/2021/06/18/setTimeout-typescript/</link>
      <guid>https://chinsun9.github.io/2021/06/18/setTimeout-typescript/</guid>
      <pubDate>Fri, 18 Jun 2021 08:30:02 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dice</span> </span>&#123;</span><br><span class="line">  sto: ReturnType&lt;<span class="keyword">typeof</span> <span class="built_in">setTimeout</span>&gt;;</span><br></pre></td></tr></table></figure><ul><li>typescript로 웹 스크립트를 짜고 있다</li><li><code>clearTimeout</code>을 사용하기 위해 멤버 변수 sto를 넣었다</li><li>근데 setTimeout의 타입이 뭘까?</li><li>에디터에서 <code>NodeJS.Timeout</code>라고 알려주긴 하는데..</li><li>내 런타임을 노드가 아니라 브라우저다</li><li><code>ReturnType&lt;fn&gt;</code>을 사용하면 브라우저든 SSR이든 걱정 없다고 한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/45802988/typescript-use-correct-version-of-settimeout-node-vs-window/56239226#56239226">https://stackoverflow.com/questions/45802988/typescript-use-correct-version-of-settimeout-node-vs-window/56239226#56239226</a></li><li><a href="https://stackoverflow.com/questions/51040703/what-return-type-should-be-used-for-settimeout-in-typescript">https://stackoverflow.com/questions/51040703/what-return-type-should-be-used-for-settimeout-in-typescript</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/setTimeout/">setTimeout</category>
      
      <category domain="https://chinsun9.github.io/tags/ReturnType/">ReturnType</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/18/setTimeout-typescript/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>github 잔디, contributions calendar</title>
      <link>https://chinsun9.github.io/2021/06/18/github-contributions-calendar/</link>
      <guid>https://chinsun9.github.io/2021/06/18/github-contributions-calendar/</guid>
      <pubDate>Fri, 18 Jun 2021 01:56:14 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-contributions-calendar20210618/preview.png&quot; alt=&quot; </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-contributions-calendar20210618/preview.png" alt=" "></p><ul><li>평소 잔디라 불러서 원래 이름이 뭔지 알아보았다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/managing-contribution-graphs-on-your-profile/viewing-contributions-on-your-profile#contributions-calendar">https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/managing-contribution-graphs-on-your-profile/viewing-contributions-on-your-profile#contributions-calendar</a></li></ul><h2 id="ㅋㅋ"><a href="#ㅋㅋ" class="headerlink" title="ㅋㅋ"></a>ㅋㅋ</h2><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-contributions-calendar20210618/1.png" alt=" "></p><ul><li>내 커밋 기록 식칼 모양이다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/contributions-calendar/">contributions calendar</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/18/github-contributions-calendar/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>transition ease ease-in ease-out ease-in-out 무슨 차이일까</title>
      <link>https://chinsun9.github.io/2021/06/18/transition-timing-function/</link>
      <guid>https://chinsun9.github.io/2021/06/18/transition-timing-function/</guid>
      <pubDate>Fri, 18 Jun 2021 00:35:21 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight css&quot;&gt;&lt;figcaption&gt;&lt;span&gt;style.css&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight css"><figcaption><span>style.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.2s</span> ease;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>자연스러운 변화를 주기 위해서 사용하곤 했다</li><li>ease는 여러 가지가 있는데 어떤 차이일까?</li></ul><h2 id="transition-timing-function"><a href="#transition-timing-function" class="headerlink" title="transition-timing-function"></a>transition-timing-function</h2><ul><li><em>영상 편집할 때 영상의 앞뒤에 투명도를 가지고 페이드인 페이드아웃하는 그래프가 있는데 그거랑 똑같다</em></li><li>ease, linear, ease-in, ease-out, ease-in-out, cubic-bezier, steps 가 있다</li></ul><h3 id="함수들"><a href="#함수들" class="headerlink" title="함수들"></a>함수들</h3><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/transition-timing-function20210618/preview.png" alt=" "></p><ul><li>캡처 ; <a href="https://cubic-bezier.com/">https://cubic-bezier.com/</a></li></ul><ul><li>ease ; 천천-빠름-천천</li><li>linear ; 등속</li><li>ease-in ; 천천-보통</li><li>ease-out ; 보통-천천</li><li>ease-in-out ; 천천-보통-천천</li><li>cubic-bezier ; 커스텀</li></ul><ul><li>steps ; 뚝뚝 끊어 보여준다</li></ul><h3 id="cubic-bezier"><a href="#cubic-bezier" class="headerlink" title="cubic-bezier"></a>cubic-bezier</h3><p>베지에 곡선이라고 한다<br>ease, in, in-out은 미리 정의어 있는 곡선이다<br>각각을 cubic-bezier로 표현하면 다음과 같다</p><ul><li>ease === cubic-bezier(0.25, 0.1, 0.25, 1.0)</li><li>linear === cubic-bezier(0.0, 0.0, 1.0, 1.0)</li><li>ease-in === cubic-bezier(0.42, 0, 1.0, 1.0)</li><li>ease-out === cubic-bezier(0, 0, 0.58, 1.0)</li><li>ease-in-out === cubic-bezier(0.42, 0, 0.58, 1.0)</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transition-timing-function">https://developer.mozilla.org/en-US/docs/Web/CSS/transition-timing-function</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function">https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function</a></li></ul><h3 id="유용한-도구"><a href="#유용한-도구" class="headerlink" title="유용한 도구"></a>유용한 도구</h3><ul><li>cubic-bezier 커스텀</li><li><a href="https://cubic-bezier.com/">https://cubic-bezier.com/</a></li></ul><h3 id="용어"><a href="#용어" class="headerlink" title="용어"></a>용어</h3><ul><li>베지에 곡선, 베지어 곡선</li><li><a href="https://ko.wikipedia.org/wiki/%EB%B2%A0%EC%A7%80%EC%97%90_%EA%B3%A1%EC%84%A0">https://ko.wikipedia.org/wiki/베지에_곡선</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/transition-timing-function/">transition timing function</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/18/transition-timing-function/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>비공개 npm package 만들어보기</title>
      <link>https://chinsun9.github.io/2021/06/17/my-first-github-package/</link>
      <guid>https://chinsun9.github.io/2021/06/17/my-first-github-package/</guid>
      <pubDate>Thu, 17 Jun 2021 07:03:43 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/my-first-github-package20210617/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/my-first-github-package20210617/preview.png" alt=" "></p><ul><li>깃허브 레지스트리를 통해 (비공개) 패키지를 만들어보자</li><li>PAT을 통해 <strong>퍼블릭하지 않게</strong> 패키지를 배포해 볼 수 있다</li><li>물론, 공개 패키지도 가능하다</li><li>패키지 생성은 동일하고, 패키지를 받을 때만 차이가 있다</li></ul><ul><li>PAT : personal access token</li></ul><h2 id="PAT-발급"><a href="#PAT-발급" class="headerlink" title="PAT 발급"></a>PAT 발급</h2><ul><li>github에 로그인하고,</li><li><a href="https://github.com/settings/tokens/new">https://github.com/settings/tokens/new</a></li><li><code>write:packages</code> 권한의 personal access token을 생성한다</li></ul><h2 id="저장소-패키지-만들기"><a href="#저장소-패키지-만들기" class="headerlink" title="저장소, 패키지 만들기"></a>저장소, 패키지 만들기</h2><ul><li><p>package.json에 필수적으로 채워야 하는 항목들이 있어서,</p></li><li><p>브라우저로 github에 접속해서 저장소 하나를 만들어 로컬로 클론하고<br><code>npm init -y</code> 하는 것을 추천한다</p></li><li><p>타입스크립트로 만든다</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/chinsun9/hello-package.git</span><br><span class="line"></span><br><span class="line">tsc --init</span><br></pre></td></tr></table></figure><h2 id="디렉터리-구조"><a href="#디렉터리-구조" class="headerlink" title="디렉터리 구조"></a>디렉터리 구조</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── dist</span><br><span class="line">│   ├── index.d.ts</span><br><span class="line">│   └── index.js</span><br><span class="line">├── src</span><br><span class="line">│   └── index.ts</span><br><span class="line">├── .gitignore</span><br><span class="line">├── .npmignore</span><br><span class="line">├── .npmrc</span><br><span class="line">├── package.json</span><br><span class="line">├── README.md</span><br><span class="line">└── tsconfig.json</span><br></pre></td></tr></table></figure><ul><li><p>디렉터리 구조는 마음대로</p></li><li><p>나는 위처럼 구성했다</p></li><li><p>src 밑에 ts 코드를 작성하고,</p></li><li><p><code>tsc</code> 명령으로 <strong>dist</strong> 아래 트랜스파일 된 js를 배포하는 방식이다</p></li></ul><h2 id="src-작성"><a href="#src-작성" class="headerlink" title="src 작성"></a>src 작성</h2><figure class="highlight ts"><figcaption><span>src/index.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClassA</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClassB</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClassC</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>원하는 기능을 구현하고 외부에서 사용 가능하도록 <code>export</code>키워드를 붙여준다</li></ul><h2 id="tsconfig-json-설정"><a href="#tsconfig-json-설정" class="headerlink" title="tsconfig.json 설정"></a>tsconfig.json 설정</h2><ul><li>타입스크립트로 코드를 작성하고,</li><li><code>tsc</code>로 트랜스파일한다. 결과로 js파일이 생성된다</li><li>패키지를 인스톨한 사람들은 js파일을 사용하게 된다</li></ul><figure class="highlight json"><figcaption><span>tsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="attr">&quot;declaration&quot;</span>: <span class="literal">true</span> <span class="comment">/* Generates corresponding &#x27;.d.ts&#x27; file. */</span>,</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span>: <span class="string">&quot;./dist&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;rootDir&quot;</span>: <span class="string">&quot;./src&quot;</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;include&quot;</span>: [<span class="string">&quot;src&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>tsc --init</code> 기본값으로 생성된 상태에서 위 옵션만 수정해주었다</li><li><strong>declaration</strong> ; <code>d.ts</code>파일을 생성해서 자동완성에 도움을 준다</li><li><strong>outDir</strong> ; tsc 명령의 결과로 생성되는 js 위치</li><li><strong>rootDir</strong>, <strong>include</strong> ; root ts 파일 위치</li></ul><h2 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dist</span><br><span class="line">node_modules</span><br></pre></td></tr></table></figure><ul><li>커밋에서 무시할 디렉터리, 파일을 나열한다</li></ul><h2 id="npmignore"><a href="#npmignore" class="headerlink" title=".npmignore"></a>.npmignore</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">test</span><br><span class="line">tsconfig.json</span><br></pre></td></tr></table></figure><ul><li>패키지를 publish 할 때 무시할 디렉터리, 파일을 나열한다</li></ul><h2 id="npmrc"><a href="#npmrc" class="headerlink" title=".npmrc"></a>.npmrc</h2><ul><li>워크스페이스에 위치해도 되고,</li><li>어느 워크스페이스든 상관없이 전역적으로 적용하려면 ~/.npmrc에 넣어주면 된다</li></ul><figure class="highlight properties"><figcaption><span>.npmrc</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">//npm.pkg.github.com/</span>:<span class="string">_authToken=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span></span><br></pre></td></tr></table></figure><ul><li>처음에 발급받은 토큰을 <code>xxxx...</code> 부분에 넣어준다</li><li>자신의 토큰은 아무래도 전역으로 적용하는 게 좋아 보인다</li></ul><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;@chinsun9/hello-package&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;dist/index.js&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;types&quot;</span>: <span class="string">&quot;dist/index.d.ts&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;repository&quot;</span>: <span class="string">&quot;https://github.com/chinsun9/hello-package.git&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;chinsun9 &lt;chin_sung@naver.com&gt;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;MIT&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;publishConfig&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;registry&quot;</span>: <span class="string">&quot;https://npm.pkg.github.com/&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>몇 가지 수정사항이 있다</li><li>name, main, types, publishConfig를 적절하게 수정한다</li><li>name ; <code>@chinsun9/</code>처럼 골뱅이 자기 이름을 넣어준다</li><li>main ; 트랜스파일 결과로 메인 파일을 넣어준다</li><li>types ; 자동완성을 위해서 생성된 d.ts파일을 넣어준다</li><li>publishConfig ; registry를 깃허브로 하겠다는 설정이다</li></ul><h2 id="패키지-배포"><a href="#패키지-배포" class="headerlink" title="패키지 배포"></a>패키지 배포</h2><ul><li><code>npm publish</code></li><li>저장소에 들어가서 패키지가 잘 배포되었는지 확인하다</li></ul><h2 id="배포한-패키지-인스톨해보기"><a href="#배포한-패키지-인스톨해보기" class="headerlink" title="배포한 패키지 인스톨해보기"></a>배포한 패키지 인스톨해보기</h2><ul><li>github registry에 등록된 패키지는 퍼블릭 일지라도 PAT이 필요하다</li><li>퍼블릭일 때 패키지 주인이 생성한 토큰이 아니다</li><li>각자 자기 자신의 토큰으로 가능하다..!</li></ul><ul><li>비공개 패키지라면 패키지 주인이 생성한 토큰이 있어야 한다.</li><li>패키지 주인은 <code>read:packages</code> 권한이 있는 토큰을 알려주면 다른 사람, 컴퓨터에서 패키지를 인스톨할 수 있다</li></ul><ul><li>임시 디렉터리를 하나 만들고 <code>npm init -y</code>한다</li><li><strong>.npmrc</strong>를 생성하고 내용을 추가한다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;npm.pkg.github.com&#x2F;:_authToken&#x3D;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">@chinsun9:registry&#x3D;https:&#x2F;&#x2F;npm.pkg.github.com&#x2F;</span><br></pre></td></tr></table></figure><ul><li><p>워크스페이스의 .npmrc 또는 유저 홈 디렉터리의 .npmrc 에 위 내용을 추가한다</p></li><li><p><code>@chinsun9:registry=https://npm.pkg.github.com/</code></p></li><li><p><strong>@chinsun9</strong>으로 시작하는 패키지는 <a href="https://npm.pkg.github.com/">https://npm.pkg.github.com/</a> 에서 가져오라고 알려주자</p></li></ul><h2 id="헷갈린-점"><a href="#헷갈린-점" class="headerlink" title="헷갈린 점"></a>헷갈린 점</h2><ul><li>퍼블릭한 패키지도 PAT가 필요했다</li><li>당연히 퍼블릭한 패키지에는 토큰이 필요 없을 거라 생각했다</li><li>그래서 어쩔 수 없이 패키지 오너의 토큰이 필요할 거라 생각했다</li><li>근데, 패키지 주인이 생성한 토큰이 아니더라도 패키지를 인스톨할 수 있었다</li><li>즉, github 계정을 가지고 있고, <code>read:packages</code> 토큰을 생성하면 퍼블릭 패키지를 인스톨할 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><h3 id="내-첫-패키지"><a href="#내-첫-패키지" class="headerlink" title="내 첫 패키지"></a>내 첫 패키지</h3><ul><li><a href="https://github.com/chinsun9/hello-package">https://github.com/chinsun9/hello-package</a></li></ul><h3 id="GitHub-패키지-저장소-호스팅-GitHub-Package-Registry-시작하기"><a href="#GitHub-패키지-저장소-호스팅-GitHub-Package-Registry-시작하기" class="headerlink" title="GitHub 패키지 저장소 호스팅: GitHub Package Registry 시작하기"></a>GitHub 패키지 저장소 호스팅: GitHub Package Registry 시작하기</h3><ul><li><a href="https://musma.github.io/2019/09/30/github-package-registry.html">https://musma.github.io/2019/09/30/github-package-registry.html</a></li></ul><h3 id="d-ts-만들기"><a href="#d-ts-만들기" class="headerlink" title="d.ts 만들기"></a>d.ts 만들기</h3><ul><li><a href="https://www.typescriptlang.org/docs/handbook/declaration-files/dts-from-js.html">https://www.typescriptlang.org/docs/handbook/declaration-files/dts-from-js.html</a></li></ul><h3 id="rc-뜻"><a href="#rc-뜻" class="headerlink" title="*rc 뜻"></a>*rc 뜻</h3><ul><li><a href="https://stackoverflow.com/questions/52800196/what-does-the-rc-stand-for-in-the-names-of-configuration-files">https://stackoverflow.com/questions/52800196/what-does-the-rc-stand-for-in-the-names-of-configuration-files</a></li><li><a href="https://stackoverflow.com/questions/11030552/what-does-rc-mean-in-dot-files">https://stackoverflow.com/questions/11030552/what-does-rc-mean-in-dot-files</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/package/">package</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/17/my-first-github-package/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>windows cmd로 홈 디렉터리(~) 가기</title>
      <link>https://chinsun9.github.io/2021/06/17/windows-user-home/</link>
      <guid>https://chinsun9.github.io/2021/06/17/windows-user-home/</guid>
      <pubDate>Thu, 17 Jun 2021 04:55:24 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;홈 디렉터리는 보통 &lt;code&gt;~&lt;/code&gt;로 표현된다&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>홈 디렉터리는 보통 <code>~</code>로 표현된다</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># linux</span></span><br><span class="line">vi ~/.npmrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># windows</span></span><br><span class="line">notepad %userprofile%/.npmrc</span><br></pre></td></tr></table></figure><ul><li>유저 홈 디렉터리에 설정 파일들이 많이 있는데,</li><li>이 디렉터리를 windows cmd에서 가고 싶을 때 <code>%userprofile%</code>을 참조하면 된다</li></ul><h2 id="cmd로-유저-홈-디렉터리-이동"><a href="#cmd로-유저-홈-디렉터리-이동" class="headerlink" title="cmd로 유저 홈 디렉터리 이동"></a>cmd로 유저 홈 디렉터리 이동</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd %userprofile%</span><br></pre></td></tr></table></figure><h2 id="홈-디렉터리-탐색기로-열기"><a href="#홈-디렉터리-탐색기로-열기" class="headerlink" title="홈 디렉터리 탐색기로 열기"></a>홈 디렉터리 탐색기로 열기</h2><ul><li>Win + R</li><li><code>%userprofile%</code> 입력 후 엔터</li></ul><h2 id="번외-git-bash-쓰기"><a href="#번외-git-bash-쓰기" class="headerlink" title="번외 : git bash 쓰기"></a>번외 : git bash 쓰기</h2><ul><li>간단한 명령어인데, 리눅스 명령어라서 cmd에서 안될 때</li><li>git bash를 켜서 실행한다</li><li>대부분 잘 동작한다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/windows/">windows</category>
      
      
      <category domain="https://chinsun9.github.io/tags/windows/">windows</category>
      
      <category domain="https://chinsun9.github.io/tags/home/">home</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/17/windows-user-home/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>input datalist</title>
      <link>https://chinsun9.github.io/2021/06/17/input-datalist/</link>
      <guid>https://chinsun9.github.io/2021/06/17/input-datalist/</guid>
      <pubDate>Thu, 17 Jun 2021 00:08:07 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;label for=&quot;myInput&quot;&gt;select: &lt;/label&gt;&lt;br&gt;&lt;input list=&quot;myInputList&quot; id=&quot;myInput&quot; /&gt;&lt;/p&gt;
&lt;datalist id=&quot;myInputList&quot;&gt;
  &lt;option value=&quot;hello</description>
        
      
      
      
      <content:encoded><![CDATA[<p><label for="myInput">select: </label><br><input list="myInputList" id="myInput" /></p><datalist id="myInputList">  <option value="hello">안녕</option>  <option value="hi">안뇽</option>  <option value="bye">잘가</option></datalist><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;myInput&quot;</span>&gt;</span>select: <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">list</span>=<span class="string">&quot;myInputList&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myInput&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">&quot;myInputList&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>안녕<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;hi&quot;</span>&gt;</span>안뇽<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bye&quot;</span>&gt;</span>잘가<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>datalist를 사용하면 input 태그를 select 태그와 비슷하게 쓸 수 있다</li><li>input에 입력하면 자동으로 필터링된다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/HTML/Element/datalist">https://developer.mozilla.org/ko/docs/Web/HTML/Element/datalist</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/datalist/">datalist</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/17/input-datalist/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>CSS BEM</title>
      <link>https://chinsun9.github.io/2021/06/16/CSS-BEM/</link>
      <guid>https://chinsun9.github.io/2021/06/16/CSS-BEM/</guid>
      <pubDate>Wed, 16 Jun 2021 13:09:27 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;BEM&quot;&gt;&lt;a href=&quot;#BEM&quot; class=&quot;headerlink&quot; title=&quot;BEM&quot;&gt;&lt;/a&gt;BEM&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Block, Element, Modifier&lt;/li&gt;
&lt;li&gt;css class 이름&lt;/li&gt;
&lt;li&gt;&lt;cod</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="BEM"><a href="#BEM" class="headerlink" title="BEM"></a>BEM</h2><ul><li>Block, Element, Modifier</li><li>css class 이름</li><li><code>__</code> 를 이어붙인다</li></ul><h2 id="🤔"><a href="#🤔" class="headerlink" title="🤔"></a>🤔</h2><ul><li>amazon clone 할 떄, 한번 사용해봤는데</li><li>마크업할 때 클래스 작성하기가 불편했다</li><li>sass를 배웠는데 어째선지 더 쓰지않게 되었다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/aKenj9ZQwJg">https://youtu.be/aKenj9ZQwJg</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/BEM/">BEM</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/16/CSS-BEM/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>GTD</title>
      <link>https://chinsun9.github.io/2021/06/16/GTD/</link>
      <guid>https://chinsun9.github.io/2021/06/16/GTD/</guid>
      <pubDate>Wed, 16 Jun 2021 06:21:43 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;Getting Things Done (GTD) by David Allen - Animated Book Summary And Review&lt;br&gt;&lt;a href=&quot;https://youtu.be/gCswMsONkwY&quot;&gt;https:</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>Getting Things Done (GTD) by David Allen - Animated Book Summary And Review<br><a href="https://youtu.be/gCswMsONkwY">https://youtu.be/gCswMsONkwY</a></p></blockquote><ul><li>위 영상에 대한 메모</li></ul><h2 id="GTD"><a href="#GTD" class="headerlink" title="GTD"></a>GTD</h2><ul><li>5 스텝으로 이뤄짐</li><li>capture -&gt; process -&gt; oranize -&gt; review -&gt; engage</li></ul><ol><li><p>capture</p><ul><li>머릿속에 두지 말고 모든 생각을 다 적어라</li></ul></li><li><p>process</p><ul><li><p>담아둔 아이템들에 대해 질문해라</p></li><li><p>is it actionable? yes</p></li><li><p>can you do it in less than 2 minutes? yes/no</p><ul><li>yes ; 바로 실행</li><li>no ; 액션 리스트에 추가</li></ul></li><li><p>is it actionable? no</p></li><li><p>2 choices ; discard / keep it as reference</p></li><li><p>모든 항목에 대해 생각해라</p></li></ul></li><li><p>oganize</p><ul><li><p>마법이 일어난다</p></li><li><p>by project, time, context</p></li><li><p>다음 항목에 대해 생각해라</p></li><li><p>시퀀스를 잘 짜라</p></li></ul></li><li><p>review</p><ul><li>매주 리뷰해라</li><li>모든 것을 원활하게 실행하려면 주간 검토가 필수적이다</li><li>목표에 맞게 진행되고 있는지 반성해라</li></ul></li><li><p>engage</p><ul><li>let’s get cracking! ; 즉시 일을 시작해라</li></ul></li></ol><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>Getting Things Done (GTD) by David Allen - Animated Book Summary And Review</li><li><a href="https://youtu.be/gCswMsONkwY">https://youtu.be/gCswMsONkwY</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      <category domain="https://chinsun9.github.io/tags/GTD/">GTD</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/16/GTD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>공유기가 2개일 때 포트포워딩</title>
      <link>https://chinsun9.github.io/2021/06/16/two-routers-port-forwarding/</link>
      <guid>https://chinsun9.github.io/2021/06/16/two-routers-port-forwarding/</guid>
      <pubDate>Wed, 16 Jun 2021 01:43:27 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/two-routers-port-forwarding20210616/preview.png&quot; alt=&quot; &quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/two-routers-port-forwarding20210616/preview.png" alt=" "></p><ul><li>통신사 공유기가 메인으로 있고,</li><li>내 방 공유기가 있고, 컴퓨터에 연결된다</li><li>위 상황일 때 특정 포트를 외부에서 접속할 수 있도록 포트포워딩해보자</li></ul><h2 id="최종-형태"><a href="#최종-형태" class="headerlink" title="최종 형태"></a>최종 형태</h2><ul><li>공유기 DMZ 설정하면 공유기 모든 포트가 개방된다</li><li>내 방 공유기를 DMZ 설정하고, 메인 공유기에서만 포트포워딩하는 방향으로 설정해보겠다</li></ul><h2 id="내-방-공유기-DMZ-설정"><a href="#내-방-공유기-DMZ-설정" class="headerlink" title="내 방 공유기 DMZ 설정"></a>내 방 공유기 DMZ 설정</h2><ul><li>내 방 공유기에 접속하기 위해서 cmd를 열고 <code>ipconfig</code>를 입력한다</li><li><code>이더넷 어댑터 이더넷</code>에 기본 게이트웨이 주소로 접속한다</li><li>각자 공유기 모델명과 DMZ 설정을 검색해 DMZ를 활성화하고 적용한다</li><li>그러면 내 방 공유기로 3000번 포트 요청이 오면 내 컴퓨터 3000번 앱과 연결된다 (같은 포트로 1:1)</li><li>이제 메인 공유기를 설정해보자</li></ul><h2 id="메인-공유기-포트포워딩"><a href="#메인-공유기-포트포워딩" class="headerlink" title="메인 공유기 포트포워딩"></a>메인 공유기 포트포워딩</h2><ul><li>메인 공유기에 접속을 어떻게 해야 할까?</li><li>내 방 공유기 요약정보(보통 가장 첫 메뉴, 메인화면)에 보면 외부 ip를 확인할 수 있다</li><li>외부 ip 주소로 접속하면 메인 공유기에 접속할 수 있다</li><li>여기서 포트포워딩 설정을 해주면 된다</li></ul><h2 id="내-방-공유기-고정아이피-설정"><a href="#내-방-공유기-고정아이피-설정" class="headerlink" title="내 방 공유기 고정아이피 설정"></a>내 방 공유기 고정아이피 설정</h2><ul><li><p>나는 내 방 공유기를 고정아이피로 설정해주었다</p></li><li><p>포트포워딩할 때 특정 아이피에 대해 설정해줘야 한다</p></li><li><p>내 방 공유기가 유동 아이피를 가진다면 제대로 동작하지 않을 것이다</p></li><li><p>메인 공유기에서 특정 맥에 대해 고정 아이피 설정이 되지 않았다 (무슨 퍼미션 오류..)</p></li><li><p>그래서 반대로, 내 방 공유기에서 자기 자신에 대해 고정아이피를 설정했다 (<strong>xxx.xxx.xxx.2</strong>)</p></li><li><p>DNS 서버, 보조 DNS 서버는 <code>ipconfig</code> 명령에서 찾아 적을 수 있다</p></li><li><p>이제 메인 공유기 설정으로 돌아와서,</p></li><li><p>위에서 설정한 고정아이피 주소가 다른 컴퓨터에 할당되어 충돌이 나면 안 된다</p></li><li><p>메인 공유기에서 할당해주는 ip범위가 <strong>xxx.xxx.xxx.2</strong>를 포함하지 않도록 수정한다</p></li></ul><h2 id="포트포워딩-확인하기"><a href="#포트포워딩-확인하기" class="headerlink" title="포트포워딩 확인하기"></a>포트포워딩 확인하기</h2><ul><li>나는 간단하게 vscode로 live server 켰다</li><li>내 아이피를 검색한다 (xxx.xxx.xxx.xxx)</li><li>핸드폰으로 데이터를 켜서 접속해본다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/port-forwarding/">port forwarding</category>
      
      <category domain="https://chinsun9.github.io/tags/router/">router</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/16/two-routers-port-forwarding/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>keyword 카테고리 생성</title>
      <link>https://chinsun9.github.io/2021/06/16/create-keyword-category/</link>
      <guid>https://chinsun9.github.io/2021/06/16/create-keyword-category/</guid>
      <pubDate>Wed, 16 Jun 2021 00:26:50 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;어떤 키워드에 대해 옆에 있는 사람한테 설명할 정도로 잘 알지는 못하지만 알고 있는 대로 적어보기&lt;/li&gt;
&lt;li&gt;잘 모르는 때, 해당 키워드에 대해 어떻게 설명할 수 있을까?&lt;/li&gt;
&lt;li&gt;글 작성 당시의 나는 해당 키워드를 어떻게</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>어떤 키워드에 대해 옆에 있는 사람한테 설명할 정도로 잘 알지는 못하지만 알고 있는 대로 적어보기</li><li>잘 모르는 때, 해당 키워드에 대해 어떻게 설명할 수 있을까?</li><li>글 작성 당시의 나는 해당 키워드를 어떻게 인식하고 있을까?</li><li><del>흑역사 생성기</del></li></ul><ul><li>어떤 지식에 대해 아주 잘 알고 있을 때, 하나도 모르는 사람에게 잘 알려줄 수 있을까?</li><li>라는 물음으로 시작!</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/16/create-keyword-category/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>blog update 404</title>
      <link>https://chinsun9.github.io/2021/06/15/blog-update-404/</link>
      <guid>https://chinsun9.github.io/2021/06/15/blog-update-404/</guid>
      <pubDate>Tue, 15 Jun 2021 08:31:19 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chinsun9.github.io/404&quot;&gt;https://chinsun9.github.io/404&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chi</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><a href="https://chinsun9.github.io/404">https://chinsun9.github.io/404</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-40420210615/preview.png" alt="after"></p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/blog-update-40420210615/1.png" alt="before"></p><ul><li>기존에는 iframe으로 배너메이커를 보여줬다</li><li>hexo 프론트 메터를 <code>layout: false</code>로 설정해 내가 원하는 대로 커스텀할 수 있었다</li><li>당시에는 404 페이지에 넣을 내용도 없고 당시 만들었던 배너메이커를 자랑하고자 했다</li><li>근데 블로그와 404페이지는 아무 관계가 없는 것처럼 느껴졌다</li><li>그래서 이번엔 <code>layout: true</code> 레이아웃을 하면서 간단한 css 이펙트를 넣어보자 생각했다</li></ul><h2 id="typewriter-animation"><a href="#typewriter-animation" class="headerlink" title="typewriter animation"></a>typewriter animation</h2><ul><li>Kevin Powell 의 <a href="https://youtu.be/w1nhwUGsG6M">https://youtu.be/w1nhwUGsG6M</a> 영상을 보고 따라 했다</li></ul><h2 id="hexo-front-matter"><a href="#hexo-front-matter" class="headerlink" title="hexo front-matter"></a>hexo front-matter</h2><ul><li><p>내 환경은 다음과 같다</p><ul><li>hexo: 5.4.0</li><li>hexo-cli: 4.2.0</li></ul></li></ul><figure class="highlight md"><figcaption><span>404.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 404</span><br><span class="line">widgets: null</span><br><span class="line">comment: false</span><br><span class="line">article:</span><br><span class="line"><span class="bullet">  -</span> license: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li>404 화면에 위젯, 코멘트, 라인센스 영역을 없애기 위해 설정했다</li><li>title은 넣어주면 head의 title tag에 반영되어서 넣어줬다</li></ul><figure class="highlight html"><figcaption><span>404.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">h1</span><span class="selector-class">.title</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">display</span>: none;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>실제 포스트 영역에서 보이지 않게 했다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/w1nhwUGsG6M">https://youtu.be/w1nhwUGsG6M</a></li><li><a href="https://chinsun9.github.io/2020/09/21/%EC%BB%A4%EC%8A%A4%ED%85%80-404-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/">https://chinsun9.github.io/2020/09/21/커스텀-404-페이지-만들기/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      
      <comments>https://chinsun9.github.io/2021/06/15/blog-update-404/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
