<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Tue, 03 Aug 2021 01:12:55 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>cli에서 줄바꿔서 명령어 계속 입력하기</title>
      <link>https://chinsun9.github.io/2021/08/03/cli-continue-command-to-next-line/</link>
      <guid>https://chinsun9.github.io/2021/08/03/cli-continue-command-to-next-line/</guid>
      <pubDate>Tue, 03 Aug 2021 01:12:55 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/cli-continue-command-to-next-line-20210803/preview.png&quot; a</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/cli-continue-command-to-next-line-20210803/preview.png" alt=" "></p><figure class="highlight bat"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="number">1</span> ^</span><br><span class="line"><span class="number">2</span> ^</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight ps1"><figcaption><span>powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="number">1</span> `</span><br><span class="line"><span class="number">2</span> `</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>shell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 \</span><br><span class="line">2 \</span><br><span class="line">3</span><br></pre></td></tr></table></figure><ul><li>cmd, powershell, bash 다 달라서 흠이다</li><li>cli에서 긴 명령어를 작성할 때 가독성을 높여줄 수 있다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/cmd/">cmd</category>
      
      
      <category domain="https://chinsun9.github.io/tags/cmd/">cmd</category>
      
      <category domain="https://chinsun9.github.io/tags/bash/">bash</category>
      
      <category domain="https://chinsun9.github.io/tags/powershell/">powershell</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/03/cli-continue-command-to-next-line/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>202107 검색 실적</title>
      <link>https://chinsun9.github.io/2021/08/03/202107-search-performance-report/</link>
      <guid>https://chinsun9.github.io/2021/08/03/202107-search-performance-report/</guid>
      <pubDate>Tue, 03 Aug 2021 00:03:58 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202107-search-performance-report20210803/preview.png&quot; alt</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202107-search-performance-report20210803/preview.png" alt=" "></p>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/03/202107-search-performance-report/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>javascript this</title>
      <link>https://chinsun9.github.io/2021/08/02/javascript-this/</link>
      <guid>https://chinsun9.github.io/2021/08/02/javascript-this/</guid>
      <pubDate>Mon, 02 Aug 2021 07:10:49 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;나는 평소 js에서 this나 prototype을 활용해본 적이 없다&lt;br&gt;c, java를 하다가 js를 넘어왔는데, 공부하면서 use strict를 기본으로 사용했고,&lt;br&gt;리액트에서 컴포넌트를 만들 때도 함수형으로 작성을 시작해서 this를 </description>
        
      
      
      
      <content:encoded><![CDATA[<p>나는 평소 js에서 this나 prototype을 활용해본 적이 없다<br>c, java를 하다가 js를 넘어왔는데, 공부하면서 use strict를 기본으로 사용했고,<br>리액트에서 컴포넌트를 만들 때도 함수형으로 작성을 시작해서 this를 사용해본 경험이 없었다<br>자연스럽게 <strong>thisless</strong>한 코드를 작성하게 되고 선호하게 되었다<br>근데 this를 사용한 코드를 볼 때, 해석할 수 있어야 한다<br>그동안 애매하게 알고 있었던 this에 대해 공부해보았다</p><h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><ul><li>use strict / default(sloppy mode)</li></ul><h3 id="최상위-스코프에서"><a href="#최상위-스코프에서" class="headerlink" title="최상위 스코프에서"></a>최상위 스코프에서</h3><ul><li><code>window</code> / windows</li></ul><h3 id="함수안에서-function"><a href="#함수안에서-function" class="headerlink" title="함수안에서 (function)"></a>함수안에서 (function)</h3><ul><li><code>undefined</code> / window</li></ul><h3 id="객체안에서"><a href="#객체안에서" class="headerlink" title="객체안에서"></a>객체안에서</h3><ul><li><code>자기 자신&#123;&#125;</code> / 자기 자신</li><li>객체 멤버로 화살표 함수가 있는 경우 : <code>자기 자신&#123;&#125;</code>이 아니라 <code>자기 자신&#123;&#125;</code>보다 한 단계 위</li></ul><h3 id="화살표함수에서"><a href="#화살표함수에서" class="headerlink" title="화살표함수에서"></a>화살표함수에서</h3><ul><li><code>window</code> / window</li></ul><h2 id="정리"><a href="#정리" class="headerlink" title="정리"></a>정리</h2><ul><li><code>strict mode</code>일 때와 아닐 때 동작이 달라진다</li><li><code>strict mode</code>가 아닌 경우(sloppy mode)는 생각하지 말자</li><li>화살표 함수는 항상 한 꺼풀 위와 동일한 this</li><li>함수(function keyword)와 객체의 경우 자기 자신만의 스코프를 만들고 자기를 바라본다</li><li>this는 누가 실행했냐에 따라 달라진다</li><li>this를 고정시키려면 <code>bind</code>, <code>apply</code>를 사용한다</li></ul><h2 id="생각"><a href="#생각" class="headerlink" title="생각"></a>생각</h2><ul><li>this, 콘텍스트, 스코프 체인, 렉시컬 스코핑 뒤죽박죽 개념이 떠올라서 항상 헷갈린다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>공부한 레포 ; <a href="https://github.com/chinsun9/javascript-this-practice">https://github.com/chinsun9/javascript-this-practice</a></li><li><a href="https://youtu.be/kb0Af7dzCTs">https://youtu.be/kb0Af7dzCTs</a></li><li><a href="https://youtu.be/PAr92molMHU">https://youtu.be/PAr92molMHU</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/this/">this</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/02/javascript-this/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>npm 패키지 고르는 법</title>
      <link>https://chinsun9.github.io/2021/08/01/npm-trends/</link>
      <guid>https://chinsun9.github.io/2021/08/01/npm-trends/</guid>
      <pubDate>Sun, 01 Aug 2021 03:56:49 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;여러 비슷한 패키지들이 있는데 어떤 것을 고를지 고민될때가 있다&lt;br&gt;또 내가 알고 있는 패키지를 대체할 좋은 패키지가 있는지 찾아볼 때도 있다&lt;br&gt;이럴때 유용한 &lt;strong&gt;npm trends&lt;/strong&gt; 가 있다&lt;/p&gt;
&lt;p&gt;&lt;img </description>
        
      
      
      
      <content:encoded><![CDATA[<p>여러 비슷한 패키지들이 있는데 어떤 것을 고를지 고민될때가 있다<br>또 내가 알고 있는 패키지를 대체할 좋은 패키지가 있는지 찾아볼 때도 있다<br>이럴때 유용한 <strong>npm trends</strong> 가 있다</p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/npm-trends20210730/preview.png" alt=" "></p><ul><li>npm trends를 통해 패키지들을 비교해볼 수 있다</li><li>패키지를 검색하면 연관된 패키지들이 추천되고 서로 비교해볼 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.npmtrends.com/">https://www.npmtrends.com/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/npm/">npm</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/01/npm-trends/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>리액트 SPA 쉽게 공유해보기</title>
      <link>https://chinsun9.github.io/2021/07/30/serve-react-app-simply/</link>
      <guid>https://chinsun9.github.io/2021/07/30/serve-react-app-simply/</guid>
      <pubDate>Fri, 30 Jul 2021 05:37:22 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;내가 만든 리액트 앱을 친구들에게 공유하기 위한 간단한 방법을 소개한다&lt;br&gt;방법은 2가지가 있다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nodejs express&lt;/li&gt;
&lt;li&gt;github pages&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;방법1-nodejs-ex</description>
        
      
      
      
      <content:encoded><![CDATA[<p>내가 만든 리액트 앱을 친구들에게 공유하기 위한 간단한 방법을 소개한다<br>방법은 2가지가 있다</p><ul><li>nodejs express</li><li>github pages</li></ul><h2 id="방법1-nodejs-express"><a href="#방법1-nodejs-express" class="headerlink" title="방법1. nodejs express"></a>방법1. nodejs express</h2><ul><li>집에서 포트포워딩을 통해 공유할 때나,</li><li>AWS EC2를 통해 공유할 때 사용할 수 있는 방법이다</li><li><a href="https://github.com/chinsun9/serve-spa-expressjs">https://github.com/chinsun9/serve-spa-expressjs</a></li></ul><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/chinsun9/serve-spa-expressjs.git</span><br><span class="line"><span class="built_in">cd</span> serve-spa-expressjs</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><ul><li>위 저장소를 클론하고, 종속성을 설치한다</li><li><em>index.js</em> 에서 <code>port</code>와 <code>staticDir</code>을 내 상황에 맞게 수정한다</li></ul><h3 id="port"><a href="#port" class="headerlink" title="port"></a>port</h3><figure class="highlight js"><figcaption><span>index.js:5</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> port = <span class="number">5000</span>; <span class="comment">// 원하는 포트로 수정</span></span><br></pre></td></tr></table></figure><h3 id="staticDir-spa-path"><a href="#staticDir-spa-path" class="headerlink" title="staticDir (spa path)"></a>staticDir (spa path)</h3><figure class="highlight js"><figcaption><span>index.js:7</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> staticDir = path.join(__dirname, <span class="string">&#x27;../build&#x27;</span>); <span class="comment">// 빌드된 spa 경로, index.js를 기준으로 빌드된 리액트앱 상대경로를 path.join 두번째 인자에 넣어준다</span></span><br></pre></td></tr></table></figure><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><ul><li><a href="https://github.com/chinsun9/serve-spa-expressjs">https://github.com/chinsun9/serve-spa-expressjs</a></li></ul><h2 id="방법2-github-pages"><a href="#방법2-github-pages" class="headerlink" title="방법2. github pages"></a>방법2. github pages</h2><ul><li>깃허브 페이지를 통해 배포할 수 있다</li><li>하지만 깃허브 페이지에서는 SPA를 지원하지 않는다</li><li>1페이지짜리 리액트 앱이면 상관없지만,</li><li><code>react-router-dom</code>을 사용하면서 url이 변화하는 경우</li><li>index.html과 404.html에 스크립트를 추가해줘야 한다</li><li>github pages에서 spa처럼 동작하게 해주는 마법 ; <a href="https://github.com/rafgraph/spa-github-pages#usage-instructions">https://github.com/rafgraph/spa-github-pages#usage-instructions</a></li><li><a href="https://chinsun9.github.io/hello-react/"><strong>demo page</strong></a></li></ul><h3 id="gh-pages-설치"><a href="#gh-pages-설치" class="headerlink" title="gh-pages 설치"></a>gh-pages 설치</h3><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D gh-pages</span><br></pre></td></tr></table></figure><h3 id="package-json-수정"><a href="#package-json-수정" class="headerlink" title="package.json 수정"></a>package.json 수정</h3><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="attr">&quot;deploy&quot;</span>: <span class="string">&quot;gh-pages -d build&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">&quot;homepage&quot;</span>: <span class="string">&quot;https://chinsun9.github.io/hello-react/&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>deploy</code> 스크립트 추가, <code>homepage</code> 필드를 추가한다</li><li>이때 <code>homepage</code>필드의 값은</li><li><code>https://&#123;username&#125;.github.io/&#123;repo&#125;/</code>로 한다</li></ul><h3 id="Router에-basename-추가"><a href="#Router에-basename-추가" class="headerlink" title="Router에 basename 추가"></a>Router에 basename 추가</h3><figure class="highlight jsx"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;React.StrictMode&gt;</span><br><span class="line">    &lt;Router basename=&#123;process.env.PUBLIC_URL&#125;&gt;</span><br><span class="line">      &lt;App /&gt;</span><br><span class="line">    &lt;/Router&gt;</span><br><span class="line">  &lt;/React.StrictMode&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>최상위 Router에 <code>basename=&#123;process.env.PUBLIC_URL&#125;</code>을 추가한다</li></ul><h3 id="404-html-추가"><a href="#404-html-추가" class="headerlink" title="404.html 추가"></a>404.html 추가</h3><ul><li><a href="https://github.com/rafgraph/spa-github-pages/blob/gh-pages/404.html">https://github.com/rafgraph/spa-github-pages/blob/gh-pages/404.html</a></li><li><code>public/404.html</code>을 만들고 위 내용을 추가한다</li><li>이때 다른점은 <code>pathSegmentsToKeep</code> 값을 1로 한다</li></ul><h3 id="index-html-수정"><a href="#index-html-수정" class="headerlink" title="index.html 수정"></a>index.html 수정</h3><ul><li><a href="https://github.com/rafgraph/spa-github-pages/blob/gh-pages/index.html">https://github.com/rafgraph/spa-github-pages/blob/gh-pages/index.html</a></li><li><code>public/index.html</code> head 부분에 위 <code>&lt;!-- Start Single Page Apps for GitHub Pages --&gt;</code> 에 해당하는 스크립트 부분을 추가한다</li></ul><h3 id="build-amp-amp-deploy"><a href="#build-amp-amp-deploy" class="headerlink" title="build &amp;&amp; deploy"></a>build &amp;&amp; deploy</h3><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br><span class="line">yarn deploy</span><br></pre></td></tr></table></figure><ul><li>gh-pages 브랜치가 생성되어 있고,</li><li>깃허브 페이지 기능이 활성화되어있는 것을 확인할 수 있을 것이다</li></ul><h3 id="소스코드-1"><a href="#소스코드-1" class="headerlink" title="소스코드"></a>소스코드</h3><ul><li><a href="https://github.com/chinsun9/hello-react">https://github.com/chinsun9/hello-react</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/rafgraph/spa-github-pages#usage-instructions">https://github.com/rafgraph/spa-github-pages#usage-instructions</a></li><li>github pages로 자랑하기 ; <a href="https://github.com/chinsun9/hello-react">https://github.com/chinsun9/hello-react</a></li><li>nodejs express로 자랑하기 ; <a href="https://github.com/chinsun9/serve-spa-expressjs">https://github.com/chinsun9/serve-spa-expressjs</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/express/">express</category>
      
      <category domain="https://chinsun9.github.io/tags/spa/">spa</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/30/serve-react-app-simply/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>깃허브에서 검색할 때 포크 저장소 포함하기</title>
      <link>https://chinsun9.github.io/2021/07/30/github-advanced-search/</link>
      <guid>https://chinsun9.github.io/2021/07/30/github-advanced-search/</guid>
      <pubDate>Fri, 30 Jul 2021 00:53:17 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;깃허브에서 저장소를 검색할 때, 포크 저장소는 검색되지 않는다&lt;br&gt;&lt;code&gt;github advanced search&lt;/code&gt;를 사용해서 검색해보자&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsu</description>
        
      
      
      
      <content:encoded><![CDATA[<p>깃허브에서 저장소를 검색할 때, 포크 저장소는 검색되지 않는다<br><code>github advanced search</code>를 사용해서 검색해보자</p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-advanced-search20210730/preview.png" alt=" "></p><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>원본 레포가 업데이트가 없어서 포크를 확인하고 싶었다</li><li>그런데 기본적인 깃허브 검색으로는 포크가 검색되지 않았다</li></ul><h2 id="github-advanced-search"><a href="#github-advanced-search" class="headerlink" title="github advanced search"></a>github advanced search</h2><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-advanced-search20210730/2.png" alt=" "></p><ul><li>검색 결과 왼쪽 칼럼 하단을 보면 advanced search 버튼이 있다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-advanced-search20210730/1.png" alt=" "></p><ul><li>여러 검색 옵션들이 있는데, 포크를 포함하여 검색하기 위해 <code>and</code> <em>including forks.</em> 로 설정했다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-advanced-search20210730/preview.png" alt=" "></p><ul><li>이제 포크가 포함되어 검색되는 것을 확인할 수 있다</li><li>검색 결과 화면에서 정렬을 사용할 수 있다</li><li>나는 스타가 많은 순으로 정렬하여 인기 있는 포크를 확인할 수 있었다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/30/github-advanced-search/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git config by workspace</title>
      <link>https://chinsun9.github.io/2021/07/30/git-config-by-workspace/</link>
      <guid>https://chinsun9.github.io/2021/07/30/git-config-by-workspace/</guid>
      <pubDate>Fri, 30 Jul 2021 00:38:10 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;보통 global로 설정된 user.name, uesr.email이 있을 것이다&lt;/li&gt;
&lt;li&gt;깃 프로젝트 워크스페이스 별로 다른 계정을 사용해보자&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcap</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>보통 global로 설정된 user.name, uesr.email이 있을 것이다</li><li>깃 프로젝트 워크스페이스 별로 다른 계정을 사용해보자</li></ul><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git config user.name &#123;username&#125;</span></span><br><span class="line">git config user.name chinsun9</span><br><span class="line"></span><br><span class="line"><span class="comment"># git config user.email &#123;email&#125;</span></span><br><span class="line">git config user.email chin_sung@naver.com</span><br></pre></td></tr></table></figure><ul><li>글로벌로 설정된 이름, 이메일 대신, 다른 계정을 사용하고 싶은 워크스페이스로 가서 위 명령을 실행한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/8801729/is-it-possible-to-have-different-git-configuration-for-different-projects">https://stackoverflow.com/questions/8801729/is-it-possible-to-have-different-git-configuration-for-different-projects</a></li><li>경로 패턴에 따라 config를 다르게 구성하는 방법도 있다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/30/git-config-by-workspace/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 깃, 도커 설치하기</title>
      <link>https://chinsun9.github.io/2021/07/29/install-git-docker-on-raspberrypi/</link>
      <guid>https://chinsun9.github.io/2021/07/29/install-git-docker-on-raspberrypi/</guid>
      <pubDate>Thu, 29 Jul 2021 08:57:14 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/install-git-docker-on-raspberrypi20210729/preview.png&quot; al</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/install-git-docker-on-raspberrypi20210729/preview.png" alt=" "></p><h3 id="git-설치"><a href="#git-설치" class="headerlink" title="git 설치"></a>git 설치</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h3 id="docker-설치"><a href="#docker-설치" class="headerlink" title="docker 설치"></a>docker 설치</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%84%A4%EC%B9%98">https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%84%A4%EC%B9%98</a></li><li><a href="https://docs.docker.com/engine/install/debian/">https://docs.docker.com/engine/install/debian/</a></li><li><a href="/2021/07/29/how-to-install-raspberrypi-os/">라즈베리파이에 라즈비안 설치 및 설정</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/docker/">docker</category>
      
      <category domain="https://chinsun9.github.io/tags/raspberrypi/">raspberrypi</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/29/install-git-docker-on-raspberrypi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 라즈비안 설치 및 설정</title>
      <link>https://chinsun9.github.io/2021/07/29/how-to-install-raspberrypi-os/</link>
      <guid>https://chinsun9.github.io/2021/07/29/how-to-install-raspberrypi-os/</guid>
      <pubDate>Thu, 29 Jul 2021 08:49:35 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;라즈베리파이에 &lt;strong&gt;Raspberry Pi OS Lite&lt;/strong&gt; 를 설치해보자&lt;/p&gt;
&lt;h2 id=&quot;라즈비안-이미지-받기&quot;&gt;&lt;a href=&quot;#라즈비안-이미지-받기&quot; class=&quot;headerlink&quot; title=&quot;라즈비안 이미지 </description>
        
      
      
      
      <content:encoded><![CDATA[<p>라즈베리파이에 <strong>Raspberry Pi OS Lite</strong> 를 설치해보자</p><h2 id="라즈비안-이미지-받기"><a href="#라즈비안-이미지-받기" class="headerlink" title="라즈비안 이미지 받기"></a>라즈비안 이미지 받기</h2><ul><li><a href="https://www.raspberrypi.org/software/operating-systems/">https://www.raspberrypi.org/software/operating-systems/</a></li><li><code>Raspberry Pi OS Lite</code>를 다운로드한다</li></ul><h2 id="sd-카드-준비"><a href="#sd-카드-준비" class="headerlink" title="sd 카드 준비"></a>sd 카드 준비</h2><ul><li><a href="https://www.balena.io/etcher/">https://www.balena.io/etcher/</a></li><li><code>balenaEtcher</code> 설치한다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/how-to-install-raspberrypi-os20210729/preview.png" alt=" "></p><ul><li>라즈비안 이미지를 선택하고</li><li>인스톨한 sd카드를 선택하여 os를 설치한다</li></ul><h2 id="와이파이로-인터넷-연결하기"><a href="#와이파이로-인터넷-연결하기" class="headerlink" title="와이파이로 인터넷 연결하기"></a>와이파이로 인터넷 연결하기</h2><ul><li>sd카드를 꼽고,</li><li>hdmi로 모니터와 키보드를 연결하고 전원을 켠다</li><li>기본 계정은 pi / raspberry 이다</li><li>와이파이로 인터넷을 연결해주겠다</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure><ul><li>system option -&gt; wireless lan -&gt; GB (영국) -&gt; 와이파이명 -&gt; 와이파이 비밀번호 -&gt; 리부트</li><li>재부팅 후에 인터넷 연결을 확인하기 위해 <code>ifconfig</code> 명령을 실행하여 확인해준다</li></ul><h2 id="ssh-설정하기"><a href="#ssh-설정하기" class="headerlink" title="ssh 설정하기"></a>ssh 설정하기</h2><p>외부에서 리모트로 개발하기 위해 ssh 설정을 해줘야 한다</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure><ul><li>interface option -&gt; ssh -&gt; enable</li><li>이제 리모트 할 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.raspberrypi.org/software/operating-systems/">https://www.raspberrypi.org/software/operating-systems/</a></li><li><a href="/2021/07/29/install-git-docker-on-raspberrypi/">라즈베리파이에 깃, 도커 설치하기</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/raspberrypi/">raspberrypi</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/29/how-to-install-raspberrypi-os/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>postgresql commands</title>
      <link>https://chinsun9.github.io/2021/07/28/postgresql-commands/</link>
      <guid>https://chinsun9.github.io/2021/07/28/postgresql-commands/</guid>
      <pubDate>Wed, 28 Jul 2021 01:13:08 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;strong&gt;SQL Shell (psql)&lt;/strong&gt; 에서 명령&lt;br&gt;postgreql 처음 써보는 데 사용한 명령어 및 커넥션 설정 정리&lt;/p&gt;
&lt;h2 id=&quot;psql&quot;&gt;&lt;a href=&quot;#psql&quot; class=&quot;headerlink&quot; ti</description>
        
      
      
      
      <content:encoded><![CDATA[<p><strong>SQL Shell (psql)</strong> 에서 명령<br>postgreql 처음 써보는 데 사용한 명령어 및 커넥션 설정 정리</p><h2 id="psql"><a href="#psql" class="headerlink" title="psql"></a>psql</h2><figure class="highlight sql"><figcaption><span>psql commands</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 데이터베이스 생성</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE student;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 유저 생성</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> sung <span class="keyword">WITH</span> PASSWORD <span class="string">&#x27;1234&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 권한 부여</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> DATABASE student <span class="keyword">TO</span> sung;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 특정 유저로 데이터베이스 접속</span></span><br><span class="line">\c student sung</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 테이블 목록 보기</span></span><br><span class="line">\d</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 테이블 칼럼 보기</span></span><br><span class="line">\d student</span><br></pre></td></tr></table></figure><ul><li>대소문자 구분은 안 해도 된다</li></ul><h2 id="connection"><a href="#connection" class="headerlink" title="connection"></a>connection</h2><figure class="highlight properties"><figcaption><span>application.properties</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:postgresql://localhost:5432/student</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">sung</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">1234</span></span><br><span class="line"><span class="meta">spring.jpa.hibernate.ddl-auto</span>=<span class="string">create-drop</span></span><br><span class="line"><span class="meta">spring.jpa.show-sql</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">spring.jpa.properties.hibernate.dialect</span>=<span class="string">org.hibernate.dialect.PostgreSQLDialect</span></span><br><span class="line"><span class="meta">spring.jpa.properties.hibernate.format_sql</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><h2 id="jdbc"><a href="#jdbc" class="headerlink" title="jdbc"></a>jdbc</h2><ul><li><a href="https://jdbc.postgresql.org/download.html">https://jdbc.postgresql.org/download.html</a></li><li>최신 버전의 postgresql을 사용하면 4.2를 다운로드하면 된다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/9SGDpanrc8U">https://youtu.be/9SGDpanrc8U</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/sql/">sql</category>
      
      
      <category domain="https://chinsun9.github.io/tags/sql/">sql</category>
      
      <category domain="https://chinsun9.github.io/tags/postgresql/">postgresql</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/28/postgresql-commands/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>eclipse command palette</title>
      <link>https://chinsun9.github.io/2021/07/28/eclipse-command-palette/</link>
      <guid>https://chinsun9.github.io/2021/07/28/eclipse-command-palette/</guid>
      <pubDate>Wed, 28 Jul 2021 00:39:08 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;code&gt;Ctrl 3&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vscode에서 명령 팔레트를 자주 쓰는데, 이클립스에서도 같은 기능이 있는지 확인해보았다&lt;/li&gt;
&lt;li&gt;이클립스에서 빠르게 파일을 열어보고 싶은데 vscode에서 &lt;code&gt;Ctrl </description>
        
      
      
      
      <content:encoded><![CDATA[<p><code>Ctrl 3</code></p><ul><li>vscode에서 명령 팔레트를 자주 쓰는데, 이클립스에서도 같은 기능이 있는지 확인해보았다</li><li>이클립스에서 빠르게 파일을 열어보고 싶은데 vscode에서 <code>Ctrl P</code> 같은 명령어가 있는지 확인해보았다</li></ul><h2 id="이클립스-유용한-단축키"><a href="#이클립스-유용한-단축키" class="headerlink" title="이클립스 유용한 단축키"></a>이클립스 유용한 단축키</h2><ul><li>Ctrl Shift R ; Open resource ; 파일 빠르게 열기</li><li>Alt Shift L ; extract local variable ; 리팩토링</li><li>Alt Shift R ; rename ; 리팩토링</li><li>Ctrl Alt T ; terminal ; 터미널 열기</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/10370567/choose-command-popup-in-eclipse/23310954">https://stackoverflow.com/questions/10370567/choose-command-popup-in-eclipse/23310954</a></li><li><a href="https://stackoverflow.com/questions/3859632/what-is-the-keyboard-shortcut-to-go-to-a-file-in-eclipse-on-mac-os-x">https://stackoverflow.com/questions/3859632/what-is-the-keyboard-shortcut-to-go-to-a-file-in-eclipse-on-mac-os-x</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/java/">java</category>
      
      
      <category domain="https://chinsun9.github.io/tags/java/">java</category>
      
      <category domain="https://chinsun9.github.io/tags/eclipse/">eclipse</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/28/eclipse-command-palette/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>일렉트론 타입스크립트로 시작하기</title>
      <link>https://chinsun9.github.io/2021/07/22/create-electron-app-with-typescript/</link>
      <guid>https://chinsun9.github.io/2021/07/22/create-electron-app-with-typescript/</guid>
      <pubDate>Thu, 22 Jul 2021 07:34:13 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight bash&quot;&gt;&lt;figcaption&gt;&lt;span&gt;terminal&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn create electron-app my-new-app --template=typescript</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.electronforge.io/templates/typescript-template">https://www.electronforge.io/templates/typescript-template</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/electron/">electron</category>
      
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/electron/">electron</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/22/create-electron-app-with-typescript/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>yarn create</title>
      <link>https://chinsun9.github.io/2021/07/22/yarn-create/</link>
      <guid>https://chinsun9.github.io/2021/07/22/yarn-create/</guid>
      <pubDate>Thu, 22 Jul 2021 07:22:40 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight bash&quot;&gt;&lt;figcaption&gt;&lt;span&gt;terminal&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npx create-react-app my-app</span></span><br><span class="line">yarn create react-app my-app</span><br><span class="line"></span><br><span class="line"><span class="comment"># npx create-electron-app my-app</span></span><br><span class="line">yarn create electron-app my-app</span><br></pre></td></tr></table></figure><ul><li>보통 보일러플레이트로 프로젝트를 시작할 때 <code>npx</code>를 사용한다</li><li><code>yarn create</code>는 <code>create</code>로 시작하는 패키지를 설치할 때 <code>npx</code>와 동일하게 동작한다</li></ul><h2 id="npx-vs-npm-i-g"><a href="#npx-vs-npm-i-g" class="headerlink" title="npx vs. npm i -g"></a>npx vs. npm i -g</h2><ul><li>보일러플레이트로 시작할 때 크게 두 가지 방법이 있는데,</li><li><code>npx</code>로 시작하는 방법과, 글로벌 설치 후 cli로 시작하는 방법이 있다</li><li>보통 보일러플레이트 패키지는 <code>npx</code>를 권장하는데, 이유는 <code>npx</code>는 항상 최신 버전으로 설치해준다</li><li>반면 글로벌로 설치해서 사용하는 경우, 시간이 지나면 구버전이 되고, 업데이트는 하려면 수동으로 해줘야 한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://classic.yarnpkg.com/en/docs/cli/create/">https://classic.yarnpkg.com/en/docs/cli/create/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/boilerplate/">boilerplate</category>
      
      <category domain="https://chinsun9.github.io/tags/yarn/">yarn</category>
      
      <category domain="https://chinsun9.github.io/tags/npx/">npx</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/22/yarn-create/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>powershell로 환경변수 추가하기</title>
      <link>https://chinsun9.github.io/2021/07/20/add-environment-variable-using-powershell/</link>
      <guid>https://chinsun9.github.io/2021/07/20/add-environment-variable-using-powershell/</guid>
      <pubDate>Tue, 20 Jul 2021 08:23:27 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight ps1&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight ps1"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 사용자 변수로 추가</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&quot;GH_TOKEN&quot;</span>,<span class="string">&quot;&lt;YOUR_TOKEN_HERE&gt;&quot;</span>,<span class="string">&quot;User&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 시스템 변수로 추가 (관리자 권한 필요)</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&quot;GH_TOKEN&quot;</span>,<span class="string">&quot;&lt;YOUR_TOKEN_HERE&gt;&quot;</span>,<span class="string">&quot;Machine&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>파워쉘 명령어 한 줄로 환경변수를 쉽게 추가할 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.microsoft.com/ko-kr/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.1#using-systemenvironment-methods">https://docs.microsoft.com/ko-kr/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.1#using-systemenvironment-methods</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/cmd/">cmd</category>
      
      
      <category domain="https://chinsun9.github.io/tags/cmd/">cmd</category>
      
      <category domain="https://chinsun9.github.io/tags/powershell/">powershell</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/20/add-environment-variable-using-powershell/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>electron 카테고리 생성</title>
      <link>https://chinsun9.github.io/2021/07/19/create-electron-category/</link>
      <guid>https://chinsun9.github.io/2021/07/19/create-electron-category/</guid>
      <pubDate>Mon, 19 Jul 2021 06:16:13 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;일렉트론 공부&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>일렉트론 공부</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/electron/">electron</category>
      
      
      <category domain="https://chinsun9.github.io/tags/category/">category</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/19/create-electron-category/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>js coercion</title>
      <link>https://chinsun9.github.io/2021/07/19/js-coercion/</link>
      <guid>https://chinsun9.github.io/2021/07/19/js-coercion/</guid>
      <pubDate>Mon, 19 Jul 2021 00:41:55 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;서로 다른 타입끼리 연산을 할 때, 타입 캐스팅이 일어난다&lt;/li&gt;
&lt;li&gt;js에서는 이를 &lt;code&gt;coercion&lt;/code&gt; 이라고 부르는 것 같다&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;js에서 서로 다른 타입 간의 연산을 하더라도</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>서로 다른 타입끼리 연산을 할 때, 타입 캐스팅이 일어난다</li><li>js에서는 이를 <code>coercion</code> 이라고 부르는 것 같다</li></ul><ul><li>js에서 서로 다른 타입 간의 연산을 하더라도 웬만하면 에러가 안 뜬다</li><li>어느 한쪽을 기준으로 자동 캐스팅되어서 js를 처음 배울 때 너무 편했다</li><li>이런 강제 형변환이 직관적이라고 생각할 때도 있지만, 가끔 실수할 때가 있다</li><li>나는 처음 js를 배울 때 <code>var</code>보다는 <code>const</code>, <code>let</code></li><li><code>==</code>보다는 <code>===</code>를 사용하라고 배워서 그냥 그런가 보다 하고 따랐었는데,</li><li>특히 조건문에서 강제 형변환은 예상하지 못한 동작들을 많이 만들어내는 것 같다</li><li><code>===</code>, <code>!==</code>를 사용함으로써 강제 형변환 없이 비교해 볼 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://jihyehwang09.github.io/2019/04/05/33-js-type-coercion/">https://jihyehwang09.github.io/2019/04/05/33-js-type-coercion/</a></li><li><a href="https://github.com/leonardomso/33-js-concepts">https://github.com/leonardomso/33-js-concepts</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/19/js-coercion/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>js fetch 요청 취소, 중단하기</title>
      <link>https://chinsun9.github.io/2021/07/18/cancel-fetch/</link>
      <guid>https://chinsun9.github.io/2021/07/18/cancel-fetch/</guid>
      <pubDate>Sun, 18 Jul 2021 02:13:19 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;figcaption&gt;&lt;span&gt;example.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><figcaption><span>example.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fetchData = <span class="keyword">async</span> (pram) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`fetchData`</span>);</span><br><span class="line">    <span class="keyword">if</span> (controller) controller.abort();</span><br><span class="line">    controller = <span class="keyword">new</span> AbortController();</span><br><span class="line">    <span class="keyword">const</span> &#123; signal &#125; = controller;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> fetch(<span class="string">`<span class="subst">$&#123;API_END_POINT&#125;</span>/<span class="subst">$&#123;pram&#125;</span>`</span>, &#123; signal &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!res.ok) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;no ok error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> res.json();</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;server error&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><code>AbortController</code>를 사용해서 기존에 요청이 있으면</li><li>취소하고 새로운 요청을 보내는 예제이다</li></ul><ul><li>버튼을 눌러서 <code>fetchData</code>를 실행시킨다고 하자</li><li>유저가 빠르게 버튼 10번을 눌러서 <code>fetchData</code>가 10번 실행되었다</li><li>이런 입력에 대한 아무런 방지를 않았으면, fetch 결과에 대한 콜백이 10번 실행될 것이다</li><li><code>AbortController</code>을 사용하면 버튼을 연속적으로 누르더라도 콜백이 마지막 결과에 대해서만 한번 동작할 것이다</li><li>하지만 <code>AbortController</code>를 사용한다고 해서 API를 콜하는 비용이 덜 드는 것은 아니다</li><li>단순히 해당 fetch에 대한 결과를 핸들하지 않겠다는 것이기 때문에,</li><li>지금의 예처럼 동일한 API를 중복해서 호출하는 것을 막기 위해서는</li><li>최초에 버튼을 누르면 버튼을 비활성화하는 것이 좋다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/API/AbortController/abort">https://developer.mozilla.org/ko/docs/Web/API/AbortController/abort</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/fetch/">fetch</category>
      
      <category domain="https://chinsun9.github.io/tags/AbortController/">AbortController</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/18/cancel-fetch/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>깃허브 템플릿 저장소 만들기</title>
      <link>https://chinsun9.github.io/2021/07/17/github-template-repo/</link>
      <guid>https://chinsun9.github.io/2021/07/17/github-template-repo/</guid>
      <pubDate>Sat, 17 Jul 2021 05:29:10 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;템플릿 레포를 만들어보자&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-template-repo20210716/preview</description>
        
      
      
      
      <content:encoded><![CDATA[<p>템플릿 레포를 만들어보자</p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-template-repo20210716/preview.png" alt=" "></p><ul><li>리액트 프로젝트를 진행할 때, CRA 같은 보일러플레이트로 프로젝트를 시작할 수 있다</li><li>근데 자신만의 린트 설정이나, 따로 설치하는 패키지들이 있다</li><li>이런 것들을 매번 새로운 프로젝트를 생성할 때마다 해준다면 귀찮을 것이다</li><li>이때 깃허브에서는 템플릿 저장소 기능을 활용할 수 있다</li></ul><h2 id="템플릿-저장소-하나-만들기"><a href="#템플릿-저장소-하나-만들기" class="headerlink" title="템플릿 저장소 하나 만들기"></a>템플릿 저장소 하나 만들기</h2><ul><li>템플릿으로 만들 저장소를 만들고,</li><li>원하는 초기 상태를 세팅한다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-template-repo20210716/1.png" alt=" "></p><ul><li>Settings 탭에 들어가면 레포명 설정 아래 바로 템플릿 레포로 지정할 수 있는 체크박스가 있다</li><li>체크 박스를 체크하면 템플릿 레포 완성이다</li></ul><h2 id="템플릿을-사용해서-새-저장소-생성하기"><a href="#템플릿을-사용해서-새-저장소-생성하기" class="headerlink" title="템플릿을 사용해서 새 저장소 생성하기"></a>템플릿을 사용해서 새 저장소 생성하기</h2><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-template-repo20210716/preview.png" alt=" "></p><ul><li>템플릿으로 설정한 저장소를 선택할 수 있다</li></ul><h2 id="다른-사람이-만들어둔-템플릿-사용하기"><a href="#다른-사람이-만들어둔-템플릿-사용하기" class="headerlink" title="다른 사람이 만들어둔 템플릿 사용하기"></a>다른 사람이 만들어둔 템플릿 사용하기</h2><ul><li>다른 사람이 만들어 둔 템플릿 레포가 있을 수 있는데,</li><li>포크해서 내 저장소로 가져오면 바로 사용이 가능하다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/creating-a-template-repository">https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/creating-a-template-repository</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/template/">template</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/17/github-template-repo/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>js event loop</title>
      <link>https://chinsun9.github.io/2021/07/16/js-event-loop/</link>
      <guid>https://chinsun9.github.io/2021/07/16/js-event-loop/</guid>
      <pubDate>Fri, 16 Jul 2021 08:07:58 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://youtu.be/8aGhZQkoFbQ&quot;&gt;https://youtu.be/8aGhZQkoFbQ&lt;/a&gt; 을 보고 정리&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;video-containe</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p><a href="https://youtu.be/8aGhZQkoFbQ">https://youtu.be/8aGhZQkoFbQ</a> 을 보고 정리</p></blockquote><div class="video-container"><iframe src="https://www.youtube.com/embed/8aGhZQkoFbQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>비동기 코드는 webapi에서 실행된다</li><li>실행이 완료되면 큐에 들어간다</li><li>큐에서 스택에 아무것도 없기를 기다렸다가</li><li>스택에 들어가고 실행된다</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 첫 번째로 스택에 들어감</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 두 번쨰로 스택에 들어가고 바로 webapi로 들어감</span></span><br><span class="line"><span class="built_in">setTimeout</span>(</span><br><span class="line">  <span class="comment">// webapi에서 큐로 던져짐. console.log(3)이 끝나고 스택이 텅텅 비워져서야 네 번째로 스택에 들어감</span></span><br><span class="line">  () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="number">0</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 세 번째로 스택에 들어감</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1 3 2</span></span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/8aGhZQkoFbQ">https://youtu.be/8aGhZQkoFbQ</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/16/js-event-loop/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>js hoisting 호이스팅</title>
      <link>https://chinsun9.github.io/2021/07/16/js-hoisting/</link>
      <guid>https://chinsun9.github.io/2021/07/16/js-hoisting/</guid>
      <pubDate>Fri, 16 Jul 2021 07:41:56 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;em&gt;javascript에서는 선언 전에 변수를 사용할 수 있는 경우가 있는데, 호이스팅 때문이다&lt;/em&gt;&lt;br&gt;&lt;em&gt;근데 호이스팅은 나쁜거다&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;figcaption&gt;&lt;span</description>
        
      
      
      
      <content:encoded><![CDATA[<p><em>javascript에서는 선언 전에 변수를 사용할 수 있는 경우가 있는데, 호이스팅 때문이다</em><br><em>근데 호이스팅은 나쁜거다</em></p><figure class="highlight js"><figcaption><span>var</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.trace(A); <span class="comment">// undefined</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">console</span>.trace(A); <span class="comment">// undefined</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">console</span>.trace(A); <span class="comment">// undefined</span></span><br><span class="line">      <span class="keyword">var</span> A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.trace(A); <span class="comment">// 1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.trace(A); <span class="comment">// 1</span></span><br><span class="line">&#125;</span><br><span class="line">f();</span><br><span class="line"><span class="comment">// console.trace(A) // not work</span></span><br></pre></td></tr></table></figure><ul><li><code>var</code> 키워드를 사용하면 함수 최상위 스코프로 간다</li><li>변수 A는 선언도 안되었는데 잘 실행되는 이유이다</li></ul><figure class="highlight js"><figcaption><span>함수 호이스팅</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">f();</span><br><span class="line"><span class="comment">// g(); // not work</span></span><br><span class="line"><span class="comment">// h(); // not work</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> g = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> h = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>특히 함수는 함수 선언식? 일 때 호이스팅 된다</li><li>나는 처음 js를 배울 때, <code>var</code>을 <code>const</code>, <code>let</code>으로 대체해라고 해서</li><li>일단은 var을 안 쓰면서 공부를 해왔었는데,</li><li>그래선지 호이스팅 관련해서 골머리 아픈 적이 없었던 것 같다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/var">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/var</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/16/js-hoisting/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
