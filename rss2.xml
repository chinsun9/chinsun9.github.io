<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Wed, 23 Sep 2020 00:35:03 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>vscode에서 마크다운 미리보기</title>
      <link>https://chinsun9.github.io/2020/09/23/vscode%EC%97%90%EC%84%9C-%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4-%EB%AF%B8%EB%A6%AC%EB%B3%B4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/23/vscode%EC%97%90%EC%84%9C-%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4-%EB%AF%B8%EB%A6%AC%EB%B3%B4%EA%B8%B0/</guid>
      <pubDate>Wed, 23 Sep 2020 00:15:53 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;../images/vscode에서-마크다운-미리보기20200923/preview.jpg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;vscode에서 markdown open preview를 사용하면된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;markdown-</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="../images/vscode에서-마크다운-미리보기20200923/preview.jpg" ><ul><li>vscode에서 markdown open preview를 사용하면된다.</li></ul><h2 id="markdown-open-preview"><a href="#markdown-open-preview" class="headerlink" title="markdown open preview"></a>markdown open preview</h2><ul><li><code>ctrl shift v</code> 를 누르면 마크다운 미리보기를 할 수 있다.</li><li>마크다운 미리보기창이 열리면 <code>ctrl alt →</code>키를 통해 옆으로 옮겨서 볼 수 있다.</li><li>실시간으로 반영되니 마크 다운 쓸때 엄청 유용하다!</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/markdown-open-preview/">markdown open preview</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/23/vscode%EC%97%90%EC%84%9C-%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4-%EB%AF%B8%EB%A6%AC%EB%B3%B4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo에서 초안, 작성중 사용하기</title>
      <link>https://chinsun9.github.io/2020/09/22/hexo%EC%97%90%EC%84%9C-%EC%B4%88%EC%95%88-%EC%9E%91%EC%84%B1%EC%A4%91-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/22/hexo%EC%97%90%EC%84%9C-%EC%B4%88%EC%95%88-%EC%9E%91%EC%84%B1%EC%A4%91-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 22 Sep 2020 04:52:42 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/images/hexo에서-초안-작성중-사용하기20200922/preview.jpg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;너무 많은 포스트들 속에.. 파묻혀있는 새 글&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;draft-사용하기&quot;&gt;&lt;a href=&quot;#dra</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/hexo에서-초안-작성중-사용하기20200922/preview.jpg" ><ul><li>너무 많은 포스트들 속에.. 파묻혀있는 새 글</li></ul><h2 id="draft-사용하기"><a href="#draft-사용하기" class="headerlink" title="draft 사용하기"></a>draft 사용하기</h2><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft &quot;hexo에서 초안, 작성중 사용하기&quot;</span><br></pre></td></tr></table></figure><h3 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h3><ul><li>hexo에서는 새 포스트를 생서할때 layout이라는 것을 지정할 수 있다.</li><li>기본적으로 3개의 레이아웃이 있다. <code>post</code>, <code>draft</code>, <code>page</code></li><li><code>post</code>레이아웃은 기본값이다. source/_posts/ 아래에 생성되게 만든다.</li><li><code>page</code>레이아웃은 페이지를 생성한다. source/ 아래에 생성되게 만든다.</li><li><code>draft</code>레이아웃은 source/_drafts/ 아래에 생성되게 만든다.</li></ul><h3 id="Draft"><a href="#Draft" class="headerlink" title="Draft"></a>Draft</h3><ul><li>source/_drafts/ 아래에 생성된 md들은 기본적으로 렌더링 되지 않는다.</li><li>즉, 배포해도 블로그에 표시되지 않는다.</li><li>따라서 작성중인 글을 노출시키지 않을 수 있다.</li><li>또 포스트가 많아지면서 source/_posts 디렉터리가 복잡해지는데, 여기서 스크롤해가면서 작성중인 글을 힘들게 찾을 필요가 없다.</li></ul><h4 id="작성완료하는-법"><a href="#작성완료하는-법" class="headerlink" title="작성완료하는 법"></a>작성완료하는 법</h4><ul><li>포스팅이 끝나면 이제 _posts 디렉터리로 옮기면 된다.</li></ul><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] [작성 완료한 포스트 파일명]</span><br><span class="line"></span><br><span class="line">hexo publish aws aws-공부</span><br></pre></td></tr></table></figure><ul><li>드래그 앤 드랍으로 직접 posts 폴더로 옮겨줄 수도 있는데</li><li>publish 명령을 사용하게 되면 layout을 지정할 수 있다.</li><li>scaffolds 디렉터리에 만들어준 틀대로 front-matter가 바뀐다.</li><li>layout은 생략하면 기본값으로 post가 적용된다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog/">blog</category>
      
      
      <category domain="https://chinsun9.github.io/tags/hexo/">hexo</category>
      
      <category domain="https://chinsun9.github.io/tags/blog/">blog</category>
      
      <category domain="https://chinsun9.github.io/tags/draft/">draft</category>
      
      <category domain="https://chinsun9.github.io/tags/layout/">layout</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/22/hexo%EC%97%90%EC%84%9C-%EC%B4%88%EC%95%88-%EC%9E%91%EC%84%B1%EC%A4%91-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>내가 블로그에서 마크다운 쓰는법</title>
      <link>https://chinsun9.github.io/2020/09/22/%EB%82%B4%EA%B0%80-%EB%B8%94%EB%A1%9C%EA%B7%B8%EC%97%90%EC%84%9C-%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4-%EC%93%B0%EB%8A%94%EB%B2%95/</link>
      <guid>https://chinsun9.github.io/2020/09/22/%EB%82%B4%EA%B0%80-%EB%B8%94%EB%A1%9C%EA%B7%B8%EC%97%90%EC%84%9C-%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4-%EC%93%B0%EB%8A%94%EB%B2%95/</guid>
      <pubDate>Tue, 22 Sep 2020 02:33:58 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight md&quot;&gt;&lt;figcaption&gt;&lt;span&gt;포스트.md&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight md"><figcaption><span>포스트.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://chinsun9.github.io/img/avatar.png&quot;</span> &gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 상세 설명1</span><br><span class="line"><span class="bullet">-</span> 상세 설명2</span><br><span class="line"></span><br><span class="line"><span class="section">## h2</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 그러하다</span><br><span class="line"></span><br><span class="line"><span class="section">### h3</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 그러하다</span><br><span class="line"><span class="bullet">-</span> 종종 [<span class="string">링크</span>](<span class="link">https://chinsun9.github.io/img/avatar.png</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">## 코드 스니펫</span></span><br><span class="line"></span><br><span class="line"><span class="code">```js tmp.js</span></span><br><span class="line"><span class="code">console.log(hi);</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><ul><li><p>나는 블로그에 글 쓸때 이렇게만 쓴다.</p></li><li><p>위 처럼 작성하면 결과는…</p><img src="https://chinsun9.github.io/img/avatar.png" ><ul><li>상세 설명1</li><li>상세 설명2</li></ul><h2 id="h2"><a href="#h2" class="headerlink" title="h2"></a>h2</h2><ul><li>그러하다</li></ul><h3 id="h3"><a href="#h3" class="headerlink" title="h3"></a>h3</h3><ul><li>그러하다</li><li>종종 <a href="https://chinsun9.github.io/img/avatar.png">링크</a></li></ul><h2 id="코드-스니펫"><a href="#코드-스니펫" class="headerlink" title="코드 스니펫"></a>코드 스니펫</h2><figure class="highlight js"><figcaption><span>tmp.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(hi);</span><br></pre></td></tr></table></figure></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/markdown/">markdown</category>
      
      
      <category domain="https://chinsun9.github.io/tags/md/">md</category>
      
      <category domain="https://chinsun9.github.io/tags/markdown/">markdown</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/22/%EB%82%B4%EA%B0%80-%EB%B8%94%EB%A1%9C%EA%B7%B8%EC%97%90%EC%84%9C-%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4-%EC%93%B0%EB%8A%94%EB%B2%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo 포스트 CRUD</title>
      <link>https://chinsun9.github.io/2020/09/22/hexo-%ED%8F%AC%EC%8A%A4%ED%8A%B8-CRUD/</link>
      <guid>https://chinsun9.github.io/2020/09/22/hexo-%ED%8F%AC%EC%8A%A4%ED%8A%B8-CRUD/</guid>
      <pubDate>Tue, 22 Sep 2020 02:08:51 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/images/hexo-포스트-CRUD20200922/preview.svg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;hexo에서 포스트 하는법!&lt;/li&gt;
&lt;li&gt;CRUD로 비유하여 알려줍니다&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;C&quot;&gt;&lt;a href=&quot;#C</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/hexo-포스트-CRUD20200922/preview.svg" ><ul><li>hexo에서 포스트 하는법!</li><li>CRUD로 비유하여 알려줍니다</li></ul><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><ul><li><p>새 포스트 쓰기</p><p><code>hexo new &quot;새 포스트&quot;</code></p></li><li><p>위 명령으로 새 포스트를 만든다.</p></li><li><p>source/_posts/새-포스트.md</p></li><li><p>경로에 새로운 md가 만들어 진다.</p></li><li><p>해당 md를 열어 마크다운을 활용해서 글을 쓴다.</p></li><li><p>마크 다운 사용법은 <a href="https://chinsun9.github.io/categories/markdown/">여기</a> 참고한다.</p></li><li><p>hexo 사용법은 <a href="https://chinsun9.github.io/categories/blog/">여기</a> 참고한다.</p></li></ul><h2 id="R"><a href="#R" class="headerlink" title="R"></a>R</h2><ul><li>포스트 읽기<br><code>hexo server</code></li><li>위 명령으로 로컬에서 내가 쓴 포스트가 잘 나오는지 확인해본다.</li></ul><h2 id="U"><a href="#U" class="headerlink" title="U"></a>U</h2><ul><li>포스트 수정하기</li><li>source/_posts 경로에서 수정하고 싶은 포스트를 찾아 수정한다.</li></ul><img src="/images/hexo-포스트-CRUD20200922/1.jpg" ><ul><li>업데이트 시각은 자동 갱신되니까 걱정하지 말도록.</li></ul><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><ul><li>포스트 삭제하기</li></ul><img src="/images/hexo-포스트-CRUD20200922/2.jpg" ><ul><li>source/_posts 경로에서 삭제하고 싶은 포스트를 찾아 삭제한다.</li><li>그냥 글을 숨기고 싶다면 source 디렉터리 바깥으로 뺀다.</li></ul><h2 id="APPLY"><a href="#APPLY" class="headerlink" title="APPLY"></a>APPLY</h2><ul><li>위 과정을 통해서 포스트를 CRUD 해봤다.</li><li>이제 깃허브 페이지에 적용시키고 싶다면 아래 명령을 사용한다.<br><code>hexo generate &amp; hexo deploy</code></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog/">blog</category>
      
      
      <category domain="https://chinsun9.github.io/tags/hexo/">hexo</category>
      
      <category domain="https://chinsun9.github.io/tags/md/">md</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/22/hexo-%ED%8F%AC%EC%8A%A4%ED%8A%B8-CRUD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>javadoc 만들고 github에서 보기</title>
      <link>https://chinsun9.github.io/2020/09/22/javadoc-%EB%A7%8C%EB%93%A4%EA%B3%A0-github%EC%97%90%EC%84%9C-%EB%B3%B4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/22/javadoc-%EB%A7%8C%EB%93%A4%EA%B3%A0-github%EC%97%90%EC%84%9C-%EB%B3%B4%EA%B8%B0/</guid>
      <pubDate>Tue, 22 Sep 2020 00:36:50 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/images/javadoc-만들고-github에서-보기20200922/preview.jpg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;코드따로 문서따로… 하지 않고 한번에 해결하기&lt;/li&gt;
&lt;li&gt;또 만든 javadoc을 깃허브에서 보여주는법!&lt;/li</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/javadoc-만들고-github에서-보기20200922/preview.jpg" ><ul><li>코드따로 문서따로… 하지 않고 한번에 해결하기</li><li>또 만든 javadoc을 깃허브에서 보여주는법!</li></ul><h2 id="따라하기"><a href="#따라하기" class="headerlink" title="따라하기"></a>따라하기</h2><h3 id="준비물"><a href="#준비물" class="headerlink" title="준비물"></a>준비물</h3><ul><li>이클립스</li></ul><h3 id="시작"><a href="#시작" class="headerlink" title="시작"></a>시작</h3><div class="video-container"><iframe src="https://www.youtube.com/embed/5yIoA6JdS18" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>나는 이 영상보고 따라했다.</li><li>코드는 아무렇게나, 자바독 주석도 아무렇게나 원하는 대로 만들면된다. 자바독 주석으로!</li></ul><figure class="highlight java"><figcaption><span>App.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> application;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Date: 2020-09-22</span></span><br><span class="line"><span class="comment"> * This is a simple application for adding two integers.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> chin_</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * int value for first number</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> a;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * int value for second number</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This method adds x and y and returns the int result.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> x first int value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> y second int value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> returning int value result from x + y</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**The main method of this application</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args array of string arguments.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>/** */</code> 이런식으로 만든다.</li><li>설명하고 싶은 변수나 메소드 선언부에 커서를 두고 alt + shift + j 하면 자바독 주석이 생긴다.</li><li>열심히 설명 적고..</li></ul><img src="/images/javadoc-만들고-github에서-보기20200922/1.jpg" ><ul><li>자바독을 생성한다.</li></ul><br><img src="/images/javadoc-만들고-github에서-보기20200922/2.jpg" ><ul><li>자신의 jdk 폴더로 가서 javadoc.exe를 지정해주고, (이미 세팅되어 있으면 패스)</li><li>javadoc문서가 나올 경로를 지정한다.</li><li>기본값으로 <code>(프로젝트명)\doc</code> 이렇게 되어있을 텐데, <code>(프로젝트명)\docs</code>로 수정한다.</li><li><code>docs</code>가 깃허브 페이지를 통해 문서를 보여줄때 경로 규격이다.</li><li>또 <code>docs</code>폴더는 프로젝트 루트에 존재해야한다.</li><li>Finish를 눌러 완료하면 javadoc 문서가 완성된다.</li></ul><img src="/images/javadoc-만들고-github에서-보기20200922/3.jpg" ><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><ul><li>이제 git init 한다</li></ul><figure class="highlight plain"><figcaption><span>.gitignore</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># Created by https:&#x2F;&#x2F;www.toptal.com&#x2F;developers&#x2F;gitignore&#x2F;api&#x2F;java</span><br><span class="line"># Edit at https:&#x2F;&#x2F;www.toptal.com&#x2F;developers&#x2F;gitignore?templates&#x3D;java</span><br><span class="line"></span><br><span class="line">### Java ###</span><br><span class="line"># Compiled class file</span><br><span class="line">*.class</span><br><span class="line"></span><br><span class="line"># Log file</span><br><span class="line">*.log</span><br><span class="line"></span><br><span class="line"># BlueJ files</span><br><span class="line">*.ctxt</span><br><span class="line"></span><br><span class="line"># Mobile Tools for Java (J2ME)</span><br><span class="line">.mtj.tmp&#x2F;</span><br><span class="line"></span><br><span class="line"># Package Files #</span><br><span class="line">*.jar</span><br><span class="line">*.war</span><br><span class="line">*.nar</span><br><span class="line">*.ear</span><br><span class="line">*.zip</span><br><span class="line">*.tar.gz</span><br><span class="line">*.rar</span><br><span class="line"></span><br><span class="line"># virtual machine crash logs, see http:&#x2F;&#x2F;www.java.com&#x2F;en&#x2F;download&#x2F;help&#x2F;error_hotspot.xml</span><br><span class="line">hs_err_pid*</span><br><span class="line"></span><br><span class="line"># End of https:&#x2F;&#x2F;www.toptal.com&#x2F;developers&#x2F;gitignore&#x2F;api&#x2F;java</span><br></pre></td></tr></table></figure><ul><li><p>위 내용으로 .gitignore 파일을 추가한다. java 프로젝트용 .gitignore파일이다.</p></li><li><p><a href="https://www.toptal.com/developers/gitignore">쉽게 .gitignore파일 만드는 곳</a></p></li><li><p>이제 깃허브 저장소로 올린다.</p></li><li><p>브라우저로 방금 만든 저장소 세팅에 들어간다.</p></li></ul><img src="/images/javadoc-만들고-github에서-보기20200922/4.jpg" ><ul><li>브랜치를 마스터로 선택,</li><li>/docs 선택</li><li>save 버튼 클릭</li></ul><img src="/images/javadoc-만들고-github에서-보기20200922/preview.jpg" ><ul><li>이렇게 설정하면 잠시후 깃허브에서 javadoc으로 만든 내 프로젝트 문서를 볼 수 있게된다.</li><li>너무 빨리 접속하면 <code>GitHub Pages is temporarily down for maintenance.</code> 메시지를 볼 수 있다.</li></ul><p><a href="https://github.com/chinsun9/JavaDoc-Practice">여기까지 프로젝트 파일</a></p>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/java/">java</category>
      
      
      <category domain="https://chinsun9.github.io/tags/java/">java</category>
      
      <category domain="https://chinsun9.github.io/tags/javadoc/">javadoc</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/22/javadoc-%EB%A7%8C%EB%93%A4%EA%B3%A0-github%EC%97%90%EC%84%9C-%EB%B3%B4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>RDS 비공개하는 방법</title>
      <link>https://chinsun9.github.io/2020/09/22/RDS-%EB%B9%84%EA%B3%B5%EA%B0%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</link>
      <guid>https://chinsun9.github.io/2020/09/22/RDS-%EB%B9%84%EA%B3%B5%EA%B0%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid>
      <pubDate>Tue, 22 Sep 2020 00:11:34 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/images/RDS-비공개하는-방법20200922/preview.jpg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;내 RDS 지키기&lt;/li&gt;
&lt;li&gt;내가 지정한 IP에서만 접근가능하도록 설정하자&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;따라하기&quot;&gt;&lt;a hre</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/RDS-비공개하는-방법20200922/preview.jpg" ><ul><li>내 RDS 지키기</li><li>내가 지정한 IP에서만 접근가능하도록 설정하자</li></ul><h2 id="따라하기"><a href="#따라하기" class="headerlink" title="따라하기"></a>따라하기</h2><img src="/images/RDS-비공개하는-방법20200922/1.jpg" ><ul><li>설정하고싶은 RDS 화면에 들어간다</li><li>연결 &amp; 보안 &gt; 보안 &gt; vpc 보안 그룹</li><li>을 눌러서 현재 rds에 적용되어 있는 보안그룹 설정으로 들어간다.</li></ul><img src="/images/RDS-비공개하는-방법20200922/2.jpg" ><ul><li>인바운드 규칙 &gt; 인바운드 규칙 편집으로 들어간다</li></ul><img src="/images/RDS-비공개하는-방법20200922/3.jpg" ><ul><li>아마 이런식으로 위치무관으로 되어있을 수 있는데</li><li>이 규칙으로 인해 모든 컴퓨터에서 접근가능하게 해준다.</li><li>이 규칙을 이제 내 컴퓨터에서만 접근가능하도록 고쳐보자.</li></ul><img src="/images/RDS-비공개하는-방법20200922/4.jpg" ><ul><li><ol><li><code>MySQL/Aurora</code> 를 선택해서 포트를 제한한다</li></ol></li><li><ol start="2"><li>소스 유형에 <code>내 IP</code> 를 선택한다</li></ol></li><li><ol start="3"><li>내 공인 IP 주소로 바뀌었는지 확인한다.</li></ol></li><li>이렇게하면 내 IP에서 MySQL 접근 포트인 3306 포트로만 접근을 허용하는 세팅이 된 것이다.</li></ul><img src="/images/RDS-비공개하는-방법20200922/5.jpg" ><ul><li>규칙 저장을 눌러 적용시켜준다.</li><li>끝!</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/rds/">rds</category>
      
      <category domain="https://chinsun9.github.io/tags/sg/">sg</category>
      
      <category domain="https://chinsun9.github.io/tags/security-group/">security group</category>
      
      <category domain="https://chinsun9.github.io/tags/vpc/">vpc</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/22/RDS-%EB%B9%84%EA%B3%B5%EA%B0%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>java 카테고리 생성</title>
      <link>https://chinsun9.github.io/2020/09/21/java-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC-%EC%83%9D%EC%84%B1/</link>
      <guid>https://chinsun9.github.io/2020/09/21/java-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC-%EC%83%9D%EC%84%B1/</guid>
      <pubDate>Mon, 21 Sep 2020 09:04:59 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;java 공부한 내용 올리기&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>java 공부한 내용 올리기</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/java/">java</category>
      
      
      <category domain="https://chinsun9.github.io/tags/category/">category</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/java-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC-%EC%83%9D%EC%84%B1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>sam template.yaml 익히는 빠른 방법</title>
      <link>https://chinsun9.github.io/2020/09/21/sam-template-yaml-%EC%9D%B5%ED%9E%88%EB%8A%94-%EB%B9%A0%EB%A5%B8-%EB%B0%A9%EB%B2%95/</link>
      <guid>https://chinsun9.github.io/2020/09/21/sam-template-yaml-%EC%9D%B5%ED%9E%88%EB%8A%94-%EB%B9%A0%EB%A5%B8-%EB%B0%A9%EB%B2%95/</guid>
      <pubDate>Mon, 21 Sep 2020 08:45:39 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/images/sam-template-yaml-익히는-빠른-방법20200921/preview.jpg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;브라우저에서 aws console 통해 람다 수정해보고&lt;/li&gt;
&lt;li&gt;&lt;code&gt;작업 &amp;gt; 내보내기 &amp;g</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/sam-template-yaml-익히는-빠른-방법20200921/preview.jpg" ><ul><li>브라우저에서 aws console 통해 람다 수정해보고</li><li><code>작업 &gt; 내보내기 &gt; aws sam 파일 다운로드</code> 하기</li><li>여기서 <code>aws sam 파일</code>은 <code>template.yaml</code>이다.</li></ul><h2 id="익히는-법"><a href="#익히는-법" class="headerlink" title="익히는 법"></a>익히는 법</h2><ul><li>처음에 할때는 gui만큼 쉬운게 없다.</li><li>sam을 시작하면 yaml을 어떻게 건드려야할지 감이 안올 것이다.</li><li>그럴때는 역으로 브라우저에서 내가 설정할 권한들을 설정하고 저장한다.</li></ul><img src="/images/sam-template-yaml-익히는-빠른-방법20200921/1.jpg" ><ul><li>그리고 <code>작업 &gt; 내보내기 &gt; aws sam 파일 다운로드</code>를 통해 어떻게 yaml이 수정되었는지 확인해보면 된다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/lambda/">lambda</category>
      
      <category domain="https://chinsun9.github.io/tags/sam/">sam</category>
      
      <category domain="https://chinsun9.github.io/tags/template-yaml/">template.yaml</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/sam-template-yaml-%EC%9D%B5%ED%9E%88%EB%8A%94-%EB%B9%A0%EB%A5%B8-%EB%B0%A9%EB%B2%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>cmd 폴더 생성</title>
      <link>https://chinsun9.github.io/2020/09/21/cmd-%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1/</link>
      <guid>https://chinsun9.github.io/2020/09/21/cmd-%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1/</guid>
      <pubDate>Mon, 21 Sep 2020 06:56:05 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;figcaption&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> new-folder</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> a\b\c</span><br></pre></td></tr></table></figure><ul><li>mkdir [폴더명]</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/cmd/">cmd</category>
      
      
      <category domain="https://chinsun9.github.io/tags/cmd/">cmd</category>
      
      <category domain="https://chinsun9.github.io/tags/mkdir/">mkdir</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/cmd-%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>sam에서 노드 모듈을 레이어로 빼기</title>
      <link>https://chinsun9.github.io/2020/09/21/sam%EC%97%90%EC%84%9C-%EB%85%B8%EB%93%9C-%EB%AA%A8%EB%93%88%EC%9D%84-%EB%A0%88%EC%9D%B4%EC%96%B4%EB%A1%9C-%EB%B9%BC%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/21/sam%EC%97%90%EC%84%9C-%EB%85%B8%EB%93%9C-%EB%AA%A8%EB%93%88%EC%9D%84-%EB%A0%88%EC%9D%B4%EC%96%B4%EB%A1%9C-%EB%B9%BC%EA%B8%B0/</guid>
      <pubDate>Mon, 21 Sep 2020 04:55:42 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/images/sam에서-노드-모듈을-레이어로-빼기20200921/preview.jpg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;람다는 가벼운게 최고다.&lt;/li&gt;
&lt;li&gt;노드 모듈은 따로 빼버리기!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Lambda-Lay</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/sam에서-노드-모듈을-레이어로-빼기20200921/preview.jpg" ><ul><li>람다는 가벼운게 최고다.</li><li>노드 모듈은 따로 빼버리기!</li></ul><h2 id="Lambda-Layer"><a href="#Lambda-Layer" class="headerlink" title="Lambda Layer"></a>Lambda Layer</h2><ul><li>nodejs로 치면 node_modules이다.</li><li>람다 함수에서 노드 모듈같은 종속성을 람다 함수 밖에으로 뺄 수 있음</li><li>왜 쓰냐?<ul><li><ol><li>공통적으로 쓰이는 패키지들을 묶어서 관리할 수 있음.</li></ol></li><li><ol start="2"><li>람다함수가 커지면 브라우저로 aws console에서 코드 조회를 못함.</li></ol></li></ul></li></ul><h2 id="따라하기"><a href="#따라하기" class="headerlink" title="따라하기"></a>따라하기</h2><h3 id="외부-모듈을-사용해보기"><a href="#외부-모듈을-사용해보기" class="headerlink" title="외부 모듈을 사용해보기"></a>외부 모듈을 사용해보기</h3><ul><li>sam template.yaml에서 layer설정할 수 있다.</li><li>지난번에 만든 <a href="https://chinsun9.github.io/2020/09/21/sam-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/">hello world</a>에서 이어서 진행해 보겠다.</li></ul><figure class="highlight js"><figcaption><span>hello-world/app.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// const axios = require(&#x27;axios&#x27;)</span></span><br><span class="line"><span class="comment">// const url = &#x27;http://checkip.amazonaws.com/&#x27;;</span></span><br><span class="line"><span class="keyword">let</span> response;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>hello-world/app.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">&#x27;axios&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;http://checkip.amazonaws.com/&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> response;</span><br></pre></td></tr></table></figure><ul><li>맨 윗 2줄 주석 해제한다.</li></ul><figure class="highlight js"><figcaption><span>hello-world/app.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.lambdaHandler = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// const ret = await axios(url);</span></span><br><span class="line">    response = &#123;</span><br><span class="line">      statusCode: <span class="number">200</span>,</span><br><span class="line">      body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        message: <span class="string">&#x27;hello world&#x27;</span>,</span><br><span class="line">        <span class="comment">// location: ret.data.trim(),</span></span><br><span class="line">      &#125;),</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    <span class="keyword">return</span> err;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>hello-world/app.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.lambdaHandler = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> ret = <span class="keyword">await</span> axios(url);</span><br><span class="line">    response = &#123;</span><br><span class="line">      statusCode: <span class="number">200</span>,</span><br><span class="line">      body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        message: <span class="string">&#x27;hello world&#x27;</span>,</span><br><span class="line">        location: ret.data.trim(),</span><br><span class="line">      &#125;),</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    <span class="keyword">return</span> err;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>여기도 2곳 주석을 해제한다.</li></ul><br><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;hello_world&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;hello world sample for NodeJS&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;app.js&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;repository&quot;</span>: <span class="string">&quot;https://github.com/awslabs/aws-sam-cli/tree/develop/samcli/local/init/templates/cookiecutter-aws-sam-hello-nodejs&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;SAM CLI&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;MIT&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;axios&quot;</span>: <span class="string">&quot;^0.18.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;mocha tests/unit/&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;chai&quot;</span>: <span class="string">&quot;^4.2.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;mocha&quot;</span>: <span class="string">&quot;^6.1.4&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>필요없는 devDependencies 를 없앤다.</li><li>test 할때 필요한 패키지인데, 우리는 안쓸거다.</li></ul><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;hello_world&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;hello world sample for NodeJS&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;app.js&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;repository&quot;</span>: <span class="string">&quot;https://github.com/awslabs/aws-sam-cli/tree/develop/samcli/local/init/templates/cookiecutter-aws-sam-hello-nodejs&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;SAM CLI&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;license&quot;</span>: <span class="string">&quot;MIT&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;axios&quot;</span>: <span class="string">&quot;^0.18.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;mocha tests/unit/&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>없애면 이런 모양이 된다.</li></ul><br><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hello-world</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><ul><li>app.js가 있는 hello-world 디렉토리로 와서 종속성을 설치한다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .aws-sam&#x2F;</span><br><span class="line">├── events</span><br><span class="line">│   └── event.json</span><br><span class="line">├── hello-world</span><br><span class="line">│   ├── node_modules&#x2F;</span><br><span class="line">│   ├── tests&#x2F;</span><br><span class="line">│   ├── .npmignore</span><br><span class="line">│   ├── app.js</span><br><span class="line">│   └── package.json</span><br><span class="line">├── .gitignore</span><br><span class="line">├── README.md</span><br><span class="line">└── template.yaml</span><br></pre></td></tr></table></figure><ul><li>node_modules 폴더가 생기면서 현재 디렉터리 구조는 이렇게 된다.</li><li>hello-world/tests 폴더를 삭제한다. 우리는 안쓴다.</li><li>events 폴더를 삭제한다. 우리는 안쓴다.</li><li>.aws-sam 폴더를 삭제한다. 이 폴더가 있으면 local start-api 했을때 .aws-sam를 우선 참조하기때문에 소스 코드에 변경사항이 발생해도 반영되지 않는다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── hello-world</span><br><span class="line">│   ├── node_modules&#x2F;</span><br><span class="line">│   ├── .npmignore</span><br><span class="line">│   ├── app.js</span><br><span class="line">│   └── package.json</span><br><span class="line">├── .gitignore</span><br><span class="line">├── README.md</span><br><span class="line">└── template.yaml</span><br></pre></td></tr></table></figure><ul><li>현재까지 디렉터리 구조는 이렇게 된다.</li></ul><br><ul><li>이제 로컬에서 테스트 해보자</li><li>참고 ; <a href="https://chinsun9.github.io/2020/09/21/%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-sam-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EA%B8%B0/">로컬에서 sam 테스트하기</a></li></ul><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">sam local <span class="built_in">start</span>-api --skip-pull-image</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><figcaption><span>cmd log</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">tmp</span>\<span class="title">hello</span>-<span class="title">world</span>\<span class="title">hello</span>-<span class="title">world</span>&gt;<span class="title">cd</span> ..</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">tmp</span>\<span class="title">hello</span>-<span class="title">world</span>&gt;<span class="title">sam</span> <span class="title">local</span> <span class="title">start</span>-<span class="title">api</span> --<span class="title">skip</span>-<span class="title">pull</span>-<span class="title">image</span></span></span><br><span class="line"><span class="function"><span class="title">Mounting</span> <span class="title">HelloWorldFunction</span> <span class="title">at</span> <span class="title">http</span>://127.0.0.1:3000/<span class="title">hello</span> [<span class="title">GET</span>]</span></span><br><span class="line"><span class="function"><span class="title">You</span> <span class="title">can</span> <span class="title">now</span> <span class="title">browse</span> <span class="title">to</span> <span class="title">the</span> <span class="title">above</span> <span class="title">endpoints</span> <span class="title">to</span> <span class="title">invoke</span> <span class="title">your</span> <span class="title">functions</span>. <span class="title">You</span> <span class="title">do</span> <span class="title">not</span> <span class="title">need</span> <span class="title">to</span> <span class="title">restart</span>/<span class="title">reload</span> <span class="title">SAM</span> <span class="title">CLI</span> <span class="title">while</span> <span class="title">working</span> <span class="title">on</span> <span class="title">your</span> <span class="title">functions</span>, <span class="title">changes</span> <span class="title">will</span> <span class="title">be</span> <span class="title">reflected</span> <span class="title">instantly</span>/<span class="title">automatically</span>. <span class="title">You</span> <span class="title">only</span> <span class="title">need</span> <span class="title">to</span> <span class="title">restart</span> <span class="title">SAM</span></span></span><br><span class="line"><span class="function"><span class="title">CLI</span> <span class="title">if</span> <span class="title">you</span> <span class="title">update</span> <span class="title">your</span> <span class="title">AWS</span> <span class="title">SAM</span> <span class="title">template</span></span></span><br><span class="line"><span class="function">2020-09-21 14:49:47  * <span class="title">Running</span> <span class="title">on</span> <span class="title">http</span>://127.0.0.1:3000/ (<span class="title">Press</span> <span class="title">CTRL</span>+<span class="title">C</span> <span class="title">to</span> <span class="title">quit</span>)</span></span><br></pre></td></tr></table></figure><ul><li><a href="http://127.0.0.1:3000/hello">http://127.0.0.1:3000/hello</a> 에 접속한다.</li></ul><img src="/images/sam에서-노드-모듈을-레이어로-빼기20200921/2.jpg" ><ul><li><p>이렇게 location에 자신의 공인 IP가 뜨면 성공이다.</p></li><li><p>주석 해제한 소스 코드는</p></li><li><p>axios라는 모듈로 <a href="http://checkip.amazonaws.com/">http://checkip.amazonaws.com/</a> 에서 공인 ip를 얻어와 response 객체에 location이라는 이름으로 담아서 반환한 것이다.</p></li><li><p><a href="http://checkip.amazonaws.com/">http://checkip.amazonaws.com/</a> 에 접속해 보면 알 수 있듯이 자신의 공인 ip를 알려주는 api다.</p></li><li><p>여기까지 axios라는 모듈을 이용해봤다.</p></li><li><p>이제 <code>sam build &amp; sam deploy</code> 를 통해 aws에 올려보자</p></li></ul><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sam build &amp; sam deploy</span><br></pre></td></tr></table></figure><ul><li>배포가 완료되면 엔드 포인트를 통해서 aws에 올린 람다를 실행해보자.</li></ul><img src="/images/sam에서-노드-모듈을-레이어로-빼기20200921/3.jpg" ><ul><li>그러면 이상한 아이피가 나온다.</li><li>이게 aws 컴퓨터중에서 현재 람다가 실행된 컴퓨터의 공인 ip 주소이다.</li><li>여기까지 잘 작동되는 것이 확인 되었다.</li></ul><br><h3 id="외부-모듈을-layer로-빼기"><a href="#외부-모듈을-layer로-빼기" class="headerlink" title="외부 모듈을 layer로 빼기"></a>외부 모듈을 layer로 빼기</h3><ul><li>이제 브라우저를 열고 aws console &gt; lambda &gt; HelloWorldFunction 으로 가서 함수가 어떻게 생겻는지 확인한다.</li></ul><img src="/images/sam에서-노드-모듈을-레이어로-빼기20200921/4.jpg" ><ul><li>함수 안에 노드 모듈이 포함되어 있는 것을 확인할 수 있다.</li><li>이제 이 글의 핵심인 node_modules 폴더를 layer로 빼볼것이다.</li></ul><img src="/images/sam에서-노드-모듈을-레이어로-빼기20200921/preview.jpg" ><ul><li>레이어를 만드는 방법이 여러가지가 있지만 나는 내 방식을 설명해 보겠다.</li><li>나는 cmd명령을 사용할 것이다.</li></ul><br><img src="/images/sam에서-노드-모듈을-레이어로-빼기20200921/5.jpg" ><ul><li>template.yaml에서 빨간 네모 부분을 추가한다.</li></ul><figure class="highlight yaml"><figcaption><span>template.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AWSTemplateFormatVersion:</span> <span class="string">&#x27;2010-09-09&#x27;</span></span><br><span class="line"><span class="attr">Transform:</span> <span class="string">AWS::Serverless-2016-10-31</span></span><br><span class="line"><span class="attr">Description:</span> <span class="string">&gt;</span></span><br><span class="line">  <span class="string">hello-world</span></span><br><span class="line"></span><br><span class="line">  <span class="string">Sample</span> <span class="string">SAM</span> <span class="string">Template</span> <span class="string">for</span> <span class="string">hello-world</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst</span></span><br><span class="line"><span class="attr">Globals:</span></span><br><span class="line">  <span class="attr">Function:</span></span><br><span class="line">    <span class="attr">Timeout:</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Resources:</span></span><br><span class="line">  <span class="attr">HelloWorldFunction:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::Function</span> <span class="comment"># More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">Layers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="type">!Ref</span> <span class="string">DependencyLayer</span></span><br><span class="line">      <span class="attr">CodeUri:</span> <span class="string">hello-world/</span></span><br><span class="line">      <span class="attr">Handler:</span> <span class="string">app.lambdaHandler</span></span><br><span class="line">      <span class="attr">Runtime:</span> <span class="string">nodejs12.x</span></span><br><span class="line">      <span class="attr">Events:</span></span><br><span class="line">        <span class="attr">HelloWorld:</span></span><br><span class="line">          <span class="attr">Type:</span> <span class="string">Api</span> <span class="comment"># More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api</span></span><br><span class="line">          <span class="attr">Properties:</span></span><br><span class="line">            <span class="attr">Path:</span> <span class="string">/hello</span></span><br><span class="line">            <span class="attr">Method:</span> <span class="string">get</span></span><br><span class="line">  <span class="attr">DependencyLayer:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::LayerVersion</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">LayerName:</span> <span class="string">HelloWorldFunction-layer</span></span><br><span class="line">      <span class="attr">Description:</span> <span class="string">Dependencies</span> <span class="string">for</span> <span class="string">HelloWorldFunction</span></span><br><span class="line">      <span class="attr">ContentUri:</span> <span class="string">opt/</span></span><br><span class="line">      <span class="attr">CompatibleRuntimes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">nodejs12.x</span></span><br><span class="line">      <span class="attr">RetentionPolicy:</span> <span class="string">Retain</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Outputs:</span></span><br><span class="line">  <span class="comment"># ServerlessRestApi is an implicit API created out of Events key under Serverless::Function</span></span><br><span class="line">  <span class="comment"># Find out more about other implicit resources you can reference within SAM</span></span><br><span class="line">  <span class="comment"># https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api</span></span><br><span class="line">  <span class="attr">HelloWorldApi:</span></span><br><span class="line">    <span class="attr">Description:</span> <span class="string">&#x27;API Gateway endpoint URL for Prod stage for Hello World function&#x27;</span></span><br><span class="line">    <span class="attr">Value:</span> <span class="type">!Sub</span> <span class="string">&#x27;https://$&#123;ServerlessRestApi&#125;.execute-api.$&#123;AWS::Region&#125;.amazonaws.com/Prod/hello/&#x27;</span></span><br><span class="line">  <span class="attr">HelloWorldFunction:</span></span><br><span class="line">    <span class="attr">Description:</span> <span class="string">&#x27;Hello World Lambda Function ARN&#x27;</span></span><br><span class="line">    <span class="attr">Value:</span> <span class="type">!GetAtt</span> <span class="string">HelloWorldFunction.Arn</span></span><br><span class="line">  <span class="attr">HelloWorldFunctionIamRole:</span></span><br><span class="line">    <span class="attr">Description:</span> <span class="string">&#x27;Implicit IAM Role created for Hello World function&#x27;</span></span><br><span class="line">    <span class="attr">Value:</span> <span class="type">!GetAtt</span> <span class="string">HelloWorldFunctionRole.Arn</span></span><br></pre></td></tr></table></figure><ul><li>최종코드는 이러하다.</li><li>눈여겨 봐야할 것은</li><li>Resources아래에 <code>DependencyLayer</code>라는 이름으로 layer정의하고</li><li><code>ContentUri: opt/</code> 를 지정한다. 이 opt 디렉터리에 우리가 layer로 따로뺄 패키지가 들어가게 될것이다.</li><li>이제 배치파일을 2개 만들거다.</li></ul><figure class="highlight bat"><figcaption><span>layer.bat</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> layer process</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> functionDir = HelloWorldFunction</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> y|<span class="built_in">rmdir</span> /s opt\nodejs</span><br><span class="line"><span class="built_in">mkdir</span> opt\nodejs</span><br><span class="line"><span class="built_in">move</span> .aws-sam\build\<span class="variable">%functionDir%</span>\node_modules opt\nodejs</span><br></pre></td></tr></table></figure><ul><li>layer.bat을 sam project 최상위에 만들고 내용은 위와같이 한다.</li><li>set functionDir=<code>HelloWorldFunction</code> 에서는 template.yaml에서 지정한 함수명을 적어주면 된다. template.yaml을 안거드렸으면 <code>HelloWorldFunction</code>이니까 그대로 사용하면 된다.</li></ul><figure class="highlight yaml"><figcaption><span>template.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Resources:</span></span><br><span class="line">  <span class="attr">HelloWorldFunction:</span>   <span class="string">//</span> <span class="string">&lt;-</span> <span class="string">이</span> <span class="string">이름과</span> <span class="string">매칭되도록</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::Function</span></span><br></pre></td></tr></table></figure><figure class="highlight bat"><figcaption><span>deploy.bat</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> deploy</span><br><span class="line"></span><br><span class="line">sam build &amp; layer.bat &amp; sam deploy</span><br></pre></td></tr></table></figure><ul><li>또 deploy.bat을 sam project 최상위에 만들고 내용은 위와같이 한다.</li><li>build하고 방금 만든 layer.bat으로 배포될 빌드 디렉터리에서 node_modules을 opt 디렉터리로 옮기고</li><li>deploy한다.</li></ul><br><ul><li>결과는 이렇게 된다.</li></ul><img src="/images/sam에서-노드-모듈을-레이어로-빼기20200921/6.jpg" ><ul><li>1.2. 디렉터리 구조를 봐보면 node_modules 폴더가 없다</li><li>3.4. yaml에서 지정한 layer 등록되어 있는 것을 확인할 수 있다.</li><li>당연하게도 이 함수는 잘 동작한다.</li><li>여기까지 batch파일을 활용해서 노드모듈을 레이어로 빼는 방법을 알아보았다.</li><li><a href="https://github.com/chinsun9/sam-tutorial-hello-world/tree/7b066fa6257585eaf170218f891ea98d1a65e459">여기까지 프로젝트 파일</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/lambda/">lambda</category>
      
      <category domain="https://chinsun9.github.io/tags/layer/">layer</category>
      
      <category domain="https://chinsun9.github.io/tags/sam/">sam</category>
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/sam%EC%97%90%EC%84%9C-%EB%85%B8%EB%93%9C-%EB%AA%A8%EB%93%88%EC%9D%84-%EB%A0%88%EC%9D%B4%EC%96%B4%EB%A1%9C-%EB%B9%BC%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>cmd 이전 내용 지우기 cls</title>
      <link>https://chinsun9.github.io/2020/09/21/cmd-%EC%9D%B4%EC%A0%84-%EB%82%B4%EC%9A%A9-%EC%A7%80%EC%9A%B0%EA%B8%B0-cls/</link>
      <guid>https://chinsun9.github.io/2020/09/21/cmd-%EC%9D%B4%EC%A0%84-%EB%82%B4%EC%9A%A9-%EC%A7%80%EC%9A%B0%EA%B8%B0-cls/</guid>
      <pubDate>Mon, 21 Sep 2020 04:48:09 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;figcaption&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/p</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cls</span></span><br></pre></td></tr></table></figure><ul><li>linux terminal는 <code>clear</code></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/cmd/">cmd</category>
      
      
      <category domain="https://chinsun9.github.io/tags/cmd/">cmd</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/cmd-%EC%9D%B4%EC%A0%84-%EB%82%B4%EC%9A%A9-%EC%A7%80%EC%9A%B0%EA%B8%B0-cls/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>로컬에서 sam 테스트하기</title>
      <link>https://chinsun9.github.io/2020/09/21/%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-sam-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/21/%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-sam-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 21 Sep 2020 04:27:41 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/images/로컬에서-sam-테스트하기20200921/preview.jpg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;이제 테스트할 때 build, deploy 기다리기… 할 필요가 없다!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;전제조건&quot;&gt;&lt;a href=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/로컬에서-sam-테스트하기20200921/preview.jpg" ><ul><li>이제 테스트할 때 build, deploy 기다리기… 할 필요가 없다!</li></ul><h2 id="전제조건"><a href="#전제조건" class="headerlink" title="전제조건"></a>전제조건</h2><ul><li>docker 설치</li><li>참고 ; <a href="https://chinsun9.github.io/2020/09/21/windows10-home%EC%97%90%EC%84%9C-docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/">windows10 home에서 docker 설치하기</a></li></ul><br><ul><li>지난번에 만든 <a href="https://chinsun9.github.io/2020/09/21/sam-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/">hello-world sam project</a>에서 테스트해보자</li></ul><h2 id="sam-local-start-api"><a href="#sam-local-start-api" class="headerlink" title="sam local start-api"></a><a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-local-start-api.html">sam local start-api</a></h2><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sam local <span class="built_in">start</span>-api --skip-pull-image</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><figcaption><span>cmd log</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">tmp</span>\<span class="title">hello</span>-<span class="title">world</span>&gt;<span class="title">sam</span> <span class="title">local</span> <span class="title">start</span>-<span class="title">api</span> --<span class="title">skip</span>-<span class="title">pull</span>-<span class="title">image</span></span></span><br><span class="line"><span class="function"><span class="title">Mounting</span> <span class="title">HelloWorldFunction</span> <span class="title">at</span> <span class="title">http</span>://127.0.0.1:3000/<span class="title">hello</span> [<span class="title">GET</span>]</span></span><br><span class="line"><span class="function"><span class="title">You</span> <span class="title">can</span> <span class="title">now</span> <span class="title">browse</span> <span class="title">to</span> <span class="title">the</span> <span class="title">above</span> <span class="title">endpoints</span> <span class="title">to</span> <span class="title">invoke</span> <span class="title">your</span> <span class="title">functions</span>. <span class="title">You</span> <span class="title">do</span> <span class="title">not</span> <span class="title">need</span> <span class="title">to</span> <span class="title">restart</span>/<span class="title">reload</span> <span class="title">SAM</span> <span class="title">CLI</span> <span class="title">while</span> <span class="title">working</span> <span class="title">on</span> <span class="title">your</span> <span class="title">functions</span>, <span class="title">changes</span> <span class="title">will</span> <span class="title">be</span> <span class="title">reflected</span> <span class="title">instantly</span>/<span class="title">automatically</span>. <span class="title">You</span> <span class="title">only</span> <span class="title">need</span> <span class="title">to</span> <span class="title">restart</span> <span class="title">SAM</span></span></span><br><span class="line"><span class="function"><span class="title">CLI</span> <span class="title">if</span> <span class="title">you</span> <span class="title">update</span> <span class="title">your</span> <span class="title">AWS</span> <span class="title">SAM</span> <span class="title">template</span></span></span><br><span class="line"><span class="function">2020-09-21 13:40:36  * <span class="title">Running</span> <span class="title">on</span> <span class="title">http</span>://127.0.0.1:3000/ (<span class="title">Press</span> <span class="title">CTRL</span>+<span class="title">C</span> <span class="title">to</span> <span class="title">quit</span>)</span></span><br><span class="line"><span class="function">2020-09-21 13:40:41 127.0.0.1 - - [21/<span class="title">Sep</span>/2020 13:40:41] &quot;<span class="title">GET</span> / <span class="title">HTTP</span>/1.1&quot; 403 -</span></span><br><span class="line"><span class="function">2020-09-21 13:40:41 127.0.0.1 - - [21/<span class="title">Sep</span>/2020 13:40:41] &quot;<span class="title">GET</span> /<span class="title">favicon.ico</span> <span class="title">HTTP</span>/1.1&quot; 403 -</span></span><br><span class="line"><span class="function"><span class="title">Invoking</span> <span class="title">app.lambdaHandler</span> (<span class="title">nodejs12.x</span>)</span></span><br><span class="line"><span class="function"><span class="title">Requested</span> <span class="title">to</span> <span class="title">skip</span> <span class="title">pulling</span> <span class="title">images</span> ...</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Mounting</span> <span class="title">C</span>:\<span class="title">tmp</span>\<span class="title">hello</span>-<span class="title">world</span>\.<span class="title">aws</span>-<span class="title">sam</span>\<span class="title">build</span>\<span class="title">HelloWorldFunction</span> <span class="title">as</span> /<span class="title">var</span>/<span class="title">task:ro</span>,<span class="title">delegated</span> <span class="title">inside</span> <span class="title">runtime</span> <span class="title">container</span></span></span><br><span class="line"><span class="function"><span class="title">START</span> <span class="title">RequestId</span>: 00<span class="title">b5b190</span>-1<span class="title">c8d</span>-184<span class="title">f</span>-5<span class="title">ab5</span>-<span class="title">c0e0764041d3</span> <span class="title">Version</span>: $<span class="title">LATEST</span></span></span><br><span class="line"><span class="function"><span class="title">END</span> <span class="title">RequestId</span>: 00<span class="title">b5b190</span>-1<span class="title">c8d</span>-184<span class="title">f</span>-5<span class="title">ab5</span>-<span class="title">c0e0764041d3</span></span></span><br><span class="line"><span class="function"><span class="title">REPORT</span> <span class="title">RequestId</span>: 00<span class="title">b5b190</span>-1<span class="title">c8d</span>-184<span class="title">f</span>-5<span class="title">ab5</span>-<span class="title">c0e0764041d3</span>  <span class="title">Init</span> <span class="title">Duration</span>: 438.88 <span class="title">ms</span></span></span><br><span class="line"><span class="function"><span class="title">Duration</span>: 4.53 <span class="title">ms</span>        <span class="title">Billed</span> <span class="title">Duration</span>: 100 <span class="title">ms</span> <span class="title">Memory</span> <span class="title">Size</span>: 128 <span class="title">MB</span>     <span class="title">Max</span> <span class="title">Memory</span> <span class="title">Used</span>: 44 <span class="title">MB</span></span></span><br><span class="line"><span class="function"><span class="title">No</span> <span class="title">Content</span>-<span class="title">Type</span> <span class="title">given</span>. <span class="title">Defaulting</span> <span class="title">to</span> &#x27;<span class="title">application</span>/<span class="title">json</span>&#x27;.</span></span><br><span class="line"><span class="function">2020-09-21 13:40:48 127.0.0.1 - - [21/<span class="title">Sep</span>/2020 13:40:48] &quot;<span class="title">GET</span> /<span class="title">hello</span> <span class="title">HTTP</span>/1.1&quot; 200 -</span></span><br><span class="line"><span class="function">2020-09-21 13:40:48 127.0.0.1 - - [21/<span class="title">Sep</span>/2020 13:40:48] &quot;<span class="title">GET</span> /<span class="title">favicon.ico</span> <span class="title">HTTP</span>/1.1&quot; 403 -</span></span><br></pre></td></tr></table></figure><ul><li>나는 이렇게 명령을 쓴다.</li><li>나는 보통 매 실행마다 3-4초 정도 걸린다.</li><li>build, deploy 하면서 테스트할때보다 획기적으로 빠르게 로컬에서 테스트 해볼 수 있다.</li><li><code>--skip-pull-image</code>옵션을 주는 이유는 매 실행마다 이미지를 받아오는 과정이 있는게 그걸 스킵하면 2초정도 빨라진다.</li><li>변경 사항은 자동으로 반영된다.</li><li>단점 ; 근데 변경사항이 없어도 매 실행 3초이상 걸린다.</li><li>template.yaml 파일을 수정하면 수동으로 재시작 해줘야한다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/sam/">sam</category>
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/docker/">docker</category>
      
      <category domain="https://chinsun9.github.io/tags/local-start-api/">local start api</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-sam-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>windows10 home에서 docker 설치하기</title>
      <link>https://chinsun9.github.io/2020/09/21/windows10-home%EC%97%90%EC%84%9C-docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/21/windows10-home%EC%97%90%EC%84%9C-docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 21 Sep 2020 03:58:24 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;home 버전에서 docker가 설치된다고?&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/docker-for-windows/install-windows-home/#system-requirements&quot;&gt;wi</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>home 버전에서 docker가 설치된다고?</li><li><a href="https://docs.docker.com/docker-for-windows/install-windows-home/#system-requirements">windows10 home도 버전 2004로 업데이트하면 가능</a></li><li>bios에서 가상화 설정</li><li>wsl 활성화</li></ul><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><img src="/images/windows10-home에서-docker-설치하기20200921/1.jpg"><ul><li><p>먼저 자신의 윈도우 버전을 확인합니다.</p></li><li><p>win + R 키로 실행창 여시고 <code>winver</code> 실행</p></li><li><p>2004 버전이 아니라면! 윈도우 업데이트를 열어서 2004 버전 업데이트를 해줍니다.</p></li><li><p>시간이 쫌 걸린다</p></li></ul><img src="/images/windows10-home에서-docker-설치하기20200921/2.jpg"><br><ul><li>이제 BIOS에서 가상화 설정을 활성화를 해줍니다.</li><li>asus bios 기준 ; 고급 &gt; cpu &gt; 가상화 기술 enable</li><li>아마 다른 보드들도 cpu 하위 메뉴에 있을거다.</li></ul><br><img src="/images/windows10-home에서-docker-설치하기20200921/3.jpg"><ul><li>wsl 기능을 활성화 합니다. (재부팅 필요)</li></ul><br><p><a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows/">https://hub.docker.com/editions/community/docker-ce-desktop-windows/</a></p><ul><li>docker 인스톨러 다운받기, get stable 클릭해서 받는다.</li><li>인스톨러를 실행한다.</li><li>끝</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/docker/">docker</category>
      
      
      <category domain="https://chinsun9.github.io/tags/docker/">docker</category>
      
      <category domain="https://chinsun9.github.io/tags/install/">install</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/windows10-home%EC%97%90%EC%84%9C-docker-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>samconfig.toml 에서 sam deploy 자동 y 설정하기</title>
      <link>https://chinsun9.github.io/2020/09/21/samconfig-toml-%EC%97%90%EC%84%9C-sam-deploy-%EC%9E%90%EB%8F%99-y-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/21/samconfig-toml-%EC%97%90%EC%84%9C-sam-deploy-%EC%9E%90%EB%8F%99-y-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 21 Sep 2020 02:58:28 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;figcaption&gt;&lt;span&gt;cmd log&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight cmd"><figcaption><span>cmd log</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Previewing CloudFormation changeset before deployment</span><br><span class="line">======================================================</span><br><span class="line">Deploy this changeset? [y/N]: y</span><br></pre></td></tr></table></figure><ul><li>deploy를 자주하다보면 이 y 누르는게 힘들다….</li></ul><h2 id="samconfig-toml-설정하기"><a href="#samconfig-toml-설정하기" class="headerlink" title="samconfig.toml 설정하기"></a>samconfig.toml 설정하기</h2><figure class="highlight toml"><figcaption><span>samconfig.toml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version</span> = <span class="number">0.1</span></span><br><span class="line"><span class="section">[default]</span></span><br><span class="line"><span class="section">[default.deploy]</span></span><br><span class="line"><span class="section">[default.deploy.parameters]</span></span><br><span class="line"><span class="attr">stack_name</span> = <span class="string">&quot;test-sam-app&quot;</span></span><br><span class="line"><span class="attr">s3_bucket</span> = <span class="string">&quot;aws-sam-cli-managed-default-samclisourcebucket-mqu19xn1bzoq&quot;</span></span><br><span class="line"><span class="attr">s3_prefix</span> = <span class="string">&quot;test-sam-app&quot;</span></span><br><span class="line"><span class="attr">region</span> = <span class="string">&quot;ap-northeast-2&quot;</span></span><br><span class="line"><span class="attr">confirm_changeset</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">capabilities</span> = <span class="string">&quot;CAPABILITY_IAM&quot;</span></span><br></pre></td></tr></table></figure><ul><li>처음 배포할때 <code>-g</code>옵션에서 설정했던것이 <code>samconfig.toml</code>에 저장되어있다.</li></ul><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">confirm_changeset</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li>여기서 confirm_changeset을 flase로 바꿔주면 중간에 확인 과정을 생략할 수 있다.</li><li>편안..!</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/sam/">sam</category>
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/samconfig-toml-%EC%97%90%EC%84%9C-sam-deploy-%EC%9E%90%EB%8F%99-y-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>sam 시작하기</title>
      <link>https://chinsun9.github.io/2020/09/21/sam-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/21/sam-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 21 Sep 2020 01:12:09 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/images/sam-시작하기20200921/preview.jpg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;sam을 이용해서 hello world 프로젝트 만들어 보기&lt;/li&gt;
&lt;li&gt;nodejs로 만든다&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;전제조건&quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/sam-시작하기20200921/preview.jpg" ><ul><li>sam을 이용해서 hello world 프로젝트 만들어 보기</li><li>nodejs로 만든다</li></ul><h2 id="전제조건"><a href="#전제조건" class="headerlink" title="전제조건"></a>전제조건</h2><ul><li>aws 계정 (프리티어)</li><li>aws cli 설치</li><li>sam cli 설치</li><li>(aws cli, sam cli 순으로 설치한다.)</li><li>Credentilas Setting (<code>aws configure</code>)</li></ul><h2 id="SAM-Serverless-Application-Model"><a href="#SAM-Serverless-Application-Model" class="headerlink" title="SAM(Serverless Application Model)"></a>SAM(Serverless Application Model)</h2><ul><li>겁나 어려워 보이는데 그냥 람다 생성기라고 생각하면 된다.</li><li>로컬에서 편하게 vscode로 람다함수짜고 yml 파일 수정해서..!</li><li>로컬 테스트 환경도 제공한다!</li></ul><h2 id="따라하기"><a href="#따라하기" class="headerlink" title="따라하기"></a>따라하기</h2><figure class="highlight plain"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sam init</span><br><span class="line"></span><br><span class="line">C:\tmp&gt;sam init</span><br><span class="line">Which template source would you like to use?</span><br><span class="line">        1 - AWS Quick Start Templates</span><br><span class="line">        2 - Custom Template Location</span><br><span class="line">Choice:</span><br></pre></td></tr></table></figure><ul><li>1번, 1번해서</li><li>AWS Quick Start Templates, nodejs 를 골라준다.</li></ul><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Project name [sam-app]: hello-world</span><br></pre></td></tr></table></figure><ul><li>프로젝트명 설정하면, 샘플 프로젝트를 가져온다.</li></ul><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">AWS quick <span class="built_in">start</span> application templates:</span><br><span class="line">        <span class="number">1</span> - Hello World Example</span><br><span class="line">        <span class="number">2</span> - Step Functions Sample App (Stock Trader)</span><br><span class="line">        <span class="number">3</span> - Quick <span class="built_in">Start</span>: From Scratch</span><br><span class="line">        <span class="number">4</span> - Quick <span class="built_in">Start</span>: Scheduled Events</span><br><span class="line">        <span class="number">5</span> - Quick <span class="built_in">Start</span>: S3</span><br><span class="line">        <span class="number">6</span> - Quick <span class="built_in">Start</span>: SNS</span><br><span class="line">        <span class="number">7</span> - Quick <span class="built_in">Start</span>: SQS</span><br><span class="line">        <span class="number">8</span> - Quick <span class="built_in">Start</span>: Web Backend</span><br><span class="line">Template selection: <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>1번 선택하여 헬로월드 템플릿을 받아온다.</li></ul><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hello-world</span><br></pre></td></tr></table></figure><ul><li>이제 생성된 프로젝트로 들어간다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── events</span><br><span class="line">│   └── event.json</span><br><span class="line">├── hello-world</span><br><span class="line">│   ├── tests&#x2F;</span><br><span class="line">│   ├── .npmignore</span><br><span class="line">│   ├── app.js</span><br><span class="line">│   └── package.json</span><br><span class="line">├── .gitignore</span><br><span class="line">├── README.md</span><br><span class="line">└── template.yaml</span><br></pre></td></tr></table></figure><ul><li>디렉터리 구조는 이러하다.</li><li>여기서 중요한 파일은 <code>hello-world/app.js</code>와 <code>template.yaml</code>이다.</li></ul><br><ul><li>2개 파일 소스 대충 어떻게 생겼는지 봐보고 빌드해본다.</li></ul><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sam build</span><br><span class="line"></span><br><span class="line"><span class="function">C:\<span class="title">tmp</span>\<span class="title">hello</span>-<span class="title">world</span>&gt;<span class="title">sam</span> <span class="title">build</span></span></span><br><span class="line"><span class="function"><span class="title">Building</span> <span class="title">function</span> &#x27;<span class="title">HelloWorldFunction</span>&#x27;</span></span><br><span class="line"><span class="function"><span class="title">Running</span> <span class="title">NodejsNpmBuilder:NpmPack</span></span></span><br><span class="line"><span class="function"><span class="title">Running</span> <span class="title">NodejsNpmBuilder:CopyNpmrc</span></span></span><br><span class="line"><span class="function"><span class="title">Running</span> <span class="title">NodejsNpmBuilder:CopySource</span></span></span><br><span class="line"><span class="function"><span class="title">Running</span> <span class="title">NodejsNpmBuilder:NpmInstall</span></span></span><br><span class="line"><span class="function"><span class="title">Running</span> <span class="title">NodejsNpmBuilder:CleanUpNpmrc</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Build</span> <span class="title">Succeeded</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Built</span> <span class="title">Artifacts</span>  : .<span class="title">aws</span>-<span class="title">sam</span>\<span class="title">build</span></span></span><br><span class="line"><span class="function"><span class="title">Built</span> <span class="title">Template</span>   : .<span class="title">aws</span>-<span class="title">sam</span>\<span class="title">build</span>\<span class="title">template.yaml</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Commands</span> <span class="title">you</span> <span class="title">can</span> <span class="title">use</span> <span class="title">next</span></span></span><br><span class="line"><span class="function">=========================</span></span><br><span class="line"><span class="function">[*] <span class="title">Invoke</span> <span class="title">Function</span>: <span class="title">sam</span> <span class="title">local</span> <span class="title">invoke</span></span></span><br><span class="line"><span class="function">[*] <span class="title">Deploy</span>: <span class="title">sam</span> <span class="title">deploy</span> --<span class="title">guided</span></span></span><br></pre></td></tr></table></figure><ul><li>.aws-sam 이라는 폴더가 생성된다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.aws-sam</span><br><span class="line">└── build</span><br><span class="line">    ├── HelloWorldFunction</span><br><span class="line">    │   ├── node_modules&#x2F;</span><br><span class="line">    │   ├── app.js</span><br><span class="line">    │   └── package.json</span><br><span class="line">    └── template.yaml</span><br></pre></td></tr></table></figure><ul><li>이제 배포해보자</li></ul><figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sam deploy -g</span><br></pre></td></tr></table></figure><ul><li>배포하자. <code>-g</code>옵션은 <code>--guided</code> 와 동일하다.</li><li>이 옵션은 최초에 배포할때만 사용된다.</li></ul><figure class="highlight cmd"><figcaption><span>cmd log</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Configuring SAM deploy</span><br><span class="line">======================</span><br><span class="line"></span><br><span class="line">        Looking <span class="keyword">for</span> samconfig.toml :  <span class="keyword">Not</span> found</span><br><span class="line"></span><br><span class="line">        Setting default arguments <span class="keyword">for</span> &#x27;sam deploy&#x27;</span><br><span class="line">        =========================================</span><br><span class="line">        Stack Name [sam-app]: test-sam-app</span><br><span class="line">        AWS Region [us-east-<span class="number">1</span>]: ap-northeast-<span class="number">2</span></span><br><span class="line">        #Shows you resources changes to be deployed and require a &#x27;Y&#x27; to initiate deploy</span><br><span class="line">        Confirm changes before deploy [y/N]: y</span><br><span class="line">        #SAM needs permission to be able to create roles to connect to the resources <span class="keyword">in</span> your template</span><br><span class="line">        Allow SAM CLI IAM role creation [Y/n]: y</span><br><span class="line">        HelloWorldFunction may <span class="keyword">not</span> have authorization <span class="keyword">defined</span>, Is this okay? [y/N]: y</span><br><span class="line">        Save arguments to samconfig.toml [Y/n]: y</span><br></pre></td></tr></table></figure><ul><li>먼저 Stack Name을 지정해준다. 공란으로 하면 <code>sam-app</code>으로 적용된다.</li><li>다음은 리전 설정이다. 나는 서울 <code>ap-northeast-2</code>로 지정했다</li><li>다음은 전부다 <code>y</code> 해준다.</li></ul><figure class="highlight cmd"><figcaption><span>cmd log</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">CloudFormation stack changeset</span><br><span class="line">----------------</span><br><span class="line">Operation             LogicalResourceId                                     ResourceType</span><br><span class="line">----------------</span><br><span class="line">+ Add                 HelloWorldFunctionHelloWorldPermissionProd            AWS::Lambda::Permission</span><br><span class="line">+ Add                 HelloWorldFunctionRole                                AWS::IAM::Role</span><br><span class="line">+ Add                 HelloWorldFunction                                    AWS::Lambda::Function</span><br><span class="line">+ Add                 ServerlessRestApiDeployment47fc2d5f9d                 AWS::ApiGateway::Deployment</span><br><span class="line">+ Add                 ServerlessRestApiProdStage                            AWS::ApiGateway::Stage</span><br><span class="line">+ Add                 ServerlessRestApi                                     AWS::ApiGateway::RestApi</span><br><span class="line">----------------</span><br><span class="line"></span><br><span class="line">Changeset created successfully. arn:aws:cloudformation:ap-northeast-<span class="number">2</span>:<span class="number">111111111111</span>:changeSet/samcli-deploy1600652952/<span class="number">89</span>cf8cb3-a626-<span class="number">44</span>ef-bd26-<span class="number">815</span>dacedaa8e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Previewing CloudFormation changeset before deployment</span><br><span class="line">======================================================</span><br><span class="line">Deploy this changeset? [y/N]: y</span><br></pre></td></tr></table></figure><ul><li>또 어쩌구 저쩌구 나오면서 마지막 확인을 받는데 <code>y</code> 해준다.</li></ul><figure class="highlight cmd"><figcaption><span>cmd log</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Successfully created/updated stack - test-sam-app <span class="keyword">in</span> ap-northeast-<span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li><p>그러면 시간이 쫌 걸리면서 aws에 올라가게 된다.</p></li><li><p>또 <code>samconfig.toml</code> 파일이 생성된 것을 확인할 수 있다.</p></li><li><p>이제 브라우저를 열어서 aws lambda 로 들어간다</p></li></ul><img src="/images/sam-시작하기20200921/1.jpg" ><ul><li>위와 같이 <code>[스택네임]-HelloWorldFunction</code>이름의 함수 하나가 생성되었다.</li><li>눌러서 들어간다</li></ul><img src="/images/sam-시작하기20200921/2.jpg" ><ul><li>이런 화면이 나온다</li><li>api 게이트웨이를 클릭한다. 그러면 아래 화면이 api 게이트웨이로 바뀐다. 거기서 다시 세부 정보를 클릭해서 api 엔드포인트를 확인한다.</li></ul><img src="/images/sam-시작하기20200921/3.jpg" ><ul><li>엔드포인트를 눌러 접속한다.</li></ul><img src="/images/sam-시작하기20200921/preview.jpg" ><ul><li><code>&#123;&quot;message&quot;:&quot;hello world&quot;&#125;</code>이 보이면 성공이다.</li><li>이렇게 다짜고짜 sam으로 람다를 만들어 보았다.</li></ul><h2 id="해설"><a href="#해설" class="headerlink" title="해설"></a>해설</h2><ul><li>sam Hello World Example template를 이용해서 람다를 만들었다.</li><li>이 람다는 어떤 주소로 접속하면 hello world를 반환하는 람다이다.</li><li>현재 프로젝트 구조를 잘 살펴보면 sam을 익히면 된다.</li><li>먼저 이 <code>&#123;&quot;message&quot;:&quot;hello world&quot;&#125;</code>는 어디서 왔을까?</li></ul><figure class="highlight js"><figcaption><span>hello-world/app.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exports</span>.lambdaHandler = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// const ret = await axios(url);</span></span><br><span class="line">    response = &#123;</span><br><span class="line">      statusCode: <span class="number">200</span>,</span><br><span class="line">      body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">        message: <span class="string">&#x27;hello world&#x27;</span>,</span><br><span class="line">        <span class="comment">// location: ret.data.trim()</span></span><br><span class="line">      &#125;),</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">    <span class="keyword">return</span> err;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> response;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>lambdaHandler라는 함수가 있는데 response객체를 반환한다.</li><li>근데 우리는 {“message”:”hello world”} 만 보이니까 body에 있는 내용을 조작하면 우리가 원하는 내용을 보낼 수 있겠구나 생각할 수 있다.</li><li>그러면 이 함수를 실행시키는 트리거, s22xid3g26.execute-api.ap-northeast-2.amazonaws.com/Prod/hello</li><li>api 게이트웨이의 엔드포인트는 어디서 설정되었을까?</li></ul><figure class="highlight yml"><figcaption><span>template.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Resources:</span></span><br><span class="line">  <span class="attr">HelloWorldFunction:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::Function</span> <span class="comment"># More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">CodeUri:</span> <span class="string">hello-world/</span></span><br><span class="line">      <span class="attr">Handler:</span> <span class="string">app.lambdaHandler</span></span><br><span class="line">      <span class="attr">Runtime:</span> <span class="string">nodejs12.x</span></span><br><span class="line">      <span class="attr">Events:</span></span><br><span class="line">        <span class="attr">HelloWorld:</span></span><br><span class="line">          <span class="attr">Type:</span> <span class="string">Api</span> <span class="comment"># More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api</span></span><br><span class="line">          <span class="attr">Properties:</span></span><br><span class="line">            <span class="attr">Path:</span> <span class="string">/hello</span></span><br><span class="line">            <span class="attr">Method:</span> <span class="string">get</span></span><br></pre></td></tr></table></figure><ul><li><code>template.yaml</code>을 보면 Events 아래 Type: Api가 보인다.</li><li>hello라는 Path로 get 요청이 왔을때 라고 이해할 수 있다.</li></ul><br><ul><li>이제 이를 토대로 람다를 업그레이드 해보자</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/lambda/">lambda</category>
      
      <category domain="https://chinsun9.github.io/tags/sam/">sam</category>
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/api-gateway/">api gateway</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/sam-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>npm 명령어</title>
      <link>https://chinsun9.github.io/2020/09/21/npm-%EB%AA%85%EB%A0%B9%EC%96%B4/</link>
      <guid>https://chinsun9.github.io/2020/09/21/npm-%EB%AA%85%EB%A0%B9%EC%96%B4/</guid>
      <pubDate>Mon, 21 Sep 2020 00:43:43 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;내가-쓰는-명령어&quot;&gt;&lt;a href=&quot;#내가-쓰는-명령어&quot; class=&quot;headerlink&quot; title=&quot;내가 쓰는 명령어&quot;&gt;&lt;/a&gt;내가 쓰는 명령어&lt;/h2&gt;&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td </description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="내가-쓰는-명령어"><a href="#내가-쓰는-명령어" class="headerlink" title="내가 쓰는 명령어"></a>내가 쓰는 명령어</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br><span class="line">npm i [패키지명]</span><br><span class="line">npm i [패키지명] -D</span><br><span class="line">npm i [패키지명] -g</span><br><span class="line"></span><br><span class="line">npm <span class="built_in">start</span></span><br><span class="line">npm run [script]</span><br></pre></td></tr></table></figure><ul><li>이렇게를 주로 쓴다.</li></ul><h2 id="짧게-쓰는-npm-명령어"><a href="#짧게-쓰는-npm-명령어" class="headerlink" title="짧게 쓰는 npm 명령어"></a>짧게 쓰는 npm 명령어</h2><ul><li><code>npm i</code> == <code>npm install</code></li><li><code>npm i -D</code> == <code>npm i --save-dev</code></li><li><code>npm i -g</code> == <code>npm i --global</code></li></ul><h2 id="npm-install-option"><a href="#npm-install-option" class="headerlink" title="npm install option"></a>npm install option</h2><ul><li><code>-D</code> ; 개발할때만 쓰이는 패키지를 설치할때 사용한다. 배포할때 포함되지 않는다.</li><li><code>-g</code> ; 패키지 전역 설치. hexo같은 cli에 바로 명령어를 치는 놈들을 보통 이렇게 설치한다.</li></ul><h3 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h3><ul><li><code>npm i [패키지명] -S</code> 이렇게 <code>--save</code>옵션을 줘야만 package.json에 들어갔는데, npm5부터 기본값이라 안적어도 된다.</li></ul><h2 id="npm-scripts"><a href="#npm-scripts" class="headerlink" title="npm scripts"></a>npm scripts</h2><figure class="highlight"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;build&quot;: &quot;hexo generate&quot;,</span><br><span class="line">  &quot;clean&quot;: &quot;hexo clean&quot;,</span><br><span class="line">  &quot;deploy&quot;: &quot;hexo deploy&quot;,</span><br><span class="line">  &quot;test&quot;: &quot;hexo server&quot;,</span><br><span class="line">  &quot;start&quot;: &quot;hexo generate &amp; hexo deploy &amp; git add . &amp; git commit -m &quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>여기에 명령을 등록시켜놓고 <code>npm run build</code> 이런식으로 사용한다.</li><li>여기서 test, start 스크립트는 run을 생략하여 <code>npm start</code>, <code>npm test</code> 이런식으로 사용할 수 있다.</li><li>그 외에 stop, restart 를 run 없이 바로 사용할 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/cli/">cli</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/npm-%EB%AA%85%EB%A0%B9%EC%96%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>nodejs 카테고리 생성</title>
      <link>https://chinsun9.github.io/2020/09/21/nodejs-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC-%EC%83%9D%EC%84%B1/</link>
      <guid>https://chinsun9.github.io/2020/09/21/nodejs-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC-%EC%83%9D%EC%84%B1/</guid>
      <pubDate>Mon, 21 Sep 2020 00:39:23 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;nodejs 공부한 내용 올리기&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>nodejs 공부한 내용 올리기</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/category/">category</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/nodejs-%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC-%EC%83%9D%EC%84%B1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>커스텀 404 페이지 만들기</title>
      <link>https://chinsun9.github.io/2020/09/21/%EC%BB%A4%EC%8A%A4%ED%85%80-404-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/21/%EC%BB%A4%EC%8A%A4%ED%85%80-404-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <pubDate>Mon, 21 Sep 2020 00:15:59 GMT</pubDate>
      
        
        
      <description>&lt;img src=&quot;/images/커스텀-404-페이지-만들기20200921/preview.jpg&quot; &gt;
&lt;img src=&quot;/images/커스텀-404-페이지-만들기20200921/1.jpg&quot; &gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;루트 디렉터리에 404.html이 </description>
        
      
      
      
      <content:encoded><![CDATA[<img src="/images/커스텀-404-페이지-만들기20200921/preview.jpg" ><img src="/images/커스텀-404-페이지-만들기20200921/1.jpg" ><ul><li><p>루트 디렉터리에 404.html이 존재하면 기존 404 페이지를 대신해 보여준다.</p></li><li><p>hexo에서 적용시키려면 source 디렉터리에 404.html을 만들면된다.</p><img src="/images/커스텀-404-페이지-만들기20200921/2.jpg" ></li><li><p>그런데 hexo에서 배포할때 자동으로 테마에 맞게 지정된 레이아웃으로 변환한다.</p></li><li><p>이를 막기 위해 404.html의 Front-matter 에 <code>layout: false</code>로 지정한다</p></li></ul><figure class="highlight html"><figcaption><span>source/404.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">layout: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a><a href="https://hexo.io/docs/front-matter.html">Front-matter</a></h2><ul><li>hexo에서 파일 최상단에 적는 yml을 Front-matter라고 한다.</li></ul><figure class="highlight yml"><figcaption><span>Front-matter</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">커스텀</span> <span class="number">404</span> <span class="string">페이지</span> <span class="string">만들기</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">category:</span> <span class="string">blog</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">404</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">custom</span> <span class="string">page</span></span><br><span class="line"><span class="attr">thumbnail:</span> <span class="string">/images/커스텀-404-페이지-만들기20200921/preview.jpg</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-09-21 09:15:59</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="404-소스-출처"><a href="#404-소스-출처" class="headerlink" title="404 소스 출처"></a>404 소스 출처</h2><ul><li><a href="https://codepen.io/purplexmoss/pen/PoPyzMW">https://codepen.io/purplexmoss/pen/PoPyzMW</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog/">blog</category>
      
      
      <category domain="https://chinsun9.github.io/tags/hexo/">hexo</category>
      
      <category domain="https://chinsun9.github.io/tags/404/">404</category>
      
      <category domain="https://chinsun9.github.io/tags/custom-page/">custom page</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/21/%EC%BB%A4%EC%8A%A4%ED%85%80-404-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>124 나라 숫자</title>
      <link>https://chinsun9.github.io/2020/09/18/124-%EB%82%98%EB%9D%BC-%EC%88%AB%EC%9E%90/</link>
      <guid>https://chinsun9.github.io/2020/09/18/124-%EB%82%98%EB%9D%BC-%EC%88%AB%EC%9E%90/</guid>
      <pubDate>Fri, 18 Sep 2020 05:40:31 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;figcaption&gt;&lt;span&gt;124 나라 숫자&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><figcaption><span>124 나라 숫자</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://programmers.co.kr/learn/courses/30/lessons/12899</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solution12909</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> answer = [];</span><br><span class="line">  <span class="keyword">var</span> arr = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> N = n;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> seq = [<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>];</span><br><span class="line">  <span class="comment">// console.log(seq[seq.length - 1]);</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> tmp = n % <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    answer.push(tmp);</span><br><span class="line">    <span class="comment">// if (n &lt;= 2) &#123;</span></span><br><span class="line">    <span class="comment">//   break;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (tmp == <span class="number">0</span>) &#123;</span><br><span class="line">      n = (n - tmp - <span class="number">3</span>) / <span class="number">3</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      n = (n - tmp) / <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (answer.length != <span class="number">0</span>) &#123;</span><br><span class="line">    arr += seq[answer.pop()];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// console.log(answer);</span></span><br><span class="line">  <span class="comment">// console.log(N, arr);</span></span><br><span class="line">  <span class="comment">// console.log(&quot;------------&quot;);</span></span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/images/124-나라-숫자20200918/preview.jpg" ><h2 id="해설"><a href="#해설" class="headerlink" title="해설"></a>해설</h2><ul><li>124라는 나라의 이상한 진법으로 변환해야 하는 문제이다.</li><li><table ><thead><tr>  <th>10진법</th>  <th>124 나라</th>  <th>10진법</th>  <th>124 나라</th>  </tr>  </thead><tbody><tr><td>1</td>  <td>1</td>  <td>6</td>  <td>14</td>  </tr><tr>  <td>2</td>  <td>2</td>  <td>7</td>  <td>21</td>  </tr><tr>  <td>3</td>  <td>4</td>  <td>8</td>  <td>22</td>  </tr><tr>  <td>4</td>  <td>11</td>  <td>9</td>  <td>24</td>  </tr><tr>  <td>5</td>  <td>12</td>  <td>10</td>  <td>41</td>  </tr></tbody></table></li><li>이렇게 이상한 숫자로 변환시키는 문제이다</li><li>3진법 같아 보이지만 여기에는 함정이 있다….</li><li>3진법이 아닌데 3개 숫자로만 표현해야한다.</li><li>경험으로 알게된.. 자릿수가 바뀔때 이상하게 바뀐다는 건데..</li><li>나머지가 0이 될 경우에 == n이 3의 배수의 경우에 추가로 처리해줘야한다.</li><li>이해?를 돕기위해 그림을 그렸다</li></ul><img src="/images/124-나라-숫자20200918/1.jpg"><ul><li>왼쪽이 일반적인.. 상식적인 3진수이고</li><li>오른쪽이 124 나라의 수이다.</li><li>중간은 124 나라의 수인데, 3진수와 시작을 똑같이 하기 위해 조작한 것이다.</li><li>3진수와 중간을 비교해보면 중간중간 정신나간 부분이 보인다</li><li>이런 특징? 때문에 124나라는 적은 자릿수로 더 많은 숫자를 표현할 수 있다.</li></ul><br><ul><li>이문제는 해결법을 짠하고 알아냈다기보다</li><li>계속 해보면서 알게된 규칙들을 적용시키면서 풀린거라</li><li>설명을 잘 못하겠다..</li></ul><br><ul><li>숫자 때문에 헷갈려 죽을뻔..</li><li>아무튼 정신나간 124 나라이다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/programmers/">programmers</category>
      
      
      <category domain="https://chinsun9.github.io/tags/programmers/">programmers</category>
      
      <category domain="https://chinsun9.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/18/124-%EB%82%98%EB%9D%BC-%EC%88%AB%EC%9E%90/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>가장 큰 정사각형 찾기</title>
      <link>https://chinsun9.github.io/2020/09/18/%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%A0%95%EC%82%AC%EA%B0%81%ED%98%95-%EC%B0%BE%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/09/18/%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%A0%95%EC%82%AC%EA%B0%81%ED%98%95-%EC%B0%BE%EA%B8%B0/</guid>
      <pubDate>Fri, 18 Sep 2020 05:15:51 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://programmers.co.kr/learn/courses/30/lessons/12905</span></span><br><span class="line"><span class="comment">//   가장 큰 정사각형 찾기</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solution</span>(<span class="params">board</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> answer = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> lownum = board.length;</span><br><span class="line">  <span class="keyword">var</span> colnum = board[<span class="number">0</span>].length;</span><br><span class="line">  <span class="built_in">console</span>.log(lownum, colnum);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (lownum == <span class="number">1</span> || colnum == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> maxRow = board.map(<span class="function"><span class="keyword">function</span> (<span class="params">row</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, row);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> max = <span class="built_in">Math</span>.max.apply(<span class="literal">null</span>, maxRow);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> max = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> q = <span class="number">1</span>; q &lt; board.length; q++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> w = <span class="number">1</span>; w &lt; board[<span class="number">0</span>].length; w++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (board[q][w] == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">var</span> arr = [board[q - <span class="number">1</span>][w - <span class="number">1</span>], board[q - <span class="number">1</span>][w], board[q][w - <span class="number">1</span>]];</span><br><span class="line">      board[q][w] = <span class="built_in">Math</span>.min.apply(<span class="literal">null</span>, arr) + <span class="number">1</span>;</span><br><span class="line">      max = <span class="built_in">Math</span>.max(max, board[q][w]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  answer = max * max;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//   console.log(maxRow, max);</span></span><br><span class="line">  <span class="built_in">console</span>.log(answer);</span><br><span class="line">  <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/images/가장-큰-정사각형-찾기20200918/preview.jpg"><h2 id="해설"><a href="#해설" class="headerlink" title="해설"></a>해설</h2><ul><li><p>2차원 배열이 입력으로 들어온다</p></li><li><p>2차월 연속된 1 이 이루는 가장 큰 정사각형의 넓이를 반환해야 한다</p></li><li><p>먼저 입력된 보드가 행과 열 어느 하나가 1인 경우 1또는 0을 반환한다.</p></li><li><p>이제 1이 아닌 경우에 복잡해 지는데..</p></li><li><p>0과 1로만 이루어진 보드를 갱신해 나갈거다.</p></li><li><p>board[1][1] 부터 시작해서 이전 3개를 살펴볼것이다.</p></li><li><p>이떄 board[1][1]이 0 이면 패스한다. 1이면 ㄱㄱ</p></li><li><p>위, 왼쪽, 왼쪽 대각선위를 살펴서 가장 작은 숫자를 찾는다.</p></li><li><p>그런다음에 board[1][1]에 가장 작은 숫자 + 1을 대입한다</p></li><li><p>board[1][2] 로 이동해서 같은 것을 반복한다.</p></li><li><p>그림으로 보면 이렇다.</p></li><li><p>step1] board[1][1] 일때</p><img src="/images/가장-큰-정사각형-찾기20200918/step1.jpg"></li><li><p>step1] board[1][2] 일때</p><img src="/images/가장-큰-정사각형-찾기20200918/step2.jpg"></li><li><p>반복…</p></li><li><p>결과]</p><img src="/images/가장-큰-정사각형-찾기20200918/result.jpg"></li><li><p>위 처럼 계속 갱신하고 보드에 마지막에 도달하면 끝이 난다</p></li><li><p>이후에 board 내에서 가장 높은 숫자를 찾는다. 그러면 3이라는 숫자를 얻을 수 있다.</p></li><li><p>넓이를 반환하고 했으니까 <code>3*3</code> 해서 <code>9</code>를 반환하면 된다.</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/programmers/">programmers</category>
      
      
      <category domain="https://chinsun9.github.io/tags/programmers/">programmers</category>
      
      <category domain="https://chinsun9.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/">프로그래머스</category>
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      
      <comments>https://chinsun9.github.io/2020/09/18/%EA%B0%80%EC%9E%A5-%ED%81%B0-%EC%A0%95%EC%82%AC%EA%B0%81%ED%98%95-%EC%B0%BE%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
