<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Mon, 21 Dec 2020 08:44:55 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>string to number 요상한 문법 (js)</title>
      <link>https://chinsun9.github.io/2020/12/21/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js/</link>
      <guid>https://chinsun9.github.io/2020/12/21/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js/</guid>
      <pubDate>Mon, 21 Dec 2020 08:44:55 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js20201221/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string ty</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js20201221/preview.png" alt=" "></p><ul><li>string type 변수앞에 <code>+</code> 기호를 넣으면 number type 으로 캐스팅된다…</li><li>이런 문법은 wow…</li></ul><figure class="highlight ts"><figcaption><span>example.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">squareValue</span>(<span class="params">x: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.pow(x * <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">squareValue</span>(<span class="params">x: <span class="built_in">string</span> | <span class="built_in">number</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.pow(+x, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>any 사용을 피하라는 예제를 코드를 보는데 우연히 알게되었다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.sitepoint.com/10-essential-typescript-tips-tricks-angular/#typescripttip5avoidanyunlessitreallyisany">https://www.sitepoint.com/10-essential-typescript-tips-tricks-angular/#typescripttip5avoidanyunlessitreallyisany</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/21/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>typescript에서 mathjs 사용해서 소수점 정확하게 계산하기</title>
      <link>https://chinsun9.github.io/2020/12/21/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/21/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 21 Dec 2020 07:59:22 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B020201221/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;부동소</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B020201221/preview.png" alt=" "></p><ul><li>부동소수점으로 인한 계산 오류가 있다.</li><li>mathjs 라이브러리로 해결해보자.</li></ul><h2 id="mathjs-설치"><a href="#mathjs-설치" class="headerlink" title="mathjs 설치"></a>mathjs 설치</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add mathjs</span><br><span class="line">yarn add @types&#x2F;mathjs -D</span><br></pre></td></tr></table></figure><ul><li><code>mathjs</code>만 설치하면 타입 정의가 없기 때문에</li><li><code>@types/mathjs</code> 보조 라이브러리까지 설치</li></ul><h2 id="mathjs-임포트"><a href="#mathjs-임포트" class="headerlink" title="mathjs 임포트"></a>mathjs 임포트</h2><figure class="highlight ts"><figcaption><span>example1.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> math <span class="keyword">from</span> <span class="string">&quot;mathjs&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>그냥 기본값으로 사용하려면 <code>import * as math from &#39;mathjs&#39;</code>로 불러와 사용</li><li>default export가 없어서 <code>import math from &#39;mathjs&#39;</code>이런 식으로 사용불가.<ul><li><code>Attempted import error: &quot;mathjs&quot; does not contain a default export</code></li></ul></li></ul><figure class="highlight ts"><figcaption><span>example2.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; create, all &#125; <span class="keyword">from</span> <span class="string">&quot;mathjs&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mathF = create(all, &#123; <span class="built_in">number</span>: <span class="string">&quot;Fraction&quot;</span> &#125;) <span class="keyword">as</span> math.MathJsStatic;</span><br></pre></td></tr></table></figure><ul><li>지정 config를 적용해 사용하려면 create 메서드 사용</li><li><code>create(all, &#123; number: &#39;Fraction&#39; &#125;) as math.MathJsStatic</code></li><li>as 키워드로 타입을 명시하지 않으면 undefined 에러 발생<ul><li><code>Cannot invoke an object which is possibly &#39;undefined&#39;</code></li></ul></li></ul><h2 id="소수점-계산"><a href="#소수점-계산" class="headerlink" title="소수점 계산"></a>소수점 계산</h2><figure class="highlight ts"><figcaption><span>calc.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; create, all &#125; <span class="keyword">from</span> <span class="string">&quot;mathjs&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mathF = create(all, &#123; <span class="built_in">number</span>: <span class="string">&quot;Fraction&quot;</span> &#125;) <span class="keyword">as</span> math.MathJsStatic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mathjsCalc = <span class="function">(<span class="params">expr: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> mathF.number(mathF.evaluate(expr));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = mathjsCalc(<span class="string">`<span class="subst">$&#123;value1&#125;</span> * <span class="subst">$&#123;value2&#125;</span> * 0.01`</span>);</span><br></pre></td></tr></table></figure><ul><li>evaluate메서드를 사용해서 수식 string을 주면 알아서 계산하도록 했다.</li><li>이때 math ConfigOptions에서 number 옵션이 기본값(number)인 경우에 일반적인 계산이 된다.</li><li>number 옵션에 <code>Fraction</code>을 주고 생성하게 되면 evaluate 메서드에서 숫자를 Fraction 타입으로 파싱 해서 계산하게 되어 우리가 기대하는 결과를 얻을 수 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/chinsun9/react-percentage-calculator">https://github.com/chinsun9/react-percentage-calculator</a></li><li><a href="https://mathjs.org/docs/getting_started.html">https://mathjs.org/docs/getting_started.html</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/mathjs/">mathjs</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/21/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>react로 만들어본 퇴근시간 계산기</title>
      <link>https://chinsun9.github.io/2020/12/18/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/18/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B0/</guid>
      <pubDate>Fri, 18 Dec 2020 08:41:40 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/GYJGwfwHE2A&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/GYJGwfwHE2A" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li><a href="https://chinsun9.github.io/go-home-time/" target="_blank">Go Home Time (React)</a></li></ul><h2 id="기능"><a href="#기능" class="headerlink" title="기능"></a>기능</h2><h3 id="메인-페이지"><a href="#메인-페이지" class="headerlink" title="메인 페이지"></a>메인 페이지</h3><ul><li>목표 시각까지 남은 시간 계산</li><li>url param을 통해 목표 시각 세팅</li><li>목표 시각이 지나면 퇴근하라는 메시지를 뛰움</li></ul><h3 id="about-페이지"><a href="#about-페이지" class="headerlink" title="about 페이지"></a>about 페이지</h3><ul><li>링크 공유 기능</li><li>퇴근 시간 설정 기능</li><li>자동 클립보드 복사</li></ul><h2 id="깃허브-페이지-spa-세팅"><a href="#깃허브-페이지-spa-세팅" class="headerlink" title="깃허브 페이지 spa 세팅"></a>깃허브 페이지 spa 세팅</h2><ul><li><a href="https://iamsjy17.github.io/react/2018/11/04/githubpage-SPA.html">https://iamsjy17.github.io/react/2018/11/04/githubpage-SPA.html</a></li><li>원리. 404페이지에 스크립트를 두고 index페이지로 url 파라매터로 넘김</li></ul><h2 id="배경이미지-출처"><a href="#배경이미지-출처" class="headerlink" title="배경이미지 출처"></a>배경이미지 출처</h2><ul><li><a href="https://unsplash.com/photos/WVIkqpoKz1I">https://unsplash.com/photos/WVIkqpoKz1I</a></li><li>Photo by @swayte on Unsplash</li></ul><h2 id="해결한-문제들"><a href="#해결한-문제들" class="headerlink" title="해결한 문제들"></a>해결한 문제들</h2><h3 id="gsap-적용안됨"><a href="#gsap-적용안됨" class="headerlink" title="gsap 적용안됨"></a>gsap 적용안됨</h3><ul><li><a href="https://github.com/greensock/GSAP/issues/285#issuecomment-433729632">https://github.com/greensock/GSAP/issues/285#issuecomment-433729632</a></li></ul><figure class="highlight plain"><figcaption><span>Share.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Power3, TimelineLite &#125; from &quot;gsap&quot;;</span><br><span class="line">import CSSPlugin from &quot;gsap&#x2F;CSSPlugin&quot;; &#x2F;&#x2F; 추가</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; eslint-disable-next-line @typescript-eslint&#x2F;no-unused-vars</span><br><span class="line">const C &#x3D; CSSPlugin; &#x2F;&#x2F; 추가</span><br></pre></td></tr></table></figure><ul><li>로컬에서는 애니메이션이 잘 실행되었는데, 빌드 후 애니메이션이 안 나오는 문제 해결</li></ul><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><ul><li>어느 정도 리액트에 익숙해진 것 같다.</li><li>주로 사용하는 패턴이 생긴 것 같다.</li><li>엄청 간단해 보이지만 이것저것 신경 쓴 것 같은데, 기록을 안 해놨다 ㅠㅠ</li><li>나는 코드에 조금의 변화가 생겨도 커밋을 했었는데,,</li><li>이번에는 커밋을 안 하고 한 번에 몰아서 마지막에 파일별로 커밋을 했다.</li><li>그래서 해결한 문제들이 기억이 잘 안 난다.. ㅠㅠ</li></ul><h3 id="신경-쎃던-것들"><a href="#신경-쎃던-것들" class="headerlink" title="신경 쎃던 것들"></a>신경 쎃던 것들</h3><h4 id="input-element"><a href="#input-element" class="headerlink" title="input element"></a>input element</h4><ul><li>about 페이지에서는 링크를 생성하는 부분이 있다.</li><li>처음에는 input width가 좁았었다. 그래서 고민했던 것이..</li><li>input 넓이보다 안의 내용이 더 길면은 끝부분이 감춰진다.</li></ul><p><img src="/images/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B020201218/1.png" alt=" "></p><ul><li>input에서 포커스를 해제하면 위 그림처럼,</li><li>계속 앞쪽으로 포커스가 자동으로 이동했다.</li></ul><p><img src="/images/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B020201218/2.png" alt=" "></p><ul><li>나는 input 내용의 가장 뒤쪽,</li><li>url param이 변하는 것에 포커스가 가도록 만들려고 이것저것 해봤는데…</li></ul><ul><li>결국엔 그냥 input width를 늘려버리고 끝을 냈다..</li></ul><h4 id="github-pages-SPA"><a href="#github-pages-SPA" class="headerlink" title="github pages SPA"></a>github pages SPA</h4><ul><li>깃허브 페이지는 기본적으로 SPA를 지원하지 않는다.</li><li>react-router-dom 으로 여러 경로들을 만들어 두면 index 말고는 404 페이지로 리디렉트 된다.</li><li>그래서 찾아보니까,,.!</li></ul><figure class="highlight js"><figcaption><span>404.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> segmentCount = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> l = <span class="built_in">window</span>.location;</span><br><span class="line">l.replace(</span><br><span class="line">  l.protocol +</span><br><span class="line">    <span class="string">&quot;//&quot;</span> +</span><br><span class="line">    l.hostname +</span><br><span class="line">    (l.port ? <span class="string">&quot;:&quot;</span> + l.port : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">    l.pathname</span><br><span class="line">      .split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">      .slice(<span class="number">0</span>, <span class="number">1</span> + segmentCount)</span><br><span class="line">      .join(<span class="string">&quot;/&quot;</span>) +</span><br><span class="line">    <span class="string">&quot;/?p=/&quot;</span> +</span><br><span class="line">    l.pathname</span><br><span class="line">      .slice(<span class="number">1</span>)</span><br><span class="line">      .split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">      .slice(segmentCount)</span><br><span class="line">      .join(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">      .replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;~and~&quot;</span>) +</span><br><span class="line">    (l.search ? <span class="string">&quot;&amp;q=&quot;</span> + l.search.slice(<span class="number">1</span>).replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;~and~&quot;</span>) : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">    l.hash</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">l</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (l.search) &#123;</span><br><span class="line">    <span class="keyword">var</span> q = &#123;&#125;;</span><br><span class="line">    l.search</span><br><span class="line">      .slice(<span class="number">1</span>)</span><br><span class="line">      .split(<span class="string">&quot;&amp;&quot;</span>)</span><br><span class="line">      .forEach(<span class="function"><span class="keyword">function</span> (<span class="params">v</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = v.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        q[a[<span class="number">0</span>]] = a.slice(<span class="number">1</span>).join(<span class="string">&quot;=&quot;</span>).replace(<span class="regexp">/~and~/g</span>, <span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="keyword">if</span> (q.p !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="built_in">window</span>.history.replaceState(</span><br><span class="line">        <span class="literal">null</span>,</span><br><span class="line">        <span class="literal">null</span>,</span><br><span class="line">        l.pathname.slice(<span class="number">0</span>, <span class="number">-1</span>) + (q.p || <span class="string">&quot;&quot;</span>) + (q.q ? <span class="string">&quot;?&quot;</span> + q.q : <span class="string">&quot;&quot;</span>) + l.hash</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)(<span class="built_in">window</span>.location);</span><br></pre></td></tr></table></figure><ul><li>원리는 index 경로 외에 나머지 경로로 들어오면 404페이지를 반환하는데,</li><li>커스텀 404페이지에서 스크립트를 통해서 index페이지로 리디렉트 하게 한다.</li><li>이때, url params 및 query string을 가공한다</li></ul><ul><li>index.html에서는 404.html로부터 넘겨받은 값으로 라우팅이 적용된 화면을 보여준다.</li><li>이걸 만든 사람은 정말 대단한 것 같다. ㄷㄷ;</li></ul><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><ul><li><a href="https://github.com/chinsun9/go-home-time">https://github.com/chinsun9/go-home-time</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><h3 id="github-pages-spa"><a href="#github-pages-spa" class="headerlink" title="github pages spa"></a>github pages spa</h3><ul><li><a href="https://iamsjy17.github.io/react/2018/11/04/githubpage-SPA.html">https://iamsjy17.github.io/react/2018/11/04/githubpage-SPA.html</a></li><li><a href="https://github.com/rafgraph/spa-github-pages">https://github.com/rafgraph/spa-github-pages</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/hook/">hook</category>
      
      <category domain="https://chinsun9.github.io/tags/gsap/">gsap</category>
      
      <category domain="https://chinsun9.github.io/tags/eslint/">eslint</category>
      
      <category domain="https://chinsun9.github.io/tags/moment/">moment</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/18/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>web font 적용하는 2가지 방법</title>
      <link>https://chinsun9.github.io/2020/12/16/web-font-%EC%A0%81%EC%9A%A9%ED%95%98%EB%8A%94-2%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95/</link>
      <guid>https://chinsun9.github.io/2020/12/16/web-font-%EC%A0%81%EC%9A%A9%ED%95%98%EB%8A%94-2%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95/</guid>
      <pubDate>Wed, 16 Dec 2020 05:03:10 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight css&quot;&gt;&lt;figcaption&gt;&lt;span&gt;index.css&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight css"><figcaption><span>index.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Nanum+Gothic&amp;display=swap&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">  <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css2?family=Nanum+Gothic&amp;display=swap&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>link태그로 불러오는 것은 기존에 알고 있었는데,</li><li>css에서 <code>@import</code> 로 불러오는 것은 처음알았다.</li><li>폰트같이 범용적은 것은 index.css에 넣어주면 좋을 것 같다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/CSS/@import">https://developer.mozilla.org/ko/docs/Web/CSS/@import</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/webfont/">webfont</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/16/web-font-%EC%A0%81%EC%9A%A9%ED%95%98%EB%8A%94-2%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>type vs interface</title>
      <link>https://chinsun9.github.io/2020/12/16/type-vs-interface/</link>
      <guid>https://chinsun9.github.io/2020/12/16/type-vs-interface/</guid>
      <pubDate>Wed, 16 Dec 2020 04:49:13 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// X</span></span><br><span class="line"><span class="keyword">type</span> MyFile <span class="keyword">extends</span> File = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// O</span></span><br><span class="line"><span class="keyword">interface</span> MyFile <span class="keyword">extends</span> File &#123;</span><br><span class="line">  preview: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// O</span></span><br><span class="line"><span class="keyword">type</span> MyFile = &#123;preview: <span class="built_in">string</span>&#125; &amp; File</span><br></pre></td></tr></table></figure><ul><li>type은 <code>extends</code>, <code>implements</code>가 안됨.</li><li>대신 extends의 경우는 <code>&amp;</code> 키워드를 사용하여 대체할 수 있다.</li></ul><ul><li>interface와 type은 거의 같은 역할을 한다.</li><li>그래서 둘중 하나만 사용하여 일관적인 스타일을 유지하는 게 좋다고 들었다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>나는 typescript를 공부하면서 처음 접한게 type이라서 type을 쭉 사용해왔다.</li><li>그런데 상속을 해야하는 경우에 마추쳤을 때, 불가피하게 interface 키워드를 사용했고,</li><li>type을 사용할 수 없을까 찾아보다가 <code>type vs interface</code> 에 대한 좋은 링크를 찾았다.</li></ul><ul><li><a href="https://blog.logrocket.com/types-vs-interfaces-in-typescript/">https://blog.logrocket.com/types-vs-interfaces-in-typescript/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/type/">type</category>
      
      <category domain="https://chinsun9.github.io/tags/interface/">interface</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/16/type-vs-interface/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>react url params 사용하기</title>
      <link>https://chinsun9.github.io/2020/12/16/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/16/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Wed, 16 Dec 2020 02:52:01 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B020201216/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;f</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B020201216/preview.jpg" alt=" "></p><figure class="highlight ts"><figcaption><span>example.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 전</span></span><br><span class="line">res = <span class="keyword">await</span> myFetch(<span class="string">`get/<span class="subst">$&#123;location.pathname.split(<span class="string">&quot;/&quot;</span>)[<span class="number">2</span>]&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 후</span></span><br><span class="line">res = <span class="keyword">await</span> myFetch(<span class="string">`get/<span class="subst">$&#123;id&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><ul><li><p>처음에는 url params에 어떻게 접근할까하다가 location객체에서 수동으로 파싱해서 쎃었는데</p></li><li><p>‘react-router-dom’ 에서 useRouteMatch라는 메소드를 통해서 자동으로 파싱하고 필요한 차일드에 넘겨주었다.</p></li></ul><figure class="highlight ts"><figcaption><span>parent.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 최상위, 컴포넌트 밖</span></span><br><span class="line"><span class="keyword">type</span> MatchParams = &#123;</span><br><span class="line">  id: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 컴포넌트 안 최상위</span></span><br><span class="line"><span class="keyword">const</span> match = useRouteMatch&lt;MatchParams&gt;(<span class="string">&quot;/start/:id&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 렌더 부분, 컴포넌트 안 return 부분</span></span><br><span class="line">&lt;Route path=<span class="string">&quot;/start/:id&quot;</span>&gt;</span><br><span class="line">  &lt;Start id=&#123;match?.params.id || <span class="string">&quot;&quot;</span>&#125; /&gt;</span><br><span class="line">&lt;/Route&gt;;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><figcaption><span>child.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 최상위, 컴포넌트 밖</span></span><br><span class="line"><span class="keyword">type</span> Props = &#123;</span><br><span class="line">  id: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 컴포넌트 선언부</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Start</span>(<span class="params">&#123; id &#125;: Props</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>차일드에서 <code>useRouteMatch</code>를 사용해보았는데, useEffect에서 무한루프에 걸려서</li><li>부모에서 전달해주었다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://velog.io/@bigbrothershin/%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EC%99%80-%EC%BF%BC%EB%A6%AC">velog.io/@bigbrothershin/React Router: 파라미터와 쿼리</a></li><li><a href="https://stackoverflow.com/questions/61392878/how-to-make-useroutematch-work-with-types-from-react-router">https://stackoverflow.com/questions/61392878/how-to-make-useroutematch-work-with-types-from-react-router</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/react-typescript/">react typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/url-params/">url params</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/16/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>내가 css를 작성하면서 많이 사용하는 줄임말, 스니펫?</title>
      <link>https://chinsun9.github.io/2020/12/15/%EB%82%B4%EA%B0%80-css%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%A9%B4%EC%84%9C-%EB%A7%8E%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A4%84%EC%9E%84%EB%A7%90-%EC%8A%A4%EB%8B%88%ED%8E%AB/</link>
      <guid>https://chinsun9.github.io/2020/12/15/%EB%82%B4%EA%B0%80-css%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%A9%B4%EC%84%9C-%EB%A7%8E%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A4%84%EC%9E%84%EB%A7%90-%EC%8A%A4%EB%8B%88%ED%8E%AB/</guid>
      <pubDate>Tue, 15 Dec 2020 04:20:40 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/%EB%82%B4%EA%B0%80-css%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%A9%B4%EC%84%9C-%EB%A7%8E%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/%EB%82%B4%EA%B0%80-css%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%A9%B4%EC%84%9C-%EB%A7%8E%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A4%84%EC%9E%84%EB%A7%90-%EC%8A%A4%EB%8B%88%ED%8E%AB20201215/preview.jpg" alt=" "></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.example</span> &#123;</span><br><span class="line">  <span class="comment">/* df */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* jcc */</span></span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* aic */</span></span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>짧게 쓰고 자동완성 시킨다</li><li>자동완성 시키고 <code>ctrl + enter</code> 로 새로운 라인으로 이동하여 이어서 작성한다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/flex/">flex</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/15/%EB%82%B4%EA%B0%80-css%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%A9%B4%EC%84%9C-%EB%A7%8E%EC%9D%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%A4%84%EC%9E%84%EB%A7%90-%EC%8A%A4%EB%8B%88%ED%8E%AB/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>chrome 드래그 앤 드랍 안됨</title>
      <link>https://chinsun9.github.io/2020/12/15/chrome-%EB%93%9C%EB%9E%98%EA%B7%B8-%EC%95%A4-%EB%93%9C%EB%9E%8D-%EC%95%88%EB%90%A8/</link>
      <guid>https://chinsun9.github.io/2020/12/15/chrome-%EB%93%9C%EB%9E%98%EA%B7%B8-%EC%95%A4-%EB%93%9C%EB%9E%8D-%EC%95%88%EB%90%A8/</guid>
      <pubDate>Tue, 15 Dec 2020 02:35:01 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;chrome이 관리자 권한으로 켜져있는지 확인한다.&lt;/li&gt;
&lt;li&gt;관리자 권한으로 켜지면 드래그 앤 드랍이 작동하지 않는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;TMI&quot;&gt;&lt;a href=&quot;#TMI&quot; class=&quot;headerlink&quot; ti</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>chrome이 관리자 권한으로 켜져있는지 확인한다.</li><li>관리자 권한으로 켜지면 드래그 앤 드랍이 작동하지 않는다.</li></ul><h2 id="TMI"><a href="#TMI" class="headerlink" title="TMI"></a>TMI</h2><ul><li>웹에서 드래그 앤 드랍으로 이미지를 첨부하는 기능을 넣었는데,</li></ul><p><img src="/images/chrome-%EB%93%9C%EB%9E%98%EA%B7%B8-%EC%95%A4-%EB%93%9C%EB%9E%8D-%EC%95%88%EB%90%A820201215/preview.jpg" alt=" "></p><ul><li>이상하게 마우스 커서가 위 처럼 되면서, 동작하지 않았다.</li><li>막 chrome://flags 들어가서 설정도 따라해보고,</li><li>windows 이미지 도구? 도 재설치해보고 삽질을 마구마구하다가.</li><li>그냥 관리자 권한으로 chrome이 켜져 있어서 안되었던 문제이다.</li></ul><ul><li>이밖에도 chrome이 관리자 권한으로 켜져있으면 안되는 것은,</li><li>카톡 등 메신저에서 다른 링크를 켤 때 정도가 있다.</li></ul><ul><li>chrome이 관리자 권한으로 켜지는 이유는</li><li>나는 vscode가 관리자 권한으로 실행되게 해놨다,</li><li>그래서 vscode에서 브라우저를 실행시킬 때 관리자권한으로 실행된다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/chrome/">chrome</category>
      
      <category domain="https://chinsun9.github.io/tags/%EA%B4%80%EB%A6%AC%EC%9E%90-%EA%B6%8C%ED%95%9C/">관리자 권한</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/15/chrome-%EB%93%9C%EB%9E%98%EA%B7%B8-%EC%95%A4-%EB%93%9C%EB%9E%8D-%EC%95%88%EB%90%A8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SyntaxError: Unexpected end of input</title>
      <link>https://chinsun9.github.io/2020/12/15/SyntaxError-Unexpected-end-of-input/</link>
      <guid>https://chinsun9.github.io/2020/12/15/SyntaxError-Unexpected-end-of-input/</guid>
      <pubDate>Tue, 15 Dec 2020 02:25:26 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/SyntaxError-Unexpected-end-of-input/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vscode에서는 아무 에러, 경고없이 잘 실행되었는데,&lt;/li&gt;
&lt;li&gt;SyntaxE</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/SyntaxError-Unexpected-end-of-input/preview.jpg" alt=" "></p><ul><li>vscode에서는 아무 에러, 경고없이 잘 실행되었는데,</li><li>SyntaxError-Unexpected-end-of-input 에러가 날 때가 있다.</li></ul><ul><li>나의 경우에는 api 서버가 host가 달라 cors mode로 리퀘스트를 보내야하는데</li><li>‘no-cors’ mode로 보내서 생긴 에러이다.</li></ul><ul><li>그 외에도 api서버에서 연산이 잘못되어 응답을 반환하지 않을 때에도 똑같은 에러가 나왔다.</li><li>그냥 서버로부터 결과를 제대로 받지 않으면 생기는 오류 같다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/15/SyntaxError-Unexpected-end-of-input/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>eslint prefer-template</title>
      <link>https://chinsun9.github.io/2020/12/15/eslint-prefer-template/</link>
      <guid>https://chinsun9.github.io/2020/12/15/eslint-prefer-template/</guid>
      <pubDate>Tue, 15 Dec 2020 02:09:46 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/eslint-prefer-template20201215/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;react typescript eslint airbnb style 로 웹 개발을 하고 있는데,,</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/eslint-prefer-template20201215/preview.jpg" alt=" "></p><ul><li>react typescript eslint airbnb style 로 웹 개발을 하고 있는데,,,</li><li><code>+</code> 로 문자열 이어붙이기를 사용했는데, eslint룰에 따라 자동 포맷팅 되었다..!</li><li>eslint가 처음에는 불편하기만 했는데, 지금은 너무 좋다…</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://eslint.org/docs/rules/prefer-template">https://eslint.org/docs/rules/prefer-template</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/eslint/">eslint</category>
      
      <category domain="https://chinsun9.github.io/tags/airbnb/">airbnb</category>
      
      <category domain="https://chinsun9.github.io/tags/prefer-template/">prefer-template</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/15/eslint-prefer-template/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>input:number 화살표 없애기</title>
      <link>https://chinsun9.github.io/2020/12/15/input-number-%ED%99%94%EC%82%B4%ED%91%9C-%EC%97%86%EC%95%A0%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/15/input-number-%ED%99%94%EC%82%B4%ED%91%9C-%EC%97%86%EC%95%A0%EA%B8%B0/</guid>
      <pubDate>Tue, 15 Dec 2020 02:00:59 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/input-number-%ED%99%94%EC%82%B4%ED%91%9C-%EC%97%86%EC%95%A0%EA%B8%B020201215/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;number </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/input-number-%ED%99%94%EC%82%B4%ED%91%9C-%EC%97%86%EC%95%A0%EA%B8%B020201215/preview.jpg" alt=" "></p><ul><li>number type 일 때, 기본으로 화살표가 나온다.</li><li>이거를 없애보자</li></ul><figure class="highlight css"><figcaption><span>example.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-outer-spin-button</span>,</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::-webkit-inner-spin-button</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.w3schools.com/howto/howto_css_hide_arrow_number.asp">https://www.w3schools.com/howto/howto_css_hide_arrow_number.asp</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/input/">input</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/15/input-number-%ED%99%94%EC%82%B4%ED%91%9C-%EC%97%86%EC%95%A0%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Clamp number (js)</title>
      <link>https://chinsun9.github.io/2020/12/15/Clamp-number/</link>
      <guid>https://chinsun9.github.io/2020/12/15/Clamp-number/</guid>
      <pubDate>Tue, 15 Dec 2020 01:57:01 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> clampNumber = <span class="function">(<span class="params">num, a, b</span>) =&gt;</span></span><br><span class="line">  <span class="built_in">Math</span>.max(<span class="built_in">Math</span>.min(num, <span class="built_in">Math</span>.max(a, b)), <span class="built_in">Math</span>.min(a, b));</span><br><span class="line"><span class="built_in">console</span>.log(clampNumber(<span class="number">-10</span>, <span class="number">0</span>, <span class="number">5</span>)); <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">console</span>.log(clampNumber(<span class="number">10</span>, <span class="number">0</span>, <span class="number">5</span>)); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure><ul><li>지정한 범위가 있고, 그 범위를 벗어나는 값이 들어왔을 때,</li><li>그 입력을 최소, 최대값 치환할 때 유용하다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.w3resource.com/javascript-exercises/fundamental/javascript-fundamental-exercise-266.php">https://www.w3resource.com/javascript-exercises/fundamental/javascript-fundamental-exercise-266.php</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/clamp/">clamp</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/15/Clamp-number/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>tab key를 눌렀을 때 버튼으로 포커스 되는 것 방지하기</title>
      <link>https://chinsun9.github.io/2020/12/15/tab-key%EB%A5%BC-%EB%88%8C%EB%A0%80%EC%9D%84-%EB%95%8C-%EB%B2%84%ED%8A%BC%EC%9C%BC%EB%A1%9C-%ED%8F%AC%EC%BB%A4%EC%8A%A4-%EB%90%98%EB%8A%94-%EA%B2%83-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/15/tab-key%EB%A5%BC-%EB%88%8C%EB%A0%80%EC%9D%84-%EB%95%8C-%EB%B2%84%ED%8A%BC%EC%9C%BC%EB%A1%9C-%ED%8F%AC%EC%BB%A4%EC%8A%A4-%EB%90%98%EB%8A%94-%EA%B2%83-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 15 Dec 2020 01:48:27 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight html&quot;&gt;&lt;figcaption&gt;&lt;span&gt;example.html&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight html"><figcaption><span>example.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span>&gt;</span>나는 탭 키를 눌러도 포커스 되지 않지.<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>나는 탭 키를 누르면 포커스 되지...<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><figcaption><span>example.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;button</span><br><span class="line">  type=<span class="string">&quot;button&quot;</span></span><br><span class="line">  tabIndex=&#123;<span class="number">-1</span>&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><ul><li>입력폼 같은걸을 작성할 때, tab 키로 다음 칸을 넘어가서 작성하는 경우가 있는데,</li><li>tab 키는 기본적으로 button에도 포커스가 간다.</li><li>포커스가 가지 않도록 해보자.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/2757973/can-i-ignore-some-website-element-when-navigating-using-the-tab-key">https://stackoverflow.com/questions/2757973/can-i-ignore-some-website-element-when-navigating-using-the-tab-key</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/tabindex/">tabindex</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/15/tab-key%EB%A5%BC-%EB%88%8C%EB%A0%80%EC%9D%84-%EB%95%8C-%EB%B2%84%ED%8A%BC%EC%9C%BC%EB%A1%9C-%ED%8F%AC%EC%BB%A4%EC%8A%A4-%EB%90%98%EB%8A%94-%EA%B2%83-%EB%B0%A9%EC%A7%80%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>playlist 202012</title>
      <link>https://chinsun9.github.io/2020/12/15/playlist-202012/</link>
      <guid>https://chinsun9.github.io/2020/12/15/playlist-202012/</guid>
      <pubDate>Tue, 15 Dec 2020 01:32:47 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZH3RG6fd-SX0_oyHbNFn-9z&quot; frameborder=&quot;0&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZH3RG6fd-SX0_oyHbNFn-9z" frameborder="0" loading="lazy" allowfullscreen></iframe></div><blockquote><p>~</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/playlist/">playlist</category>
      
      
      <category domain="https://chinsun9.github.io/tags/playlist/">playlist</category>
      
      <category domain="https://chinsun9.github.io/tags/music/">music</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/15/playlist-202012/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>202011 검색 실적</title>
      <link>https://chinsun9.github.io/2020/12/08/202011-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</link>
      <guid>https://chinsun9.github.io/2020/12/08/202011-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</guid>
      <pubDate>Tue, 08 Dec 2020 01:04:36 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/202011-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120201208/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;오.. google search console에서 검색 </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/202011-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120201208/preview.jpg" alt=" "></p><ul><li>오.. google search console에서 검색 실적을 메일로 알려준다. ㅋㅋ</li><li>깃헙 블로그도 어느덧 시작한 지 3달 정도 돼간다…</li><li>블로그 글은 개발하면서 새로 알게된 것들을 메모장같이 작성하고 있고,, 일부는 공략집처럼 작성하고 있다..(도움이 되길 바라며..)</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/google-search-console/">google search console</category>
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/08/202011-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Select elements must be either controlled or uncontrolled.</title>
      <link>https://chinsun9.github.io/2020/12/07/Select-elements-must-be-either-controlled-or-uncontrolled/</link>
      <guid>https://chinsun9.github.io/2020/12/07/Select-elements-must-be-either-controlled-or-uncontrolled/</guid>
      <pubDate>Mon, 07 Dec 2020 02:57:39 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/Select-elements-must-be-either-controlled-or-uncontrolled20201207/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Select elem</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/Select-elements-must-be-either-controlled-or-uncontrolled20201207/preview.jpg" alt=" "></p><blockquote><p>Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props.</p></blockquote><figure class="highlight plain"><figcaption><span>에러나는 코드</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;select value&#x3D;&#123;state&#125; defaultValue&#x3D;&quot;kr&quot; onChange&#x3D;&#123;changeLang&#125;&gt;</span><br><span class="line">  &lt;option value&#x3D;&quot;kr&quot;&gt;한국어&lt;&#x2F;option&gt;</span><br><span class="line">  &lt;option value&#x3D;&quot;en&quot;&gt;English&lt;&#x2F;option&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>에러 안나는 코드</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;select value&#x3D;&#123;state&#125; onChange&#x3D;&#123;changeLang&#125;&gt;</span><br><span class="line">  &lt;option value&#x3D;&quot;kr&quot;&gt;한국어&lt;&#x2F;option&gt;</span><br><span class="line">  &lt;option value&#x3D;&quot;en&quot;&gt;English&lt;&#x2F;option&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure><ul><li>defaultValue prop을 삭제하자.</li></ul><ul><li>Select elements는 컨트롤되거나 안되게 둘중 하나만 하라는 건데..</li><li>value prop와 defaultValue prop는 같이 사용할 수 없다고 한다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://reactjs.org/docs/forms.html#the-select-tag">https://reactjs.org/docs/forms.html#the-select-tag</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/select-tag/">select tag</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/07/Select-elements-must-be-either-controlled-or-uncontrolled/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Cannot use JSX unless the &#39;--jsx&#39; flag is provided.ts(17004)</title>
      <link>https://chinsun9.github.io/2020/12/04/Cannot-use-JSX-unless-the-jsx-flag-is-provided-ts-17004/</link>
      <guid>https://chinsun9.github.io/2020/12/04/Cannot-use-JSX-unless-the-jsx-flag-is-provided-ts-17004/</guid>
      <pubDate>Fri, 04 Dec 2020 06:16:49 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/Cannot-use-JSX-unless-the-jsx-flag-is-provided-ts-17004/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;react typescript에서 tsconfig가</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/Cannot-use-JSX-unless-the-jsx-flag-is-provided-ts-17004/preview.jpg" alt=" "></p><ul><li>react typescript에서 tsconfig가 계속 자동수정되는 문제 해결하기.</li></ul><figure class="highlight plain"><figcaption><span>오류 메시지 모음</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Cannot use JSX unless the &#39;--jsx&#39; flag is provided.ts(17004)</span><br><span class="line"></span><br><span class="line">Specify JSX code generation: &#39;preserve&#39;, &#39;react&#39;, &#39;react-jsx&#39;, &#39;react-jsxdev&#39; or&#39;react-native&#39;. Requires TypeScript version 2.2 or later.</span><br><span class="line"></span><br><span class="line">The following changes are being made to your tsconfig.json file:</span><br><span class="line">  - compilerOptions.jsx must be react-jsx (to support the new JSX transform in React 17)</span><br></pre></td></tr></table></figure><p><img src="/images/Cannot-use-JSX-unless-the-jsx-flag-is-provided-ts-17004/1.jpg" alt=" "></p><ul><li>.ts, .tsx 확장자의 아무 파일이나 열고,</li><li>F1 &gt; TypeScript 검색</li><li><code>TypeScript: Select TypeScript Version...</code> 선택</li><li>주의 : (타입스크립트 관련 파일이여야 위 명령이 검색된다)</li></ul><p><img src="/images/Cannot-use-JSX-unless-the-jsx-flag-is-provided-ts-17004/2.jpg" alt=" "></p><ul><li><code>Use Workspace Version</code> 을 선택해준다.</li></ul><figure class="highlight plain"><figcaption><span>.vscode/settings.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &#x2F;&#x2F; (...)</span><br><span class="line">  &quot;typescript.tsdk&quot;: &quot;node_modules\\typescript\\lib&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><em>.vscode/settings.json</em> 가보면 이렇게 업데이트 된것을 확인할 수 있다.</li></ul><h2 id="TMI"><a href="#TMI" class="headerlink" title="TMI"></a>TMI</h2><h3 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h3><ul><li>react typescript eslint airbnb rule 로 개발하는데</li><li><code>yarn start</code>로 시작을 하면 자동으로 tsconfig.json의</li><li>compilerOptions &gt; jsx 가 자동으로 “react-jsx”로 업데이트 됬다.</li><li>그런데 나는 “react-jsx”일 때 빨간줄이 마구 그어졌다.</li><li>그래서 yarn start 이후에 수동으로 “react”로 변경해 주었었다…</li></ul><h3 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h3><ul><li>워크스페이스의 typescript가 사용되지 않아서 발생한 문제였다.</li><li>compilerOptions &gt; jsx 가 “react-jsx” 여도 빨간줄이 안생긴다!</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/64974648/problem-with-visual-studio-code-using-react-jsx-as-jsx-value-with-create-react">problem-with-visual-studio-code-using-react-jsx-as-jsx-value-with-create-react</a></li><li><a href="https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-the-workspace-version-of-typescript">using-the-workspace-version-of-typescript</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/eslint/">eslint</category>
      
      <category domain="https://chinsun9.github.io/tags/tsconfig/">tsconfig</category>
      
      <category domain="https://chinsun9.github.io/tags/react-jsx/">react-jsx</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/04/Cannot-use-JSX-unless-the-jsx-flag-is-provided-ts-17004/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>예쁜 그라디언트</title>
      <link>https://chinsun9.github.io/2020/12/04/%EC%98%88%EC%81%9C-%EA%B7%B8%EB%9D%BC%EB%94%94%EC%96%B8%ED%8A%B8/</link>
      <guid>https://chinsun9.github.io/2020/12/04/%EC%98%88%EC%81%9C-%EA%B7%B8%EB%9D%BC%EB%94%94%EC%96%B8%ED%8A%B8/</guid>
      <pubDate>Fri, 04 Dec 2020 00:17:21 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/%EC%98%88%EC%81%9C-%EA%B7%B8%EB%9D%BC%EB%94%94%EC%96%B8%ED%8A%B820201204/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/%EC%98%88%EC%81%9C-%EA%B7%B8%EB%9D%BC%EB%94%94%EC%96%B8%ED%8A%B820201204/preview.jpg" alt=" "></p><p><a href="https://webgradients.com/">Fresh Background Gradients | WebGradients.com 💎</a></p><ul><li>예쁜 그라디언트 복붙해 오는 곳</li><li>png 이미지 또는</li><li>css 쉽게 가져올 수 있다</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gradient</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    <span class="number">45deg</span>,</span><br><span class="line">    #ff9a9e <span class="number">0%</span>,</span><br><span class="line">    #fad0c4 <span class="number">99%</span>,</span><br><span class="line">    #fad0c4 <span class="number">100%</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/gradient/">gradient</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/04/%EC%98%88%EC%81%9C-%EA%B7%B8%EB%9D%BC%EB%94%94%EC%96%B8%ED%8A%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo icarus 테마 프로필영역 css 수정</title>
      <link>https://chinsun9.github.io/2020/12/03/hexo-icarus-%ED%85%8C%EB%A7%88-%ED%94%84%EB%A1%9C%ED%95%84%EC%98%81%EC%97%AD-css-%EC%88%98%EC%A0%95/</link>
      <guid>https://chinsun9.github.io/2020/12/03/hexo-icarus-%ED%85%8C%EB%A7%88-%ED%94%84%EB%A1%9C%ED%95%84%EC%98%81%EC%97%AD-css-%EC%88%98%EC%A0%95/</guid>
      <pubDate>Thu, 03 Dec 2020 00:40:42 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/hexo-icarus-%ED%85%8C%EB%A7%88-%ED%94%84%EB%A1%9C%ED%95%84%EC%98%81%EC%97%AD-css-%EC%88%98%EC%A0%9520201203/preview.jpg</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/hexo-icarus-%ED%85%8C%EB%A7%88-%ED%94%84%EB%A1%9C%ED%95%84%EC%98%81%EC%97%AD-css-%EC%88%98%EC%A0%9520201203/preview.jpg" alt=" "></p><ul><li>오랜만에 블로그 이미지 들을 바꿨다.</li><li>적용시키고 나니까 128x128 사이즈에 안어울리는 것 같아서</li><li>크기 제한을 풀었다.</li></ul><figure class="highlight jsx"><figcaption><span>layout/widget/profile.jsx 37 line</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;<span class="comment">/* &lt;figure class=&quot;image is-128x128 mx-auto mb-2&quot;&gt; */</span>&#125;</span><br><span class="line">&lt;figure <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;image mx-auto mb-2&quot;</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>is-128x128 을 없애준다.</li><li>또는 자신의 고유한 클래스를 넣어주고 커스텀해도된다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog/">blog</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/hexo/">hexo</category>
      
      <category domain="https://chinsun9.github.io/tags/blog/">blog</category>
      
      <category domain="https://chinsun9.github.io/tags/icarus/">icarus</category>
      
      <category domain="https://chinsun9.github.io/tags/styl/">styl</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/03/hexo-icarus-%ED%85%8C%EB%A7%88-%ED%94%84%EB%A1%9C%ED%95%84%EC%98%81%EC%97%AD-css-%EC%88%98%EC%A0%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Smooth Page Transitions</title>
      <link>https://chinsun9.github.io/2020/12/02/Smooth-Page-Transitions/</link>
      <guid>https://chinsun9.github.io/2020/12/02/Smooth-Page-Transitions/</guid>
      <pubDate>Wed, 02 Dec 2020 06:30:04 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=1dJT-99KpiI&quot;&gt;Smooth Page Transitions With Javascript Tutorial&lt;/a&gt;를 보고 따라만들었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><a href="https://www.youtube.com/watch?v=1dJT-99KpiI">Smooth Page Transitions With Javascript Tutorial</a>를 보고 따라만들었다.</li></ul><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/6KBjjOOqYcY" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li><a href="https://chinsun9.github.io/smooth-page-transitions/">보러가기</a></li></ul><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><ul><li>영상 제목만 보고 단순히 css js를 이용한 트랜지션을 구현할 줄 알았는데,</li><li>node로 parcel, gsap, highway 를 사용해서 웹만드는 것을 배우게되었다.</li></ul><ul><li>parcel을 처음 써보았는데, 개발할 때도, 배포할 때에도 좋은 것 같다.</li><li>higyway와 gsap으로 애니메이션을 구현해 보았다.</li></ul><ul><li>parcel을 이용해 웹을 만들어 깃허브 페이지로 배포할 때,</li><li><code>parcel build index.html --out-dir docs --public-url ./</code></li><li>위 처럼 옵션을 넣어줘야한다.</li><li>–out-dir docs 는 깃허브 페이지 설정할 때 디렉터리</li><li>–public-url ./ 는 이미지, css, js 경로가 망가지지 않도록한다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.youtube.com/watch?v=1dJT-99KpiI">Smooth Page Transitions With Javascript Tutorial</a></li><li><a href="https://www.sitepoint.com/parcel-hyperapp-github-pages/">Use Parcel to Bundle a Hyperapp App &amp; Deploy to GitHub Pages</a></li><li><a href="https://github.com/chinsun9/smooth-page-transitions">https://github.com/chinsun9/smooth-page-transitions</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/scss/">scss</category>
      
      <category domain="https://chinsun9.github.io/tags/highway-js/">highway js</category>
      
      <category domain="https://chinsun9.github.io/tags/gsap/">gsap</category>
      
      <category domain="https://chinsun9.github.io/tags/parcel/">parcel</category>
      
      <category domain="https://chinsun9.github.io/tags/svg/">svg</category>
      
      <category domain="https://chinsun9.github.io/tags/freepik/">freepik</category>
      
      <category domain="https://chinsun9.github.io/tags/flaticon/">flaticon</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/02/Smooth-Page-Transitions/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
