<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Fri, 06 Nov 2020 00:22:47 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>RDS 삭제시 주의사항</title>
      <link>https://chinsun9.github.io/2020/11/06/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/</link>
      <guid>https://chinsun9.github.io/2020/11/06/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/</guid>
      <pubDate>Fri, 06 Nov 2020 00:14:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD20201106/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ㅠㅠ&lt;/li&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD20201106/preview.jpg" alt=" "></p><ul><li>ㅠㅠ</li></ul><h2 id="RDS-삭제-시-자동으로-스냅샷-생성"><a href="#RDS-삭제-시-자동으로-스냅샷-생성" class="headerlink" title="RDS 삭제 시 자동으로 스냅샷 생성"></a>RDS 삭제 시 자동으로 스냅샷 생성</h2><ul><li>RDS를 삭제하면 자동으로 스냅샷? 백업같은 것을 생성한다.</li></ul><p><img src="/images/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD20201106/1.jpg" alt=" "></p><ul><li>RDS를 사용중도아니고, 삭제하니까 비용이 생긴게 삭제하면서 생긴 스냅샷 보관 비용이였다.</li></ul><p><img src="/images/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD20201106/2.jpg" alt=" "></p><ul><li>RDS를 삭제한다면 RDS 삭제 후 꼭 <code>RDS &gt; 스냅샷</code> 에서 생성된 스냅샷도 같이 삭제..</li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/06/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>일렉트론으로 OBS input overlay 클론코딩</title>
      <link>https://chinsun9.github.io/2020/11/05/%EC%9D%BC%EB%A0%89%ED%8A%B8%EB%A1%A0%EC%9C%BC%EB%A1%9C-OBS-input-overlay-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</link>
      <guid>https://chinsun9.github.io/2020/11/05/%EC%9D%BC%EB%A0%89%ED%8A%B8%EB%A1%A0%EC%9C%BC%EB%A1%9C-OBS-input-overlay-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</guid>
      <pubDate>Thu, 05 Nov 2020 06:02:01 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/VVTzGOGayYA&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/VVTzGOGayYA" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p><img src="https://github.com/chinsun9/input-overlay-electron/raw/master/ReadmeRes/1.jpg" alt=" "></p><ul><li>오버워치 강의 영상을 보다가 영상속 키보드 마우스 뷰어? 를 가끔 보았었다.</li><li>일단 깔끔한 키보드 뷰어로 흥미가 생겼었는데</li><li>찾아보니까 OBS input overlay라는 OBS 전용 플러그인이었다.</li></ul><ul><li>일렉트론이라는 프레임워크를 사용하여</li><li>html, css, js로 데스크탑앱으로 만들어보았다.</li></ul><h2 id="신경쓴-것"><a href="#신경쓴-것" class="headerlink" title="신경쓴 것"></a>신경쓴 것</h2><h3 id="글로벌-키-훅"><a href="#글로벌-키-훅" class="headerlink" title="글로벌 키 훅?"></a>글로벌 키 훅?</h3><ul><li>내가 만든 앱 밖에서 키가 눌리고 떼지는걸 알아야한다.</li></ul><figure class="highlight js"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ioHook = <span class="built_in">require</span>(<span class="string">&#x27;iohook&#x27;</span>);</span><br><span class="line"></span><br><span class="line">ioHook.on(<span class="string">&#x27;keydown&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  mainWindow.webContents.send(<span class="string">&#x27;keydown&#x27;</span>, event.rawcode);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>iohook 패키지를 사용해서 해결하게되었다.</li><li>그런데 iohook이 최신버전의 일렉트론에서 실행이 안되어서 일렉트론 8.x버전으로 낮추어 진행하게되었다.</li></ul><h3 id="overlay-window"><a href="#overlay-window" class="headerlink" title="overlay window"></a>overlay window</h3><ul><li>오버레이화면에 마우스 클릭이 되지 않도록 했다.</li><li>오버레이화면이 프레임을 가지지 않도록 했다</li><li>오버레이화면이 모니터 크기를 구하여 우측하단에 생기도록 하였다. (여러 해상도 대응)</li></ul><h2 id="일렉트론"><a href="#일렉트론" class="headerlink" title="일렉트론"></a>일렉트론</h2><ul><li>웹을 만든느 기술로 데스크탑앱을 만들 수 있게해주는 마법이다.</li><li>나는 요즘 js만 해왔기때문에 일렉트론에 대해 찾아보았다.</li><li>일렉트론으로 만들어진 대표적인 앱으로는 비쥬얼 스튜디오 코드가 있다.</li></ul><h2 id="일렉트론-시작"><a href="#일렉트론-시작" class="headerlink" title="일렉트론 시작"></a>일렉트론 시작</h2><ul><li><a href="https://youtu.be/TnXz_nnQZrw">Create Desktop App + Installer with HTML/CSS/JS - Electron Tutorial 2020</a> 유튜브를 보며 시작했다</li><li><code>create-electron-app</code> 를 통해 express-generator 처럼 빠르게 프로젝트를 시작할 수 있다.</li><li><code>electron-builder</code> 를 통해 배포용 setup 파일을 생성할 수 있다.</li><li>소스코드 ; <a href="https://github.com/chinsun9/electron-practice">https://github.com/chinsun9/electron-practice</a></li></ul><h2 id="일렉트론-단점"><a href="#일렉트론-단점" class="headerlink" title="일렉트론 단점?"></a>일렉트론 단점?</h2><ul><li>엄청나게 간단한 앱일지라도 nodejs + Chromium 조합으로 용량이 상당히크다.</li></ul><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><ul><li><a href="https://github.com/chinsun9/input-overlay-electron">Input Overlay (Electron)</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/05/%EC%9D%BC%EB%A0%89%ED%8A%B8%EB%A1%A0%EC%9C%BC%EB%A1%9C-OBS-input-overlay-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>nodejs + socketio 로 만드는 채팅 앱, 카카오톡 클론코딩?</title>
      <link>https://chinsun9.github.io/2020/11/03/nodejs-socketio-%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EC%B1%84%ED%8C%85-%EC%95%B1/</link>
      <guid>https://chinsun9.github.io/2020/11/03/nodejs-socketio-%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EC%B1%84%ED%8C%85-%EC%95%B1/</guid>
      <pubDate>Tue, 03 Nov 2020 07:17:59 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/9_1ujY4Flb4&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/9_1ujY4Flb4" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>Web Dev Simplified의 <a href="https://youtu.be/rxzOqP9YwmM">Build a Real Time Chat App With Node.js And Socket.io</a>을 보고 따라만들기</li><li>nodejs에서 html과 socket.io로 간단하게 챗앱을 만드는 것을 따라해보았다.</li><li>Web Dev Simplified 정말 심플하게 잘알려준다.. ㄷㄷ 따라 만들면서 행복했다.</li><li>따라만들고 카카오톡같은 css를 입히고,</li><li>디테일한 기능을 추가 해줬다.</li></ul><h2 id="추가한-기능"><a href="#추가한-기능" class="headerlink" title="추가한 기능"></a>추가한 기능</h2><ul><li>고유한 프로필 사진 생성(랜덤색 + 이니셜)</li><li>현재 채팅에 참가한 유저 목록 위젯</li><li>width값이 작아지면 유저 목록 위젯 숨김</li><li>width값이 작아지면 프로필 사진 영역 숨김</li><li>같은 사람이 연달아 올릴 때 프로필 사진 생략</li><li>같은 사람이 같은 시간에 연달아 올릴 때 가장 최근 메시지에만 시간표시</li><li>메시지는 plain text로 표시</li></ul><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><ul><li><a href="https://github.com/chinsun9/chat-app-nodejs-and-socketio">chat-app-nodejs-and-socketio</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/03/nodejs-socketio-%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EC%B1%84%ED%8C%85-%EC%95%B1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>reqres.in으로 ajax 연습하기</title>
      <link>https://chinsun9.github.io/2020/11/03/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/03/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 03 Nov 2020 06:39:59 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;a href=&quot;https://reqres.in/&quot;&gt;&lt;img src=&quot;/images/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B020201103/preview.jpg&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><a href="https://reqres.in/"><img src="/images/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B020201103/preview.jpg" alt=" "></a></p><ul><li><a href="https://reqres.in/">Reqres</a> 에서 다양한 api를 제공하고있다.</li><li>cors를 허용하기 때문에 localhost에서도 요청을보내고 응답을 받을 수 있다.</li><li>ajax 연습이나, 간단한 앱을 만들 때, 서버를 만들지 않고,</li><li>reqres에서 제공하는 api를 사용할 수 있겠다.</li></ul><h2 id="get-api"><a href="#get-api" class="headerlink" title="get api"></a>get api</h2><blockquote><p><a href="https://reqres.in/api/users?page=2">https://reqres.in/api/users?page=2</a> // 유저 목록 2페이지 보기<br><a href="https://reqres.in/api/users/2">https://reqres.in/api/users/2</a> // 2번 유저 보기<br><a href="https://reqres.in/api/users/23">https://reqres.in/api/users/23</a> // 23번 유저 보기(없는 유저)</p></blockquote><blockquote><p>// products보기, products 부분은 어떤 문자열로든 치환이 가능해서 원하는 느낌의 문자열을 적어주면된다.<br><a href="https://reqres.in/api/products">https://reqres.in/api/products</a><br><a href="https://reqres.in/api/products/1">https://reqres.in/api/products/1</a></p></blockquote>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/03/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>포트 포워딩 체크 웹 클론코딩</title>
      <link>https://chinsun9.github.io/2020/11/03/%ED%8F%AC%ED%8A%B8-%ED%8F%AC%EC%9B%8C%EB%94%A9-%EC%B2%B4%ED%81%AC-%EC%9B%B9-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</link>
      <guid>https://chinsun9.github.io/2020/11/03/%ED%8F%AC%ED%8A%B8-%ED%8F%AC%EC%9B%8C%EB%94%A9-%EC%B2%B4%ED%81%AC-%EC%9B%B9-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</guid>
      <pubDate>Tue, 03 Nov 2020 06:11:51 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/4IMSpyKuhL4&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/4IMSpyKuhL4" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>서버를 열어놨는데, 외부에서 접근이 가능한지 불가능한지,</li><li>포트포워딩을 확인하고 싶으면</li><li>핸드폰을 열고 데이터를 켜서 내 서버로 접속해서 확인하는 등 번거롭게 확인했다.</li><li><a href="https://www.yougetsignal.com/tools/open-ports/">https://www.yougetsignal.com/tools/open-ports/</a> 라는 포트포워딩 체크 웹이 있는데</li><li>이거를 한번 클론 코딩해보았다.</li></ul><h2 id="영상설명"><a href="#영상설명" class="headerlink" title="영상설명"></a>영상설명</h2><ul><li><p>나는 ec2에 올려서 테스트해봤다</p></li><li><p>주소창에 보면 <code>15.165.000.000:4000</code> 으로 나오는데 내 ec2 ip인데 일부러 뒷부분을 000.000으로 바꿔놨다.</p></li><li><p>이 앱은 ec2의 4000포트에서 동작중이다.</p></li><li><p>도메인명이나 ip를 입력하고 포트입력란에 원하는 포트를 입력한다.</p></li><li><p>그리고 <code>check</code> 버튼을 누르면 해당 포트가 열려있는지 확인한다.</p></li><li><p>당연히 해당 포트를 리슨하는 서버가 동작하고 있어야한다.</p></li><li><p>우측 common ports 에서 원하는 포트를 클릭하면 해당 포트로 요청을 보낸다.</p></li><li><p><code>Scan All Common Ports</code> 버튼을 눌러 모든 common port를 스캔한다.</p></li></ul><ul><li><code>0:18</code> 중간에는 마인크래프트 서버를 체크해본다.</li><li><code>0:35</code> localhost로 적으면 내 ec2의 포트를 스캔하게된다.</li><li>localhost를 common port를 모두 스캔해보니 3000번이 열려있다는 것을 알 수 있다</li><li><code>0:48</code> 이 앱이 실행되고 있는 4000번 포트를 스캔해보니</li><li>당연하게 열려있는 모습을 확인할 수 있다</li></ul><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><ul><li><a href="https://github.com/chinsun9/open-port-check-web">open-port-check-web</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/03/%ED%8F%AC%ED%8A%B8-%ED%8F%AC%EC%9B%8C%EB%94%A9-%EC%B2%B4%ED%81%AC-%EC%9B%B9-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>리눅스에서 특정 포트를 사용하는 프로세스 확인하기</title>
      <link>https://chinsun9.github.io/2020/11/03/%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%ED%8A%B9%EC%A0%95-%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/03/%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%ED%8A%B9%EC%A0%95-%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 03 Nov 2020 05:44:26 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight bash&quot;&gt;&lt;figcaption&gt;&lt;span&gt;terminal&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8080</span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> -9 $(lsof -t -i:8080)</span><br></pre></td></tr></table></figure><ul><li><code>ps -ef|grep node</code> 이런식으로 node로 실행한 웹서버를 확인했었는데,</li><li>node로 실행한 많은 앱이 있을때 어떤게 내가 생각하는 앱인지 헷갈릴때가 있다.</li><li>이럴때 특정 포트를 사용하는 프로세스를 어떻게 검색할까 하다가 알아보았다.</li></ul><h2 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h2><figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:3000</span><br></pre></td></tr></table></figure><blockquote><p>COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME<br>node 13721 ec2-user 18u IPv6 389226 0t0 TCP *:hbci (LISTEN)</p></blockquote><ul><li>이런식으로 해당 포트를 사용하는 프로세스를 확인할 수 있다.</li></ul><figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -t -i:3000</span><br></pre></td></tr></table></figure><blockquote><p>13721</p></blockquote><ul><li><code>-t</code>옵션을 추가하면 pid만 깔끔하게 얻을 수 있어</li><li><code>kill -9 $(lsof -t -i:3000)</code> 이런식으로 묶어서 사용할 수 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/11583562/how-to-kill-a-process-running-on-particular-port-in-linux">https://stackoverflow.com/questions/11583562/how-to-kill-a-process-running-on-particular-port-in-linux</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/03/%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%ED%8A%B9%EC%A0%95-%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>li point remove</title>
      <link>https://chinsun9.github.io/2020/11/03/li-point-remove/</link>
      <guid>https://chinsun9.github.io/2020/11/03/li-point-remove/</guid>
      <pubDate>Tue, 03 Nov 2020 04:29:00 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight css&quot;&gt;&lt;figcaption&gt;&lt;span&gt;default.css&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight css"><figcaption><span>default.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/li-point-remove20201103/preview.jpg" alt=" "></p><ul><li>li의 앞에 붙는 . 을 없앨 수 있다.</li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/03/li-point-remove/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo tag plugin 유튜브 재생목록 넣는법</title>
      <link>https://chinsun9.github.io/2020/11/03/hexo-tag-plugin-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%9E%AC%EC%83%9D%EB%AA%A9%EB%A1%9D-%EB%84%A3%EB%8A%94%EB%B2%95/</link>
      <guid>https://chinsun9.github.io/2020/11/03/hexo-tag-plugin-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%9E%AC%EC%83%9D%EB%AA%A9%EB%A1%9D-%EB%84%A3%EB%8A%94%EB%B2%95/</guid>
      <pubDate>Tue, 03 Nov 2020 00:36:19 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight md&quot;&gt;&lt;figcaption&gt;&lt;span&gt;hexo post.md&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight md"><figcaption><span>hexo post.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#x27;playlist&#x27; %&#125;</span><br></pre></td></tr></table></figure><ul><li>게시하고싶은 재생목록의 id값을 알아온다.</li><li>재생목록을 가져온경우에는 id 뒤에 <code>&#39;playlist&#39;</code>를 붙여주면 된다.</li><li>나는 playlist라는 카테고리를 만들고 내가 듣는 노래를 이달의 재생목록처럼 업로드할려고</li><li>hexo에서 재생목록 표현하는 방법이 없나하고 알아보았다.</li></ul><h2 id="유튜브-재생목록-id-알아내기"><a href="#유튜브-재생목록-id-알아내기" class="headerlink" title="유튜브 재생목록 id 알아내기"></a>유튜브 재생목록 id 알아내기</h2><blockquote><p><a href="https://www.youtube.com/playlist?list=PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B">https://www.youtube.com/playlist?list=PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B</a><br>id : PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B</p></blockquote><ul><li>게시하고싶은 재생목록에 들어가면 url에 list라는 파라매터가 있는데 그게 id이다.</li></ul><h2 id="hexo-tag-plugin"><a href="#hexo-tag-plugin" class="headerlink" title="hexo tag-plugin"></a>hexo tag-plugin</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube lJIrF4YjHfQ %&#125;</span><br><span class="line">&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#39;playlist&#39; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% youtube lJIrF4YjHfQ false %&#125;</span><br><span class="line">&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#39;playlist&#39; false %&#125;</span><br></pre></td></tr></table></figure><ul><li>기본 md에서는 표현하지 못하는 것을 표현하게 해줌</li><li>당연히 hexo 블로그에서만 사용가능</li><li>맨 마지막에 <code>false</code>를 붙여주면 Enable privacy-enhanced mode 라고 유튜브 쿠키를 사용하지 않도록 한다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://hexo.io/ko/docs/tag-plugins.html#Examples">https://hexo.io/ko/docs/tag-plugins.html#Examples</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/03/hexo-tag-plugin-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%9E%AC%EC%83%9D%EB%AA%A9%EB%A1%9D-%EB%84%A3%EB%8A%94%EB%B2%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>playlist 202011</title>
      <link>https://chinsun9.github.io/2020/11/03/playlist-202011/</link>
      <guid>https://chinsun9.github.io/2020/11/03/playlist-202011/</guid>
      <pubDate>Tue, 03 Nov 2020 00:23:58 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B&quot; frameborder=&quot;0&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B" frameborder="0" loading="lazy" allowfullscreen></iframe></div><blockquote><p>~</p></blockquote>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/03/playlist-202011/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>playlist 201906</title>
      <link>https://chinsun9.github.io/2020/11/03/playlist-201906/</link>
      <guid>https://chinsun9.github.io/2020/11/03/playlist-201906/</guid>
      <pubDate>Tue, 03 Nov 2020 00:22:08 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZEWuCfVjNkkwJJmhw1DzwG0&quot; frameborder=&quot;0&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZEWuCfVjNkkwJJmhw1DzwG0" frameborder="0" loading="lazy" allowfullscreen></iframe></div><blockquote><p>~</p></blockquote>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/03/playlist-201906/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>nodemon 변화감지 디렉터리 지정</title>
      <link>https://chinsun9.github.io/2020/11/02/nodemon-%EB%B3%80%ED%99%94%EA%B0%90%EC%A7%80-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC-%EC%A7%80%EC%A0%95/</link>
      <guid>https://chinsun9.github.io/2020/11/02/nodemon-%EB%B3%80%ED%99%94%EA%B0%90%EC%A7%80-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC-%EC%A7%80%EC%A0%95/</guid>
      <pubDate>Mon, 02 Nov 2020 07:33:37 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;figcaption&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/p</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon --watch app app/server.js</span><br></pre></td></tr></table></figure><ul><li>nodemon을 사용해서 코드수정마다 서버를 자동으로 재시작하는데,</li><li>view와 관련한 코드를 수정할 때 서버가 재시작되는 것은 불필요하고, 세션이 날라가는 등 오히려 불편할 수 있다.</li><li>nodemon이 모든 프로젝트 디렉터리가 아닌 특정 디렉터리의 변화를 감시하고 재시작되는 것을 알아보자</li></ul><h2 id="명령어"><a href="#명령어" class="headerlink" title="명령어"></a>명령어</h2><figure class="highlight cmd"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon ./bin/www</span><br></pre></td></tr></table></figure><ul><li>보통 이렇게 아무것도 없이 사용하면, 거의 모든 변화마다 서버가 재시작된다.</li></ul><figure class="highlight cmd"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon --watch routes ./bin/www</span><br></pre></td></tr></table></figure><ul><li><code>--watch routes</code> watch옵션을 넣어줌으로써 해당 디렉터리에서 변화가 있으면 재시작하도록 할 수 있다.</li></ul><figure class="highlight cmd"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon --watch routes --watch libs ./bin/www</span><br></pre></td></tr></table></figure><ul><li>이런식으로 나열할 수 있다.</li><li>기본적으로 디렉터리명을 적어야하며, 하위디렉터리는 자동으로 포함된다.</li></ul><ul><li>그런데 여러개의 디렉터리를 나열을 해야하면은</li><li>반대로 무시할 디렉터리를 설정하는게 빠를 수 있다.</li></ul><h2 id="config-file로-설정"><a href="#config-file로-설정" class="headerlink" title="config file로 설정"></a>config file로 설정</h2><figure class="highlight json"><figcaption><span>nodemon.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;restartable&quot;</span>: <span class="string">&quot;rs&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;ignore&quot;</span>: [<span class="string">&quot;.git&quot;</span>, <span class="string">&quot;node_modules/**/node_modules&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;verbose&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;execMap&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;js&quot;</span>: <span class="string">&quot;node --harmony&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;events&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;restart&quot;</span>: <span class="string">&quot;osascript -e &#x27;display notification \&quot;App restarted due to:\n&#x27;$FILENAME&#x27;\&quot; with title \&quot;nodemon\&quot;&#x27;&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;watch&quot;</span>: [<span class="string">&quot;test/fixtures/&quot;</span>, <span class="string">&quot;test/samples/&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;env&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;NODE_ENV&quot;</span>: <span class="string">&quot;development&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;ext&quot;</span>: <span class="string">&quot;js,json&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>nodemon.json</code>이름으로 파일을 하나 만들고 커스텀할 수 있다.</li><li>무시할 디렉터리를 <code>ignore</code> 배열에 나열하면 된다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/remy/nodemon#monitoring-multiple-directories">https://github.com/remy/nodemon#monitoring-multiple-directories</a></li><li><a href="https://github.com/remy/nodemon/blob/master/doc/sample-nodemon.md">https://github.com/remy/nodemon/blob/master/doc/sample-nodemon.md</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/02/nodemon-%EB%B3%80%ED%99%94%EA%B0%90%EC%A7%80-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC-%EC%A7%80%EC%A0%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>awesome button css</title>
      <link>https://chinsun9.github.io/2020/11/02/awesome-button-css/</link>
      <guid>https://chinsun9.github.io/2020/11/02/awesome-button-css/</guid>
      <pubDate>Mon, 02 Nov 2020 06:58:52 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/4DkMKyWJlvk&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/4DkMKyWJlvk" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li><a href="https://www.youtube.com/watch?v=4DkMKyWJlvk">Button With Awesome Hover Effects using Html CSS &amp; jQuery | mouseenter and mouseout events</a></li><li>위 영상을 보고 따라 만들었다.</li><li>영상에서는 제이쿼리를 사용해서 구현하지만, 나는 제이쿼리없이 구현해보았다.</li></ul><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/xGTjTFfy4N4" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>참고 ; <a href="https://github.com/chinsun9/awesome-button-css">소스코드</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/02/awesome-button-css/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>github api로 특정 저장소의 커밋내역 불러오기</title>
      <link>https://chinsun9.github.io/2020/11/02/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/02/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0/</guid>
      <pubDate>Mon, 02 Nov 2020 04:11:22 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B020201102/preview.jpg" alt=" "></p><ul><li>깃허브 api로 특정 저장소 커밋내역 json으로 받아보기</li><li>나는 내 special repository인 chinsun9 저장소의 커밋내역을 받아와보았다.</li></ul><h2 id="github-api"><a href="#github-api" class="headerlink" title="github api"></a>github api</h2><blockquote><p><a href="https://api.github.com/repos/chinsun9/chinsun9/commits">https://api.github.com/repos/chinsun9/chinsun9/commits</a><br><a href="https://api.github.com/repos/%7B%EC%9C%A0%EC%A0%80%EB%AA%85%7D/%7B%EC%A0%80%EC%9E%A5%EC%86%8C%EB%AA%85%7D/commits">https://api.github.com/repos/{유저명}/{저장소명}/commits</a></p></blockquote><ul><li>js에서는 fetch api로 데이터를 가져와 원하는 로직을 수행하면 될 것 같다.</li><li>github api가 있다는 것을 알아보았고, 맛보기를 해보았다.</li><li>비공개 저장소 접근이나 다른 유용한 api가 있는지 알아보고 활용하면 좋을 것 같다.</li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/02/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 워크스페이스, 프로젝트별로 설정 다르게하기</title>
      <link>https://chinsun9.github.io/2020/11/02/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/02/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 02 Nov 2020 02:56:35 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%E</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/preview.jpg" alt=" "></p><ul><li>각 프로젝트 마다 다른 vscode세팅값을 주고 싶을 때 유용하다.</li></ul><h2 id="따라하기"><a href="#따라하기" class="headerlink" title="따라하기"></a>따라하기</h2><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/1.jpg" alt=" "></p><ul><li><code>Ctrl + Shift + P</code> 단축키를누르고 setting을 입력한다</li><li><code>Preferences: Open Settings (UI)</code>를 선택한다.</li></ul><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/2.jpg" alt=" "></p><ul><li>세팅화면이 나오면 상단 User, Workspace 탭이 있는데 Workspace탭을 클릭한다.</li></ul><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/3.jpg" alt=" "></p><ul><li>나는 예시로 이 프로젝트에서는 node_modules라는 폴더를 vscode 탐색기에서 보여주고싶지않다.</li></ul><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/4.jpg" alt=" "></p><ul><li>exclude를 검색하면 Files: Exclude가 나오는데, Add Pattern 버튼을 눌러 node_modules를 추가한다.</li></ul><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/preview.jpg" alt=" "></p><ul><li>우측 탐색기에서 node_modules 파일이 더이상 보이지 않으며, <code>.vscode</code>라는 폴더와 그 아래 <code>settings.json</code>이라는 파일이 생성된 것을 확인 할 수 있다.</li><li>이렇게 프로젝트별로 다른 vscode 세팅값을 가질 수 있다.</li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/02/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 라인 이동 단축키</title>
      <link>https://chinsun9.github.io/2020/11/02/vscode-%EB%9D%BC%EC%9D%B8-%EC%9D%B4%EB%8F%99-%EB%8B%A8%EC%B6%95%ED%82%A4/</link>
      <guid>https://chinsun9.github.io/2020/11/02/vscode-%EB%9D%BC%EC%9D%B8-%EC%9D%B4%EB%8F%99-%EB%8B%A8%EC%B6%95%ED%82%A4/</guid>
      <pubDate>Mon, 02 Nov 2020 02:47:12 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Ctrl-G&quot;&gt;&lt;a href=&quot;#Ctrl-G&quot; class=&quot;headerlink&quot; title=&quot;Ctrl + G&quot;&gt;&lt;/a&gt;Ctrl + G&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;오류 라인을 갈 떄,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + G&lt;/code&gt; 로</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Ctrl-G"><a href="#Ctrl-G" class="headerlink" title="Ctrl + G"></a>Ctrl + G</h2><ul><li>오류 라인을 갈 떄,</li><li><code>Ctrl + G</code> 로 마우스 손안대고 이동할 수 있다.</li></ul><h2 id="Ctrl-rightArrow"><a href="#Ctrl-rightArrow" class="headerlink" title="Ctrl + rightArrow"></a>Ctrl + rightArrow</h2><h2 id="Ctrl-leftArrow"><a href="#Ctrl-leftArrow" class="headerlink" title="Ctrl + leftArrow"></a>Ctrl + leftArrow</h2><ul><li><code>Ctrl + left|right arrow key</code> 로 단어단위로 커서를 이동시킬 수 있다.</li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/02/vscode-%EB%9D%BC%EC%9D%B8-%EC%9D%B4%EB%8F%99-%EB%8B%A8%EC%B6%95%ED%82%A4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>shell script 경로에서 실행</title>
      <link>https://chinsun9.github.io/2020/11/02/shell-script-%EA%B2%BD%EB%A1%9C%EC%97%90%EC%84%9C-%EC%8B%A4%ED%96%89/</link>
      <guid>https://chinsun9.github.io/2020/11/02/shell-script-%EA%B2%BD%EB%A1%9C%EC%97%90%EC%84%9C-%EC%8B%A4%ED%96%89/</guid>
      <pubDate>Mon, 02 Nov 2020 02:04:43 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight bash&quot;&gt;&lt;figcaption&gt;&lt;span&gt;bash&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight bash"><figcaption><span>bash</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dirpath=`dirname <span class="variable">$0</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$dirpath</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$dirpath</span></span><br></pre></td></tr></table></figure><ul><li>셸 스크립트 파일 경로로부터 명령을 실행할 수 있다</li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/11/02/shell-script-%EA%B2%BD%EB%A1%9C%EC%97%90%EC%84%9C-%EC%8B%A4%ED%96%89/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>깃허브 자기 닉네임 저장소 special repository</title>
      <link>https://chinsun9.github.io/2020/10/30/%EA%B9%83%ED%97%88%EB%B8%8C-%EC%9E%90%EA%B8%B0-%EB%8B%89%EB%84%A4%EC%9E%84-%EC%A0%80%EC%9E%A5%EC%86%8C/</link>
      <guid>https://chinsun9.github.io/2020/10/30/%EA%B9%83%ED%97%88%EB%B8%8C-%EC%9E%90%EA%B8%B0-%EB%8B%89%EB%84%A4%EC%9E%84-%EC%A0%80%EC%9E%A5%EC%86%8C/</guid>
      <pubDate>Fri, 30 Oct 2020 07:38:10 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/%EA%B9%83%ED%97%88%EB%B8%8C-%EC%9E%90%EA%B8%B0-%EB%8B%89%EB%84%A4%EC%9E%84-%EC%A0%80%EC%9E%A5%EC%86%8C20201030/preview.</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/%EA%B9%83%ED%97%88%EB%B8%8C-%EC%9E%90%EA%B8%B0-%EB%8B%89%EB%84%A4%EC%9E%84-%EC%A0%80%EC%9E%A5%EC%86%8C20201030/preview.jpg" alt=" "></p><ul><li><a href="https://github.com/chinsun9">https://github.com/chinsun9</a> 자기 깃허브 메인화면에 가장 처음 표시되는 readme파일의 저장소다!</li><li>내가 어떤 개발자인지 보여주는 용도이다.</li><li>GitHub Readme Stats를 통해 자기 깃허브 활동을 시각적으로 보여주면 더 좋다!</li></ul><h2 id="special-repository"><a href="#special-repository" class="headerlink" title="special repository"></a>special repository</h2><ul><li>github에서 저장소명을 자신의 닉네임이랑 똑같이 하면 special repository 라는 것이 만들어진다.</li><li>이 special repository는 내 깃허브 메인 화면에서 가장 처음으로 보여지는데,</li><li>여기서 내 프로필을 적어서 나를 자랑?할 수 있다.</li></ul><h2 id="GitHub-Readme-Stats"><a href="#GitHub-Readme-Stats" class="headerlink" title="GitHub Readme Stats"></a><a href="https://github.com/anuraghazra/github-readme-stats">GitHub Readme Stats</a></h2><ul><li><a href="https://github-readme-stats.vercel.app/api?username=%7B%EB%82%B4">https://github-readme-stats.vercel.app/api?username={내</a> 깃허브닉네임}</li><li><a href="https://github-readme-stats.vercel.app/api/top-langs/?username=%7B%EB%82%B4">https://github-readme-stats.vercel.app/api/top-langs/?username={내</a> 깃허브닉네임}</li><li>아무 설치없이 간단하게 내 깃허브 활동 통계를 볼 수 있다..!</li></ul><h2 id="chinsung-chinsung"><a href="#chinsung-chinsung" class="headerlink" title="chinsung/chinsung"></a>chinsung/chinsung</h2><ul><li><a href="https://github.com/chinsun9/chinsun9">https://github.com/chinsun9/chinsun9</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/10/30/%EA%B9%83%ED%97%88%EB%B8%8C-%EC%9E%90%EA%B8%B0-%EB%8B%89%EB%84%A4%EC%9E%84-%EC%A0%80%EC%9E%A5%EC%86%8C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>linux node app 백그라운드 실행</title>
      <link>https://chinsun9.github.io/2020/10/30/linux-node-app-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C-%EC%8B%A4%ED%96%89/</link>
      <guid>https://chinsun9.github.io/2020/10/30/linux-node-app-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C-%EC%8B%A4%ED%96%89/</guid>
      <pubDate>Fri, 30 Oct 2020 07:01:54 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup npm start &amp;</span><br></pre></td></tr></table></figure><ul><li>ec2에서 24시간 돌아가는 웹 앱을 돌릴일이 생겼다.</li><li>그런데 처음에 그냥 마지막에 &amp;만 붙여주면 되겠지 하고</li><li><code>npm start &amp;</code> 명령을 치고 리모트를 종료했더니, 리모트를 종료하는 순간 앱 실행도 멈췄다.</li><li>왜 그런가 했더니 단순히 <code>&amp;</code>을 붙이고 실행한 프로세스는 터미널이 종료하면 같이 꺼진다고 한다.</li></ul><h2 id="nohup"><a href="#nohup" class="headerlink" title="nohup"></a>nohup</h2><ul><li>리눅스에서는 특별한 패키지 설치없이도 완전한? 백그라운드 실행을 가능하게해주는 명령이 있다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nohup npm start &amp;</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><ul><li>이렇게 실행하고 exit을 눌러 나와주면 터미널이 자동으로 닫힌다.</li><li>하지만 앱은 계속해서 실행되고 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://jahong.tistory.com/entry/EC2-deploy-server-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EB%A5%BC-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C%EC%97%90%EC%84%9C-%EC%8B%A4%ED%96%89%EC%8B%9C%ED%82%A4%EA%B8%B0">https://jahong.tistory.com/entry/EC2-deploy-server-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EB%A5%BC-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C%EC%97%90%EC%84%9C-%EC%8B%A4%ED%96%89%EC%8B%9C%ED%82%A4%EA%B8%B0</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/10/30/linux-node-app-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C-%EC%8B%A4%ED%96%89/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ec2 web app https 적용하기</title>
      <link>https://chinsun9.github.io/2020/10/30/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/10/30/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 30 Oct 2020 00:36:42 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;웹에서 위치정보를 활용하고 싶어서 ge</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/preview.jpg" alt=" "></p><ul><li>웹에서 위치정보를 활용하고 싶어서 geolocation을 사용했는데,</li><li>geolocation은 localhost 또는 https에서만 동작했다.</li><li>위치정보를 활용하는 이 앱을 다른사람들에게 배포하기 위해서는 https를 사용했어야 했다.</li></ul><ul><li>삽질을 많이했는데, 어떻게 하는지 정리한다. 할게 쫌 많고, 중간중간 대기시간이 길다.</li><li>처음부터 끝까지 무료로 하는 법이다</li><li>따라하면 ec2에서 express로 돌아가는 웹앱에 https를 적용할 수 있다.</li></ul><h2 id="내가-시도한-환경"><a href="#내가-시도한-환경" class="headerlink" title="내가 시도한 환경"></a>내가 시도한 환경</h2><ul><li>aws 프리티어</li><li>ec2 (아마존 리눅스 2)</li><li>탄력적 IP</li></ul><ul><li>주의사항 ; 탄력적 IP는 1개까지 무료다. 탄력적 IP를 사용하면 연결된 ec2 인스턴스를 종료해서는 안된다. 인스턴스는 매월 750시간 무료다. 이 인스턴스를 제외하고 다른 인스턴스를 실행하면 비용이 생길 수 있다.</li></ul><h2 id="해야할일-목록…"><a href="#해야할일-목록…" class="headerlink" title="해야할일 목록…"></a>해야할일 목록…</h2><ul><li>express 웹 앱준비.</li><li>ec2 보안그룹 인바운드 설정 (http, https, 앱에서 사용하는 포트 열기)</li><li>ec2에 탄력적 IP 할당</li><li>ACM(AWS Certificate Manager)에서 SSL/TLS 인증서 발급요청</li><li>freenom에서 도메인 얻기</li><li>cloudflare 가입하고 사이트 추가</li><li>freenom dns 설정 및 SSL/TLS 인증서 발급 완료</li><li>freenom에서 cloudflare로 네임서버 변경</li><li>aws 애플리케이션 로드 밸런서 생성</li><li>cloudflare dns 설정</li></ul><h2 id="따라하기"><a href="#따라하기" class="headerlink" title="따라하기"></a>따라하기</h2><h3 id="express-웹-앱-준비"><a href="#express-웹-앱-준비" class="headerlink" title="express 웹 앱 준비."></a>express 웹 앱 준비.</h3><figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">express https-web-app --view=ejs</span><br><span class="line"><span class="built_in">cd</span> https-web-app</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><ul><li>간단하게 익스프레스 제너레이터로 웹앱을 생성한다.</li></ul><ul><li>새로 생성하거나 기존에 있는 웹앱을 ec2 인스턴스에 올려준다.</li></ul><figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PORT=8080&amp;&amp; node ./bin/www</span><br></pre></td></tr></table></figure><ul><li>앱을 실행한다.</li><li>나는 익스프레스 제너레이터로 만들었기때문에 process.env.PORT로 8080값을 줘서 8080포트로 앱이 실행되도록하였다.</li></ul><h3 id="ec2에-탄력적-IP-할당"><a href="#ec2에-탄력적-IP-할당" class="headerlink" title="ec2에 탄력적 IP 할당"></a>ec2에 탄력적 IP 할당</h3><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/1.jpg" alt=" "></p><ul><li>ec2 &gt; 탄력적 IP 주소 &gt; 탄력적 IP 주소 할당</li><li>방금 앱을 실행한 인스턴스를 선택하고 할당해준다.</li></ul><ul><li>주의 : 탄력적 IP를 할당한 이상 연결된 EC2가 종료되어 탄력적 IP에 아무것도 연결되어 있지 않으면 비용이 발생한다.</li><li>또, 탄력적 IP는 1개까지 무료이다. EC2도 이제부터 매일 돌아가게됨(750시간 무료)으로 사실상 실행할 수 있는 인스턴스는 1개로 제한된다.</li></ul><h3 id="ec2-보안그룹-인바운드-설정-http-https-앱에서-사용하는-포트-열기"><a href="#ec2-보안그룹-인바운드-설정-http-https-앱에서-사용하는-포트-열기" class="headerlink" title="ec2 보안그룹 인바운드 설정 (http, https, 앱에서 사용하는 포트 열기)"></a>ec2 보안그룹 인바운드 설정 (http, https, 앱에서 사용하는 포트 열기)</h3><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/2.jpg" alt=" "></p><ul><li>앱이 실행되고있는 ec2 인스턴스 보안그룹으로 들어가 인바운드 규칙을 편집한다.</li><li>http와 https를 어디서나 접근가능하게 한다.</li><li>또 앱을 실행 포트도 어디선 접근가능하게 한다. 나의 경우 8080포트이다.</li></ul><h3 id="freenom에서-도메인-얻기"><a href="#freenom에서-도메인-얻기" class="headerlink" title="freenom에서 도메인 얻기"></a>freenom에서 도메인 얻기</h3><ul><li><p>내가 도메인을 얻을 때 이사이트가 엄청나게 느리기때문에 많은 인내가 필요하다..</p></li><li><p>수시로 404 not found가 뜬다…</p></li><li><p>새로고침을 몇번했는지 모르곘다.</p></li><li><p>freenom에서 나는 처음 도메인을 얻어봤다.</p></li><li><p>그런데 여기서 삽질한 것이</p></li><li><p>당연히 회원가입을 먼저하고 도메인을 얻는 것인줄 알았으나,</p></li><li><p>도메인을 얻는 과정에서 체크아웃을 하면서 회원가입을 진행해야 정상 진행된다.</p></li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/3.jpg" alt=" "></p><ul><li>원하는 도메인을 입력한다.</li><li>FREE 라벨이 붙은것중에서 원하는 것을 선택한다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/4.jpg" alt=" "></p><ul><li>원하는 도메인을 선택하면, 체크아웃 버튼이 생긴다.</li><li>체크아웃버튼을 눌러준다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/5.jpg" alt=" "></p><ul><li>기간을 선택하고 Continue버튼을 누른다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/6.jpg" alt=" "></p><ul><li>여기서 드디어 회원가입을 진행한다..</li><li>나는 왼쪽 이메일 인증을 선택하였다.</li><li>이메일 입력하고 버튼을 누르면, 해당 메일로 인증 url이 날라오는데 클릭해서 다음을 진행한다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/7.jpg" alt=" "></p><ul><li>이렇게 회원가입폼이 나오는데 빨간부분을 채워주고 동의체크하고 완료한다.</li><li>이렇게 무료로 도메인 얻기에 성공했다.</li><li>이제 aws로 돌아와서 무료로 인증서를 발급받아보자.</li></ul><h3 id="ACM-AWS-Certificate-Manager-에서-SSL-TLS-인증서-발급요청"><a href="#ACM-AWS-Certificate-Manager-에서-SSL-TLS-인증서-발급요청" class="headerlink" title="ACM(AWS Certificate Manager)에서 SSL/TLS 인증서 발급요청"></a>ACM(AWS Certificate Manager)에서 SSL/TLS 인증서 발급요청</h3><ul><li>ACM(AWS Certificate Manager)에서 인증서 요청 &gt; 공인 인증서 요청 으로 들어간다</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/8.jpg" alt=" "></p><ul><li>도메인 이름을 추가한다.</li><li>나는 이 인증서에 다른 이름 추가 버튼을 통해 *.domainname 도 추가해줬다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/9.jpg" alt=" "></p><ul><li>검증 방법으로 DNS 검증을 선택한다</li></ul><ul><li>다음 검토 화면은 그냥 확인</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/10.jpg" alt=" "></p><ul><li>마지막 단계 검증 화면에서 조금 기다리면 이런 화면이 나온다.</li><li>도메인 이름 옆에 펼치기 버튼을 클릭해주면 이름 유형 값이라는 게 나오는데</li><li>이 값들을 freenom dns 설정에서 레코드로 추가해줄 것이다.</li></ul><h3 id="freenom-dns-설정-및-SSL-TLS-인증서-발급-완료"><a href="#freenom-dns-설정-및-SSL-TLS-인증서-발급-완료" class="headerlink" title="freenom dns 설정 및 SSL/TLS 인증서 발급 완료"></a>freenom dns 설정 및 SSL/TLS 인증서 발급 완료</h3><ul><li>freenom 사이트로 돌아와서 로그인하고</li><li>상단 메뉴에 Services &gt; My domains 클릭</li><li>Manage Domain 버튼을 클릭하고 Manage Freenom DNS를 클릭한다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/12.jpg" alt=" "></p><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/13.jpg" alt=" "></p><ul><li>위같은 화면이 나오면 아까 ACM에서 봤던 이름과 값들을 채워준다.</li><li>주의 : 타입을 CNAME으로 한다.</li><li>위와같이 매칭시켜주면된다.</li><li>나는 *.domainname으로 추가 이름을 지정해줬는데 이 경우에는 이름과 값이 완전히 똑같기 때문에 한개의 레코드만 설정해주면된다.</li><li>*이 아니고, www. 같은 이름을 추가한 경우에는</li><li>레코드를 하나 더 추가하고 똑같이 매칭시켜서 입력해주면 된다.</li><li>저장한다</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/14.jpg" alt=" "></p><ul><li>이제 ACM으로 돌아와서 인증서 상태가 발급 완료로 변할때까지 기다리면서 유튜브 한편을 보고온다.</li><li>나는 약 5-10분정도 기다린 것 같다.</li><li>만약에 20분이 넘도록 검증 보류 상태라면 뭔가 잘못 따라한 것이다.</li><li>이제 DNS 네임서버를 cloudflare로 바꿀 것이다.</li></ul><h3 id="cloudflare-가입하고-사이트-추가"><a href="#cloudflare-가입하고-사이트-추가" class="headerlink" title="cloudflare 가입하고 사이트 추가"></a>cloudflare 가입하고 사이트 추가</h3><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/15.jpg" alt=" "></p><ul><li>회원가입한다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/16.jpg" alt=" "></p><ul><li>회원가입을 완료하면, 사이트를 추가할 수 있는데, 내 도메인을 입력한다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/17.jpg" alt=" "></p><ul><li>다음화면에서 Free를 선택하고 넘어간다</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/18.jpg" alt=" "></p><ul><li>넘어오면 이렇게 스캔하는 화면이 나온다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/19.jpg" alt=" "></p><ul><li>스캔이 완료되면 이런화면이 나오는데, 비어있다면,</li><li>아까 freenom에서 dns 설정한것처럼 똑같이 타입을 cname으로 하여 이름, 값을 넣어준다.</li><li>완료했다면 다음화면을 넘어간다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/20.jpg" alt=" "></p><ul><li>그러면 네임 서버를 바꾸라는 말이 나온다.</li><li>이제 freenom사이트로 돌아가서 네임서버를 변경해보자.</li></ul><h3 id="freenom에서-cloudflare로-네임서버-변경"><a href="#freenom에서-cloudflare로-네임서버-변경" class="headerlink" title="freenom에서 cloudflare로 네임서버 변경"></a>freenom에서 cloudflare로 네임서버 변경</h3><ul><li>상단 메뉴에 Services &gt; My domains 클릭</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/22.jpg" alt=" "></p><ul><li>Manage Domain 버튼을 클릭하고 Management Tools &gt; Nameservers를 클릭한다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/21.jpg" alt=" "></p><ul><li>네임 서버를 변경해준다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/23.jpg" alt=" "></p><ul><li>성공하면, cloudflare화면으로 돌아와서 완료를 눌러준다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/24.jpg" alt=" "></p><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/25.jpg" alt=" "></p><ul><li>이런화면이 나오는데 나는 항상 https 옵션을 켜주고 완료해주었다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/26.jpg" alt=" "></p><ul><li>해당 사이트의 개요화면으로 넘어가는데 만약에 이런화면이 나오는데 1~5분정도 기다리면,</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/27.jpg" alt=" "></p><ul><li>이런 화면으로 바뀐다.</li><li>이제 aws로 돌아와 로드 밸런서를 생성해줄 것이다.</li></ul><h3 id="aws-애플리케이션-로드-밸런서-생성"><a href="#aws-애플리케이션-로드-밸런서-생성" class="headerlink" title="aws 애플리케이션 로드 밸런서 생성"></a>aws 애플리케이션 로드 밸런서 생성</h3><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/28.jpg" alt=" "></p><ul><li>ec2 &gt; 로드 밸런서 &gt; 로드 밸런서 생성 &gt; 애플리케이션 로드 밸런서 생성</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/29.jpg" alt=" "></p><ul><li>이름을 정해주고, 리스너에서 https를 추가해준다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/30.jpg" alt=" "></p><ul><li>가용영역 체크하고 다음으로 넘어간다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/31.jpg" alt=" "></p><ul><li>발급받은 도메인 인증서를 선택하고 다음으로 넘어간다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/32.jpg" alt=" "></p><ul><li>ce2 인스턴스가 속해있는 보안그룹을 선택한다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/33.jpg" alt=" "></p><ul><li>적당히 이름을 짓고,</li><li>포트에서 내 앱이 사용하고있는 포트를 입력하고 다음으로 넘어간다.</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/34.jpg" alt=" "></p><ul><li>내 앱이 실행되고있는 인스턴스를 선택하고</li><li>등록된 항목에 추가 버튼을 누른다.</li><li>그러면 3이라고 표시한 주황색 박스에 해당 인스턴스가 추가되는 걸 확인할 수 있다.</li></ul><ul><li>검토화면에서 다음버튼</li></ul><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/35.jpg" alt=" "></p><ul><li>로드밸런서 메인화면으로 넘어와지면 생성된 로드밸런서의 DNS이름을 복사한다.</li><li>이제 cloudflare dns 설정만 하면 끝이다!</li></ul><h3 id="cloudflare-dns-설정"><a href="#cloudflare-dns-설정" class="headerlink" title="cloudflare dns 설정"></a>cloudflare dns 설정</h3><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/36.jpg" alt=" "></p><ul><li>cloudflare에 와서 위처럼 새로운 레코드를 추가하고 타입은 CNAME, 이름은 <code>@</code>, 대상은 방금 복사한 로드밸런서 DNS이름을 넣어주고 저장을 누르면 완료다.</li></ul><h3 id="끝"><a href="#끝" class="headerlink" title="끝"></a>끝</h3><p><img src="/images/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B020201030/preview.jpg" alt=" "></p><ul><li>이제 자신의 도메인으로 접속을 해보면….</li><li>https..!</li></ul><h3 id="여기서-잠깐"><a href="#여기서-잠깐" class="headerlink" title="여기서 잠깐..!"></a>여기서 잠깐..!</h3><ul><li>처음에 <code>npm start</code>로 웹 앱을 실행시켰는데</li><li>이러면 ec2 리모트를 종료하는 순간 앱도 같이 종료된다.</li><li><code>nohup export PORT=8080&amp;&amp; node ./bin/www &amp;</code> 이런식으로 실행해야 ec2 리모트를 종료해도 웹 앱이 계속 살아 있다.</li><li>참고 ; <a href="/2020/10/30/linux-node-app-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C-%EC%8B%A4%ED%96%89">linux node app 백그라운드 실행</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/dMVy3BQB314">https://youtu.be/dMVy3BQB314</a></li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/10/30/ec2-web-app-https-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo db.json 초기화</title>
      <link>https://chinsun9.github.io/2020/10/30/hexo-db-json-%EC%B4%88%EA%B8%B0%ED%99%94/</link>
      <guid>https://chinsun9.github.io/2020/10/30/hexo-db-json-%EC%B4%88%EA%B8%B0%ED%99%94/</guid>
      <pubDate>Fri, 30 Oct 2020 00:29:49 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;가끔 삭제한 페이지가 검색되거나 하는데,&lt;/li&gt;
&lt;li&gt;db.json을 삭제하면 알아서 갱신해준다.&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>가끔 삭제한 페이지가 검색되거나 하는데,</li><li>db.json을 삭제하면 알아서 갱신해준다.</li></ul>]]></content:encoded>
      
      
      
      
      <comments>https://chinsun9.github.io/2020/10/30/hexo-db-json-%EC%B4%88%EA%B8%B0%ED%99%94/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
