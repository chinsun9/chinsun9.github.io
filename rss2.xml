<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Tue, 05 Jan 2021 01:36:20 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Moment.js utc 사용하기</title>
      <link>https://chinsun9.github.io/2021/01/05/moment-js-utc-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/01/05/moment-js-utc-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 05 Jan 2021 01:36:20 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> date1 = moment().utc().format(<span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(date1);</span><br></pre></td></tr></table></figure><ul><li><code>utc()</code> 메소드를 이용한다.</li></ul><h2 id="활용한-곳"><a href="#활용한-곳" class="headerlink" title="활용한 곳"></a>활용한 곳</h2><ul><li>rds는 기본적으로 utc를 사용한다</li><li>그래서 현재 지역 시간으로 포맷팅 된 값을 그대로 db에 넣으면 안 된다</li><li>rds의 시간대를 변경하거나, insert, update 할 때 잘 가공해서 쿼리를 해야 한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://momentjs.com/docs/#/parsing/utc/">https://momentjs.com/docs/#/parsing/utc/</a></li></ul><ul><li><a href="https://aws.amazon.com/ko/premiumsupport/knowledge-center/rds-change-time-zone/">https://aws.amazon.com/ko/premiumsupport/knowledge-center/rds-change-time-zone/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/momentjs/">momentjs</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/moment-js-utc-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>forEach await 안되는 문제</title>
      <link>https://chinsun9.github.io/2021/01/05/forEach-await-%EC%95%88%EB%90%98%EB%8A%94-%EB%AC%B8%EC%A0%9C/</link>
      <guid>https://chinsun9.github.io/2021/01/05/forEach-await-%EC%95%88%EB%90%98%EB%8A%94-%EB%AC%B8%EC%A0%9C/</guid>
      <pubDate>Tue, 05 Jan 2021 01:27:25 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;상황&quot;&gt;&lt;a href=&quot;#상황&quot; class=&quot;headerlink&quot; title=&quot;상황&quot;&gt;&lt;/a&gt;상황&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;배열로 저장되어 있는 데이터를 forEach로 순회하면서 db에 &lt;code&gt;INSERT&lt;/code&gt;하는 쿼리를 만들</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>배열로 저장되어 있는 데이터를 forEach로 순회하면서 db에 <code>INSERT</code>하는 쿼리를 만들려고 했다</li><li>근데 비동기적으로 동작했다</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> data.forEach(<span class="keyword">async</span> (element: ArticlePreview, idx: <span class="built_in">number</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// insert query</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> element <span class="keyword">of</span> data) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> a = <span class="keyword">await</span> databaseConnection.query(queryString, [</span><br><span class="line">          <span class="comment">// ...</span></span><br><span class="line">        ]);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><code>for of</code>에서는 await을 통해서 순차적으로 처리가 가능했다</li></ul><h2 id="시도해보지-않은-다른-방향"><a href="#시도해보지-않은-다른-방향" class="headerlink" title="시도해보지 않은 다른 방향"></a>시도해보지 않은 다른 방향</h2><ul><li>한번에 INSERT하기</li><li><a href="https://stackoverflow.com/questions/8899802/how-do-i-do-a-bulk-insert-in-mysql-using-node-js">https://stackoverflow.com/questions/8899802/how-do-i-do-a-bulk-insert-in-mysql-using-node-js</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/37576685/using-async-await-with-a-foreach-loop">https://stackoverflow.com/questions/37576685/using-async-await-with-a-foreach-loop</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/async/">async</category>
      
      <category domain="https://chinsun9.github.io/tags/await/">await</category>
      
      <category domain="https://chinsun9.github.io/tags/forEach/">forEach</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/forEach-await-%EC%95%88%EB%90%98%EB%8A%94-%EB%AC%B8%EC%A0%9C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>css 선언 순서 정렬하기 prettier-plugin-style-order</title>
      <link>https://chinsun9.github.io/2021/01/05/css-%EC%84%A0%EC%96%B8-%EC%88%9C%EC%84%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-prettier-plugin-style-order/</link>
      <guid>https://chinsun9.github.io/2021/01/05/css-%EC%84%A0%EC%96%B8-%EC%88%9C%EC%84%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-prettier-plugin-style-order/</guid>
      <pubDate>Tue, 05 Jan 2021 01:10:59 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;css를 조금 더 아름답고 일관되게 작성해보자.&lt;/li&gt;
&lt;li&gt;기본 prettier 포맷팅을 사용하면 들여 쓰기를 예쁘게 고쳐준다&lt;/li&gt;
&lt;li&gt;그런데 규칙 없이 나열된 속성들을 일관되게 포맷팅을 하고 싶은 욕구가 생겨서 찾아보았다</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>css를 조금 더 아름답고 일관되게 작성해보자.</li><li>기본 prettier 포맷팅을 사용하면 들여 쓰기를 예쁘게 고쳐준다</li><li>그런데 규칙 없이 나열된 속성들을 일관되게 포맷팅을 하고 싶은 욕구가 생겨서 찾아보았다</li><li>이런 것들은 직접 하는 것보다는 도구의 도움을 받는 게 훨씬 좋다고 생각한다</li></ul><h2 id="prettier-plugin-style-order"><a href="#prettier-plugin-style-order" class="headerlink" title="prettier-plugin-style-order"></a>prettier-plugin-style-order</h2><ul><li>(참고) 나는 scss로 작업했다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D prettier-plugin-style-order</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; postcss-scss 도 인스톨 하라고 메시지가 나옴</span><br><span class="line">yarn add -D postcss-scss</span><br></pre></td></tr></table></figure><ul><li>이렇게 패키지를 설치하고,</li><li><code>fonmat on save</code> 옵션이 켜져 있다면,</li><li>아무 css 파일에서 저장을 해보면 순서가 아름답게 정렬되는 것을 알 수 있다.</li><li>기존에 작업하던 것들을 일괄적으로 포맷팅 하고 싶다면</li><li>npm script에 prettier 명령어로 원하는 경로의 css파일들을 지정해서 일괄 포맷팅 한다.</li><li><code>&quot;cssSort&quot;: &quot;prettier --write src/**/*.scss&quot;</code></li></ul><h2 id="생각"><a href="#생각" class="headerlink" title="생각"></a>생각</h2><ul><li>이전에는 항상 css를 주먹구구 중에서도 주먹구구로 작성해왔는데,</li><li>그러지 않을 수 있겠다.</li></ul><ul><li>css property order, css property sort 이런 식으로 검색을 했었는데</li><li>stylelint 등 여러 가지 css를 정렬하는 도구들이 있는 것 같았다</li><li>그런데 prettier을 사용하고 있기 때문에, 다른 거 쓰지 말고 prettier에서 플러그인을 깔아서 해결해 보자 하여 <code>prettier-plugin-style-order</code>를 설치해서 사용해 보았다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://9elements.com/css-rule-order/">https://9elements.com/css-rule-order/</a></li><li><a href="https://github.com/brandon-rhodes/Concentric-CSS/blob/master/style3.css">https://github.com/brandon-rhodes/Concentric-CSS/blob/master/style3.css</a></li><li><a href="https://css-tricks.com/poll-results-how-do-you-order-your-css-properties/">https://css-tricks.com/poll-results-how-do-you-order-your-css-properties/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/prettier/">prettier</category>
      
      <category domain="https://chinsun9.github.io/tags/style-order/">style order</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/css-%EC%84%A0%EC%96%B8-%EC%88%9C%EC%84%9C-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-prettier-plugin-style-order/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 유용한 단축키</title>
      <link>https://chinsun9.github.io/2021/01/05/vscode-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%8B%A8%EC%B6%95%ED%82%A4/</link>
      <guid>https://chinsun9.github.io/2021/01/05/vscode-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%8B%A8%EC%B6%95%ED%82%A4/</guid>
      <pubDate>Tue, 05 Jan 2021 00:29:37 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/_QCNqV_EfzE&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/_QCNqV_EfzE" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>김정환님 영상을 보고 정리한 내용</li></ul><h2 id="단축키"><a href="#단축키" class="headerlink" title="단축키"></a>단축키</h2><ul><li>Ctrl Shift \<ul><li>Go to Bracket</li><li>현재 커서를 포함하는 괄호로 이동한다.</li></ul></li></ul><ul><li>F12<ul><li>Go to Definition</li></ul></li></ul><ul><li>Alt F12<ul><li>Peek Definition</li></ul></li></ul><ul><li>Ctrl 0<ul><li>Focus into Side Bar</li></ul></li></ul><ul><li>Ctrl Shift .<ul><li>Focus Breadcrumbs</li></ul></li></ul><ul><li>Ctrl T<ul><li>Go to Symbol in Workspace</li><li><code>#</code></li></ul></li></ul><ul><li>Ctrl Shift O<ul><li>Go to Symbol in Editor</li><li><code>@</code></li></ul></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://youtu.be/_QCNqV_EfzE">https://youtu.be/_QCNqV_EfzE</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/%EB%8B%A8%EC%B6%95%ED%82%A4/">단축키</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/vscode-%EC%9C%A0%EC%9A%A9%ED%95%9C-%EB%8B%A8%EC%B6%95%ED%82%A4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>202012 검색 실적</title>
      <link>https://chinsun9.github.io/2021/01/04/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</link>
      <guid>https://chinsun9.github.io/2021/01/04/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/</guid>
      <pubDate>Mon, 04 Jan 2021 03:48:48 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120210104/prev</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%8120210104/preview.png" alt=" "></p>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/04/202012-%EA%B2%80%EC%83%89-%EC%8B%A4%EC%A0%81/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 절대경로 import, require 하기</title>
      <link>https://chinsun9.github.io/2020/12/30/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/30/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Wed, 30 Dec 2020 06:00:22 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B020201230/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;l</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B020201230/preview.png" alt=" "></p><ul><li>프로젝트 루트 경로를 <code>/</code> 로 표현하고 싶은데, 방법이…</li></ul><figure class="highlight json"><figcaption><span>jsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;paths&quot;</span>: &#123;</span><br><span class="line">      <span class="comment">//Assuming your components/utilities live in ./src</span></span><br><span class="line">      <span class="comment">//Update this path as necessary</span></span><br><span class="line">      <span class="attr">&quot;/*&quot;</span>: [<span class="string">&quot;./*&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//Add any build/compiled folders here to stop vscode searching those</span></span><br><span class="line">  <span class="attr">&quot;exclude&quot;</span>: [<span class="string">&quot;node_modules&quot;</span>, <span class="string">&quot;build&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>프로젝트 루트 경로에 <code>jsconfig.json</code>을 생성하고 내용을 위처럼 한다.</li></ul><p><img src="/images/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B020201230/1.png" alt=" "></p><ul><li>이렇게 내가 지정한 대로 참조가 되는 것을 확인할 수 있다.</li><li>참고로, 위 <code>opt</code>디렉터리는 내 프로젝트 루트에 있는 디렉터리이다.</li></ul><h2 id="활용한-곳"><a href="#활용한-곳" class="headerlink" title="활용한 곳"></a>활용한 곳</h2><ul><li>sam project에서 공통 모듈을 layer로 빼는데,</li><li>layer로 뺀 공통 모듈을 임포트 할 때 상대 경로를 사용하기 껄끄러운 문제가 있었다.</li></ul><ul><li>로컬에서 개발할 때는 상대 경로로 개발하다가 (자동완성 위해)</li><li>람다를 배포할 때에, 배포하기 전에 절대 경로로 바꿔준다거나 하는 귀찮은 과정이 있었는데</li><li>jsconfig로 절대 경로를 사용해 내가 만든 공통 모듈을 임포트 해서 사용하니까</li><li>그런 귀찮은 과정을 하지 않을 수 있었다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://nimblewebdeveloper.com/blog/absolute-alias-imports-in-javascript-vscode">https://nimblewebdeveloper.com/blog/absolute-alias-imports-in-javascript-vscode</a></li></ul><figure class="highlight json"><figcaption><span>jsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">&quot;paths&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;/*&quot;</span>: [<span class="string">&quot;./*&quot;</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 이런것도 된다.</span></span><br><span class="line">    <span class="attr">&quot;@hello/*&quot;</span>: [<span class="string">&quot;./src/*&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/jsconfig/">jsconfig</category>
      
      <category domain="https://chinsun9.github.io/tags/absolute-path/">absolute path</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/30/vscode-%EC%A0%88%EB%8C%80%EA%B2%BD%EB%A1%9C-import-require-%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>typescript에서 json import</title>
      <link>https://chinsun9.github.io/2020/12/29/typescript%EC%97%90%EC%84%9C-json-import/</link>
      <guid>https://chinsun9.github.io/2020/12/29/typescript%EC%97%90%EC%84%9C-json-import/</guid>
      <pubDate>Tue, 29 Dec 2020 06:11:19 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/typescript%EC%97%90%EC%84%9C-json-import20201228/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/typescript%EC%97%90%EC%84%9C-json-import20201228/preview.png" alt=" "></p><figure class="highlight plain"><figcaption><span>tsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;compilerOptions&quot;: &#123;</span><br><span class="line">    &#x2F;&#x2F;...</span><br><span class="line">    &quot;resolveJsonModule&quot;: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><figcaption><span>ex.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> myJsonData <span class="keyword">from</span> <span class="string">&quot;./myJson.json&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>이런식으로 가져다 쓸 수 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://gracefullight.dev/2019/11/26/import-json-with-typescript-ts5071/">https://gracefullight.dev/2019/11/26/import-json-with-typescript-ts5071/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/json/">json</category>
      
      <category domain="https://chinsun9.github.io/tags/import/">import</category>
      
      <category domain="https://chinsun9.github.io/tags/tsconfig/">tsconfig</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/29/typescript%EC%97%90%EC%84%9C-json-import/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>타자 속도</title>
      <link>https://chinsun9.github.io/2020/12/28/%ED%83%80%EC%9E%90-%EC%86%8D%EB%8F%84/</link>
      <guid>https://chinsun9.github.io/2020/12/28/%ED%83%80%EC%9E%90-%EC%86%8D%EB%8F%84/</guid>
      <pubDate>Mon, 28 Dec 2020 10:34:47 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;한타 ; 534타&lt;/li&gt;
&lt;li&gt;영타 ; 329타&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;한타&quot;&gt;&lt;a href=&quot;#한타&quot; class=&quot;headerlink&quot; title=&quot;한타&quot;&gt;&lt;/a&gt;한타&lt;/h2&gt;&lt;div class=&quot;video-contai</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>한타 ; 534타</li><li>영타 ; 329타</li></ul><h2 id="한타"><a href="#한타" class="headerlink" title="한타"></a>한타</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/u3j-ndydcnU" frameborder="0" loading="lazy" allowfullscreen></iframe></div><h2 id="영타"><a href="#영타" class="headerlink" title="영타"></a>영타</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/oa722y5TxtQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div><br><div class="video-container"><iframe src="https://www.youtube.com/embed/0hlAexpopJs" frameborder="0" loading="lazy" allowfullscreen></iframe></div>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/%ED%83%80%EC%9E%90%EC%86%8D%EB%8F%84/">타자속도</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/28/%ED%83%80%EC%9E%90-%EC%86%8D%EB%8F%84/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SQL Formatter vscode 확장도구</title>
      <link>https://chinsun9.github.io/2020/12/27/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC/</link>
      <guid>https://chinsun9.github.io/2020/12/27/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC/</guid>
      <pubDate>Sun, 27 Dec 2020 11:46:49 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Format Document&lt;/code&gt; 로 &lt;code&gt;.sql&lt;/code&gt; 포맷팅하기&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><code>Format Document</code> 로 <code>.sql</code> 포맷팅하기</li></ul><p><img src="/images/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC20201227/preview.png" alt=" "></p><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=adpyke.vscode-sql-formatter">https://marketplace.visualstudio.com/items?itemName=adpyke.vscode-sql-formatter</a></li><li><code>sql-formatter</code> 확장도구 설치</li></ul><figure class="highlight json"><figcaption><span>settings.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">&quot;[sql]&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// 방금 설치한 익스텐션을 통해 포맷팅하도록</span></span><br><span class="line">    <span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;adpyke.vscode-sql-formatter&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// sql 키워드(select, from 등)를 대문자로 자동 치환해줌.</span></span><br><span class="line">  <span class="attr">&quot;sql-formatter.uppercase&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>위처럼 세팅해주고 <code>Format Document</code> 명령을 실행하면 잘 동작하는 것을 확인할 수 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=adpyke.vscode-sql-formatter">https://marketplace.visualstudio.com/items?itemName=adpyke.vscode-sql-formatter</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/sql/">sql</category>
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/formatter/">formatter</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/27/SQL-Formatter-vscode-%ED%99%95%EC%9E%A5%EB%8F%84%EA%B5%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>sass, scss 연습</title>
      <link>https://chinsun9.github.io/2020/12/23/sass-scss-%EC%97%B0%EC%8A%B5/</link>
      <guid>https://chinsun9.github.io/2020/12/23/sass-scss-%EC%97%B0%EC%8A%B5/</guid>
      <pubDate>Wed, 23 Dec 2020 06:52:47 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/sass-scss-%EC%97%B0%EC%8A%B520201223/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.yo</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/sass-scss-%EC%97%B0%EC%8A%B520201223/preview.png" alt=" "></p><div class="video-container"><iframe src="https://www.youtube.com/embed/Zz6eOVaaelI" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li><a href="https://www.youtube.com/watch?v=Zz6eOVaaelI">Learn Sass In 20 Minutes | Sass Crash Course</a> 를 보면서</li><li>sass, scss 를 공부해보았다.</li></ul><h2 id="sass"><a href="#sass" class="headerlink" title="sass"></a>sass</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 변수</span></span><br><span class="line"><span class="variable">$primaryBtn</span>: rgb(<span class="number">78</span>, <span class="number">201</span>, <span class="number">253</span>);</span><br><span class="line"><span class="variable">$textColor</span>: rgb(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">$primaryBtn</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 중첩 nesting 가능</span></span><br><span class="line">  <span class="comment">//   &amp; ; 상위 선택자</span></span><br><span class="line">  &amp;<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;hellooo&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 중첩된 속성</span></span><br><span class="line">  <span class="attribute">margin</span>: &#123;</span><br><span class="line">    top: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">padding</span>: &#123;</span><br><span class="line">    bottom: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>중첩 이 기능 하나만으로도 엄청나게 강력한 기능이라고 생각한다.</li><li>스타일 적용되는 것도 직관적이고, html이랑 같은 구조로 css를 작성할 수 있을 것 같다.</li></ul><h2 id="연습-코드-저장소"><a href="#연습-코드-저장소" class="headerlink" title="연습 코드 저장소"></a>연습 코드 저장소</h2><ul><li><a href="https://github.com/chinsun9/sass-practice">https://github.com/chinsun9/sass-practice</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/scss/">scss</category>
      
      <category domain="https://chinsun9.github.io/tags/sass/">sass</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/23/sass-scss-%EC%97%B0%EC%8A%B5/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Antimalware Service Executable 미쳐버린 메모리 점유율</title>
      <link>https://chinsun9.github.io/2020/12/23/Antimalware-Service-Executable-%EB%AF%B8%EC%B3%90%EB%B2%84%EB%A6%B0-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A0%90%EC%9C%A0%EC%9C%A8/</link>
      <guid>https://chinsun9.github.io/2020/12/23/Antimalware-Service-Executable-%EB%AF%B8%EC%B3%90%EB%B2%84%EB%A6%B0-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A0%90%EC%9C%A0%EC%9C%A8/</guid>
      <pubDate>Wed, 23 Dec 2020 01:25:30 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/Antimalware-Service-Executable-%EB%AF%B8%EC%B3%90%EB%B2%84%EB%A6%B0-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A0%90%EC%9C%A0%EC%9</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/Antimalware-Service-Executable-%EB%AF%B8%EC%B3%90%EB%B2%84%EB%A6%B0-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A0%90%EC%9C%A0%EC%9C%A820201222/preview.png" alt=" "></p><ul><li>윈도우 디펜더 프로세스가 메모리를 엄청나게 먹어서 골머리 아프다.</li><li>기본 300mb 정도이고 어쩔 땐 막 2gb 가까이 올라간다..</li><li>그땐 마우스가 막 끊기면서 불편하다..</li><li>해결법 보고 따라 했는데 300mb 정도 나오는데 더 지켜봐야겠다.</li></ul><ul><li>8기가로는 이것저것 하기엔 좀 부족한 메모리인 것 같다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>윈도우즈10 Antimalware Service Executable 메모리 점유 과다 문제 ; <a href="https://antilibrary.org/2371">https://antilibrary.org/2371</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/windows/">windows</category>
      
      
      <category domain="https://chinsun9.github.io/tags/windows/">windows</category>
      
      <category domain="https://chinsun9.github.io/tags/Antimalware-Service-Executable/">Antimalware Service Executable</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/23/Antimalware-Service-Executable-%EB%AF%B8%EC%B3%90%EB%B2%84%EB%A6%B0-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%A0%90%EC%9C%A0%EC%9C%A8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>input spellcheck off, input 빨간줄 없애기</title>
      <link>https://chinsun9.github.io/2020/12/22/input-spellcheck-off/</link>
      <guid>https://chinsun9.github.io/2020/12/22/input-spellcheck-off/</guid>
      <pubDate>Tue, 22 Dec 2020 04:09:44 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/input-spellcheck-off20201222/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;figcaption&gt;&lt;span&gt;example.tsx&lt;/spa</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/input-spellcheck-off20201222/preview.png" alt=" "></p><figure class="highlight jsx"><figcaption><span>example.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;input</span><br><span class="line">  ref=&#123;inputRef&#125;</span><br><span class="line">  type=<span class="string">&quot;text&quot;</span></span><br><span class="line">  value=&#123;shareLink&#125;</span><br><span class="line">  onClick=&#123;onLinkClickHandler&#125;</span><br><span class="line">  spellCheck=&#123;<span class="literal">false</span>&#125;</span><br><span class="line">  readOnly</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>example.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">spellcheck</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>input안의 빨간 줄 생기는 것을 없앨 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/html/">html</category>
      
      <category domain="https://chinsun9.github.io/tags/input/">input</category>
      
      <category domain="https://chinsun9.github.io/tags/spellCheck/">spellCheck</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/22/input-spellcheck-off/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>리눅스 백그라운드 프로세스 확인 명령어</title>
      <link>https://chinsun9.github.io/2020/12/21/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%ED%99%95%EC%9D%B8-%EB%AA%85%EB%A0%B9%EC%96%B4/</link>
      <guid>https://chinsun9.github.io/2020/12/21/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%ED%99%95%EC%9D%B8-%EB%AA%85%EB%A0%B9%EC%96%B4/</guid>
      <pubDate>Mon, 21 Dec 2020 08:54:26 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 리눅스 백그라운드 프로세스 확인</span><br><span class="line">ps</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 모든 프로세스</span><br><span class="line">ps -e</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 모든 프로세스 + 풀 리스트(uid, pid, ...)</span><br><span class="line">ps -ef</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; &#39;www&#39;를 포함하는 결과만 표시</span><br><span class="line">ps -ef|grep www</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/linux/">linux</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/21/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%B0%B1%EA%B7%B8%EB%9D%BC%EC%9A%B4%EB%93%9C-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%ED%99%95%EC%9D%B8-%EB%AA%85%EB%A0%B9%EC%96%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>리눅스 shutdown 명령어</title>
      <link>https://chinsun9.github.io/2020/12/21/linux-shutdown-%EB%AA%85%EB%A0%B9%EC%96%B4/</link>
      <guid>https://chinsun9.github.io/2020/12/21/linux-shutdown-%EB%AA%85%EB%A0%B9%EC%96%B4/</guid>
      <pubDate>Mon, 21 Dec 2020 08:49:12 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 지금종료</span><br><span class="line">sudo shutdown -h now</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 재시작</span><br><span class="line">sudo shutdown -r now</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 종료예약 취소</span><br><span class="line">sudo shutdown -c</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/linux/">linux</category>
      
      <category domain="https://chinsun9.github.io/tags/shutdown/">shutdown</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/21/linux-shutdown-%EB%AA%85%EB%A0%B9%EC%96%B4/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>string to number 요상한 문법 (js)</title>
      <link>https://chinsun9.github.io/2020/12/21/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js/</link>
      <guid>https://chinsun9.github.io/2020/12/21/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js/</guid>
      <pubDate>Mon, 21 Dec 2020 08:44:55 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js20201221/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string ty</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js20201221/preview.png" alt=" "></p><ul><li>string type 변수앞에 <code>+</code> 기호를 넣으면 number type 으로 캐스팅된다…</li><li>이런 문법은 wow…</li></ul><figure class="highlight ts"><figcaption><span>example.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">squareValue</span>(<span class="params">x: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.pow(x * <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">squareValue</span>(<span class="params">x: <span class="built_in">string</span> | <span class="built_in">number</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.pow(+x, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>any 사용을 피하라는 예제를 코드를 보는데 우연히 알게되었다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.sitepoint.com/10-essential-typescript-tips-tricks-angular/#typescripttip5avoidanyunlessitreallyisany">https://www.sitepoint.com/10-essential-typescript-tips-tricks-angular/#typescripttip5avoidanyunlessitreallyisany</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/21/string-to-number-%EC%9A%94%EC%83%81%ED%95%9C-%EB%AC%B8%EB%B2%95-js/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>typescript에서 mathjs 사용해서 소수점 정확하게 계산하기</title>
      <link>https://chinsun9.github.io/2020/12/21/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/21/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 21 Dec 2020 07:59:22 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B020201221/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;부동소</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B020201221/preview.png" alt=" "></p><ul><li>부동소수점으로 인한 계산 오류가 있다.</li><li>mathjs 라이브러리로 해결해보자.</li></ul><h2 id="mathjs-설치"><a href="#mathjs-설치" class="headerlink" title="mathjs 설치"></a>mathjs 설치</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add mathjs</span><br><span class="line">yarn add @types&#x2F;mathjs -D</span><br></pre></td></tr></table></figure><ul><li><code>mathjs</code>만 설치하면 타입 정의가 없기 때문에</li><li><code>@types/mathjs</code> 보조 라이브러리까지 설치</li></ul><h2 id="mathjs-임포트"><a href="#mathjs-임포트" class="headerlink" title="mathjs 임포트"></a>mathjs 임포트</h2><figure class="highlight ts"><figcaption><span>example1.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> math <span class="keyword">from</span> <span class="string">&quot;mathjs&quot;</span>;</span><br></pre></td></tr></table></figure><ul><li>그냥 기본값으로 사용하려면 <code>import * as math from &#39;mathjs&#39;</code>로 불러와 사용</li><li>default export가 없어서 <code>import math from &#39;mathjs&#39;</code>이런 식으로 사용불가.<ul><li><code>Attempted import error: &quot;mathjs&quot; does not contain a default export</code></li></ul></li></ul><figure class="highlight ts"><figcaption><span>example2.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; create, all &#125; <span class="keyword">from</span> <span class="string">&quot;mathjs&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mathF = create(all, &#123; <span class="built_in">number</span>: <span class="string">&quot;Fraction&quot;</span> &#125;) <span class="keyword">as</span> math.MathJsStatic;</span><br></pre></td></tr></table></figure><ul><li>지정 config를 적용해 사용하려면 create 메서드 사용</li><li><code>create(all, &#123; number: &#39;Fraction&#39; &#125;) as math.MathJsStatic</code></li><li>as 키워드로 타입을 명시하지 않으면 undefined 에러 발생<ul><li><code>Cannot invoke an object which is possibly &#39;undefined&#39;</code></li></ul></li></ul><h2 id="소수점-계산"><a href="#소수점-계산" class="headerlink" title="소수점 계산"></a>소수점 계산</h2><figure class="highlight ts"><figcaption><span>calc.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; create, all &#125; <span class="keyword">from</span> <span class="string">&quot;mathjs&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mathF = create(all, &#123; <span class="built_in">number</span>: <span class="string">&quot;Fraction&quot;</span> &#125;) <span class="keyword">as</span> math.MathJsStatic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mathjsCalc = <span class="function">(<span class="params">expr: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> mathF.number(mathF.evaluate(expr));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = mathjsCalc(<span class="string">`<span class="subst">$&#123;value1&#125;</span> * <span class="subst">$&#123;value2&#125;</span> * 0.01`</span>);</span><br></pre></td></tr></table></figure><ul><li>evaluate메서드를 사용해서 수식 string을 주면 알아서 계산하도록 했다.</li><li>이때 math ConfigOptions에서 number 옵션이 기본값(number)인 경우에 일반적인 계산이 된다.</li><li>number 옵션에 <code>Fraction</code>을 주고 생성하게 되면 evaluate 메서드에서 숫자를 Fraction 타입으로 파싱 해서 계산하게 되어 우리가 기대하는 결과를 얻을 수 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/chinsun9/react-percentage-calculator">https://github.com/chinsun9/react-percentage-calculator</a></li><li><a href="https://mathjs.org/docs/getting_started.html">https://mathjs.org/docs/getting_started.html</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/mathjs/">mathjs</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/21/typescript%EC%97%90%EC%84%9C-mathjs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>react로 만들어본 퇴근시간 계산기</title>
      <link>https://chinsun9.github.io/2020/12/18/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/18/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B0/</guid>
      <pubDate>Fri, 18 Dec 2020 08:41:40 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/GYJGwfwHE2A&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/GYJGwfwHE2A" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li><a href="https://chinsun9.github.io/go-home-time/" target="_blank">Go Home Time (React)</a></li></ul><h2 id="기능"><a href="#기능" class="headerlink" title="기능"></a>기능</h2><h3 id="메인-페이지"><a href="#메인-페이지" class="headerlink" title="메인 페이지"></a>메인 페이지</h3><ul><li>목표 시각까지 남은 시간 계산</li><li>url param을 통해 목표 시각 세팅</li><li>목표 시각이 지나면 퇴근하라는 메시지를 뛰움</li></ul><h3 id="about-페이지"><a href="#about-페이지" class="headerlink" title="about 페이지"></a>about 페이지</h3><ul><li>링크 공유 기능</li><li>퇴근 시간 설정 기능</li><li>자동 클립보드 복사</li></ul><h2 id="깃허브-페이지-spa-세팅"><a href="#깃허브-페이지-spa-세팅" class="headerlink" title="깃허브 페이지 spa 세팅"></a>깃허브 페이지 spa 세팅</h2><ul><li><a href="https://iamsjy17.github.io/react/2018/11/04/githubpage-SPA.html">https://iamsjy17.github.io/react/2018/11/04/githubpage-SPA.html</a></li><li>원리. 404페이지에 스크립트를 두고 index페이지로 url 파라매터로 넘김</li></ul><h2 id="배경이미지-출처"><a href="#배경이미지-출처" class="headerlink" title="배경이미지 출처"></a>배경이미지 출처</h2><ul><li><a href="https://unsplash.com/photos/WVIkqpoKz1I">https://unsplash.com/photos/WVIkqpoKz1I</a></li><li>Photo by @swayte on Unsplash</li></ul><h2 id="해결한-문제들"><a href="#해결한-문제들" class="headerlink" title="해결한 문제들"></a>해결한 문제들</h2><h3 id="gsap-적용안됨"><a href="#gsap-적용안됨" class="headerlink" title="gsap 적용안됨"></a>gsap 적용안됨</h3><ul><li><a href="https://github.com/greensock/GSAP/issues/285#issuecomment-433729632">https://github.com/greensock/GSAP/issues/285#issuecomment-433729632</a></li></ul><figure class="highlight plain"><figcaption><span>Share.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Power3, TimelineLite &#125; from &quot;gsap&quot;;</span><br><span class="line">import CSSPlugin from &quot;gsap&#x2F;CSSPlugin&quot;; &#x2F;&#x2F; 추가</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; eslint-disable-next-line @typescript-eslint&#x2F;no-unused-vars</span><br><span class="line">const C &#x3D; CSSPlugin; &#x2F;&#x2F; 추가</span><br></pre></td></tr></table></figure><ul><li>로컬에서는 애니메이션이 잘 실행되었는데, 빌드 후 애니메이션이 안 나오는 문제 해결</li></ul><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><ul><li>어느 정도 리액트에 익숙해진 것 같다.</li><li>주로 사용하는 패턴이 생긴 것 같다.</li><li>엄청 간단해 보이지만 이것저것 신경 쓴 것 같은데, 기록을 안 해놨다 ㅠㅠ</li><li>나는 코드에 조금의 변화가 생겨도 커밋을 했었는데,,</li><li>이번에는 커밋을 안 하고 한 번에 몰아서 마지막에 파일별로 커밋을 했다.</li><li>그래서 해결한 문제들이 기억이 잘 안 난다.. ㅠㅠ</li></ul><h3 id="신경-쎃던-것들"><a href="#신경-쎃던-것들" class="headerlink" title="신경 쎃던 것들"></a>신경 쎃던 것들</h3><h4 id="input-element"><a href="#input-element" class="headerlink" title="input element"></a>input element</h4><ul><li>about 페이지에서는 링크를 생성하는 부분이 있다.</li><li>처음에는 input width가 좁았었다. 그래서 고민했던 것이..</li><li>input 넓이보다 안의 내용이 더 길면은 끝부분이 감춰진다.</li></ul><p><img src="/images/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B020201218/1.png" alt=" "></p><ul><li>input에서 포커스를 해제하면 위 그림처럼,</li><li>계속 앞쪽으로 포커스가 자동으로 이동했다.</li></ul><p><img src="/images/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B020201218/2.png" alt=" "></p><ul><li>나는 input 내용의 가장 뒤쪽,</li><li>url param이 변하는 것에 포커스가 가도록 만들려고 이것저것 해봤는데…</li></ul><ul><li>결국엔 그냥 input width를 늘려버리고 끝을 냈다..</li></ul><h4 id="github-pages-SPA"><a href="#github-pages-SPA" class="headerlink" title="github pages SPA"></a>github pages SPA</h4><ul><li>깃허브 페이지는 기본적으로 SPA를 지원하지 않는다.</li><li>react-router-dom 으로 여러 경로들을 만들어 두면 index 말고는 404 페이지로 리디렉트 된다.</li><li>그래서 찾아보니까,,.!</li></ul><figure class="highlight js"><figcaption><span>404.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> segmentCount = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> l = <span class="built_in">window</span>.location;</span><br><span class="line">l.replace(</span><br><span class="line">  l.protocol +</span><br><span class="line">    <span class="string">&quot;//&quot;</span> +</span><br><span class="line">    l.hostname +</span><br><span class="line">    (l.port ? <span class="string">&quot;:&quot;</span> + l.port : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">    l.pathname</span><br><span class="line">      .split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">      .slice(<span class="number">0</span>, <span class="number">1</span> + segmentCount)</span><br><span class="line">      .join(<span class="string">&quot;/&quot;</span>) +</span><br><span class="line">    <span class="string">&quot;/?p=/&quot;</span> +</span><br><span class="line">    l.pathname</span><br><span class="line">      .slice(<span class="number">1</span>)</span><br><span class="line">      .split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">      .slice(segmentCount)</span><br><span class="line">      .join(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">      .replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;~and~&quot;</span>) +</span><br><span class="line">    (l.search ? <span class="string">&quot;&amp;q=&quot;</span> + l.search.slice(<span class="number">1</span>).replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;~and~&quot;</span>) : <span class="string">&quot;&quot;</span>) +</span><br><span class="line">    l.hash</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">l</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (l.search) &#123;</span><br><span class="line">    <span class="keyword">var</span> q = &#123;&#125;;</span><br><span class="line">    l.search</span><br><span class="line">      .slice(<span class="number">1</span>)</span><br><span class="line">      .split(<span class="string">&quot;&amp;&quot;</span>)</span><br><span class="line">      .forEach(<span class="function"><span class="keyword">function</span> (<span class="params">v</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = v.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        q[a[<span class="number">0</span>]] = a.slice(<span class="number">1</span>).join(<span class="string">&quot;=&quot;</span>).replace(<span class="regexp">/~and~/g</span>, <span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    <span class="keyword">if</span> (q.p !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="built_in">window</span>.history.replaceState(</span><br><span class="line">        <span class="literal">null</span>,</span><br><span class="line">        <span class="literal">null</span>,</span><br><span class="line">        l.pathname.slice(<span class="number">0</span>, <span class="number">-1</span>) + (q.p || <span class="string">&quot;&quot;</span>) + (q.q ? <span class="string">&quot;?&quot;</span> + q.q : <span class="string">&quot;&quot;</span>) + l.hash</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)(<span class="built_in">window</span>.location);</span><br></pre></td></tr></table></figure><ul><li>원리는 index 경로 외에 나머지 경로로 들어오면 404페이지를 반환하는데,</li><li>커스텀 404페이지에서 스크립트를 통해서 index페이지로 리디렉트 하게 한다.</li><li>이때, url params 및 query string을 가공한다</li></ul><ul><li>index.html에서는 404.html로부터 넘겨받은 값으로 라우팅이 적용된 화면을 보여준다.</li><li>이걸 만든 사람은 정말 대단한 것 같다. ㄷㄷ;</li></ul><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><ul><li><a href="https://github.com/chinsun9/go-home-time">https://github.com/chinsun9/go-home-time</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><h3 id="github-pages-spa"><a href="#github-pages-spa" class="headerlink" title="github pages spa"></a>github pages spa</h3><ul><li><a href="https://iamsjy17.github.io/react/2018/11/04/githubpage-SPA.html">https://iamsjy17.github.io/react/2018/11/04/githubpage-SPA.html</a></li><li><a href="https://github.com/rafgraph/spa-github-pages">https://github.com/rafgraph/spa-github-pages</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/hook/">hook</category>
      
      <category domain="https://chinsun9.github.io/tags/gsap/">gsap</category>
      
      <category domain="https://chinsun9.github.io/tags/eslint/">eslint</category>
      
      <category domain="https://chinsun9.github.io/tags/moment/">moment</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/18/react%EB%A1%9C-%EB%A7%8C%EB%93%A4%EC%96%B4%EB%B3%B8-%ED%87%B4%EA%B7%BC%EC%8B%9C%EA%B0%84-%EA%B3%84%EC%82%B0%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>web font 적용하는 2가지 방법</title>
      <link>https://chinsun9.github.io/2020/12/16/web-font-%EC%A0%81%EC%9A%A9%ED%95%98%EB%8A%94-2%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95/</link>
      <guid>https://chinsun9.github.io/2020/12/16/web-font-%EC%A0%81%EC%9A%A9%ED%95%98%EB%8A%94-2%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95/</guid>
      <pubDate>Wed, 16 Dec 2020 05:03:10 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight css&quot;&gt;&lt;figcaption&gt;&lt;span&gt;index.css&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight css"><figcaption><span>index.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&quot;https://fonts.googleapis.com/css2?family=Nanum+Gothic&amp;display=swap&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight html"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">  <span class="attr">href</span>=<span class="string">&quot;https://fonts.googleapis.com/css2?family=Nanum+Gothic&amp;display=swap&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>link태그로 불러오는 것은 기존에 알고 있었는데,</li><li>css에서 <code>@import</code> 로 불러오는 것은 처음알았다.</li><li>폰트같이 범용적은 것은 index.css에 넣어주면 좋을 것 같다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/CSS/@import">https://developer.mozilla.org/ko/docs/Web/CSS/@import</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/webfont/">webfont</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/16/web-font-%EC%A0%81%EC%9A%A9%ED%95%98%EB%8A%94-2%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>type vs interface</title>
      <link>https://chinsun9.github.io/2020/12/16/type-vs-interface/</link>
      <guid>https://chinsun9.github.io/2020/12/16/type-vs-interface/</guid>
      <pubDate>Wed, 16 Dec 2020 04:49:13 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// X</span></span><br><span class="line"><span class="keyword">type</span> MyFile <span class="keyword">extends</span> File = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// O</span></span><br><span class="line"><span class="keyword">interface</span> MyFile <span class="keyword">extends</span> File &#123;</span><br><span class="line">  preview: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// O</span></span><br><span class="line"><span class="keyword">type</span> MyFile = &#123;preview: <span class="built_in">string</span>&#125; &amp; File</span><br></pre></td></tr></table></figure><ul><li>type은 <code>extends</code>, <code>implements</code>가 안됨.</li><li>대신 extends의 경우는 <code>&amp;</code> 키워드를 사용하여 대체할 수 있다.</li></ul><ul><li>interface와 type은 거의 같은 역할을 한다.</li><li>그래서 둘중 하나만 사용하여 일관적인 스타일을 유지하는 게 좋다고 들었다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>나는 typescript를 공부하면서 처음 접한게 type이라서 type을 쭉 사용해왔다.</li><li>그런데 상속을 해야하는 경우에 마추쳤을 때, 불가피하게 interface 키워드를 사용했고,</li><li>type을 사용할 수 없을까 찾아보다가 <code>type vs interface</code> 에 대한 좋은 링크를 찾았다.</li></ul><ul><li><a href="https://blog.logrocket.com/types-vs-interfaces-in-typescript/">https://blog.logrocket.com/types-vs-interfaces-in-typescript/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/type/">type</category>
      
      <category domain="https://chinsun9.github.io/tags/interface/">interface</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/16/type-vs-interface/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>react url params 사용하기</title>
      <link>https://chinsun9.github.io/2020/12/16/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/12/16/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Wed, 16 Dec 2020 02:52:01 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B020201216/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ts&quot;&gt;&lt;f</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B020201216/preview.jpg" alt=" "></p><figure class="highlight ts"><figcaption><span>example.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 전</span></span><br><span class="line">res = <span class="keyword">await</span> myFetch(<span class="string">`get/<span class="subst">$&#123;location.pathname.split(<span class="string">&quot;/&quot;</span>)[<span class="number">2</span>]&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 후</span></span><br><span class="line">res = <span class="keyword">await</span> myFetch(<span class="string">`get/<span class="subst">$&#123;id&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><ul><li><p>처음에는 url params에 어떻게 접근할까하다가 location객체에서 수동으로 파싱해서 쎃었는데</p></li><li><p>‘react-router-dom’ 에서 useRouteMatch라는 메소드를 통해서 자동으로 파싱하고 필요한 차일드에 넘겨주었다.</p></li></ul><figure class="highlight ts"><figcaption><span>parent.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 최상위, 컴포넌트 밖</span></span><br><span class="line"><span class="keyword">type</span> MatchParams = &#123;</span><br><span class="line">  id: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 컴포넌트 안 최상위</span></span><br><span class="line"><span class="keyword">const</span> match = useRouteMatch&lt;MatchParams&gt;(<span class="string">&quot;/start/:id&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 렌더 부분, 컴포넌트 안 return 부분</span></span><br><span class="line">&lt;Route path=<span class="string">&quot;/start/:id&quot;</span>&gt;</span><br><span class="line">  &lt;Start id=&#123;match?.params.id || <span class="string">&quot;&quot;</span>&#125; /&gt;</span><br><span class="line">&lt;/Route&gt;;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><figcaption><span>child.tsx</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 최상위, 컴포넌트 밖</span></span><br><span class="line"><span class="keyword">type</span> Props = &#123;</span><br><span class="line">  id: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 컴포넌트 선언부</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Start</span>(<span class="params">&#123; id &#125;: Props</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>차일드에서 <code>useRouteMatch</code>를 사용해보았는데, useEffect에서 무한루프에 걸려서</li><li>부모에서 전달해주었다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://velog.io/@bigbrothershin/%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0%EC%99%80-%EC%BF%BC%EB%A6%AC">velog.io/@bigbrothershin/React Router: 파라미터와 쿼리</a></li><li><a href="https://stackoverflow.com/questions/61392878/how-to-make-useroutematch-work-with-types-from-react-router">https://stackoverflow.com/questions/61392878/how-to-make-useroutematch-work-with-types-from-react-router</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/react-typescript/">react typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/url-params/">url params</category>
      
      
      <comments>https://chinsun9.github.io/2020/12/16/react-url-params-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
