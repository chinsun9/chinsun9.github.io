<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Mon, 09 Aug 2021 10:01:57 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>AWS 프리티어 사용기</title>
      <link>https://chinsun9.github.io/2021/08/09/aws-free-tier-review/</link>
      <guid>https://chinsun9.github.io/2021/08/09/aws-free-tier-review/</guid>
      <pubDate>Mon, 09 Aug 2021 10:01:57 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;aws 프리티어가 만료되었드아…&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;aws 프리티어 사용하면서 써본 서비스 정리해보기&lt;/li&gt;
&lt;li&gt;처음 클라우드 환경을 써보면서 처음이라 과금될까 봐 엄청 쫄았던 이야기&lt;/li&gt;
&lt;li&gt;어디까지 무료로 쓸 수 있었나 정리해</description>
        
      
      
      
      <content:encoded><![CDATA[<p>aws 프리티어가 만료되었드아…</p><ul><li>aws 프리티어 사용하면서 써본 서비스 정리해보기</li><li>처음 클라우드 환경을 써보면서 처음이라 과금될까 봐 엄청 쫄았던 이야기</li><li>어디까지 무료로 쓸 수 있었나 정리해보기</li></ul><h2 id="AWS-프리티어-사용기-요약"><a href="#AWS-프리티어-사용기-요약" class="headerlink" title="AWS 프리티어 사용기 요약"></a>AWS 프리티어 사용기 요약</h2><ul><li>과금된 적 없음 (정확히는 $0.01가 두 달간 찍혔는데 실제로는 “인보이스에 대해 면제된 지불금” 이라면서 과금 안 됨)</li><li>EC2, RDS 는 안 꺼도 된다 (난 아껴 쓴다고 초반에는 껐다 켰다를 반복했다)</li><li>AWS 가입한 날을 기억해 놓자. 따로 프리티어 만료 이메일이 오거나 하지 않는다 (가입 후 1년)</li><li>프리티어 종료는 <strong>Billing Management Console</strong>에서 <code>경고 및 알림</code> 란에서 프리티어 여부를 확인할 수 있다<ul><li><a href="https://console.aws.amazon.com/billing/home#/">https://console.aws.amazon.com/billing/home?#/</a></li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/aws-free-tier-review20210429/preview.png"></p><ul><li>나는 이제 끝나서 프리티어 관련 문구가 안 보이는 것을 확인할 수 있다</li><li>프리티어가 끝났어도, 람다 같은 일부 서비스는 과금되는 사용량까지 여유가 있어서 요긴하게 쓸 수 있다<ul><li>프리티어가 끝나고 일정 용량 무료인 서비스 확인은 <a href="https://aws.amazon.com/ko/free/?Types=tier%23always-free&all-free-tier.sort-by=item.additionalFields.SortRank&all-free-tier.sort-order=asc&awsf.Free%20Tier%20Types=tier%23always-free&awsf.Free%20Tier%20Categories=*all">여기서</a></li></ul></li></ul><ul><li>내가 AWS 사용하면서 작성할 글 ; <a href="https://chinsun9.github.io/tags/aws/">https://chinsun9.github.io/tags/aws/</a></li></ul><h2 id="ec2"><a href="#ec2" class="headerlink" title="ec2"></a>ec2</h2><ul><li>처음 ec2 인스턴스를 생성할 때 혹시나 잘못된 옵션 선택으로 과금이 되지 않을까 걱정했다</li><li>생활코딩님 영상을 보고 처음 aws를 시작했는데,</li><li>옵션 하나하나 영상과 일치시키려고 확인 또 확인했다</li><li>그런데 지금은 그냥 기본값으로 생성하면 된다는 것을 알았다 ㅋㅋ</li></ul><ul><li>또, ec2 사용하지 않을 때는 항상 종료시켰다, rds도 마찬가지다</li><li>그런데 그냥 ec2나 rds를 사용할 때 하나의 인스턴스만 사용한다면 굳이 종료시킬 필요가 없다</li><li>한 달 내내 켜놔도 과금되지 않는다</li></ul><ul><li>ec2 인스턴스를 한번 껐다가 켜면(이하 껐키) ip가 바뀐다</li><li>ip를 고정시키기 위해서는 탄력적 ip 라는 것을 사용해야 하는데</li><li>ec2를 껐키하지 않는다면 딱히 필요 없다 (재부팅을 사용하면 ip가 바뀌지 않는다)</li><li>그래도 사용해보고 싶다면 탄력적 ip는 프리티어에서 1개까지 무료로 사용 가능하다</li></ul><ul><li>키페어를 잘 보관하자</li></ul><h2 id="rds"><a href="#rds" class="headerlink" title="rds"></a>rds</h2><ul><li>ec2와 마찬가지로 한 달 내내 켜놔도 과금되지 않는다</li><li>처음 rds를 생성하면 퍼블릭한 접근이 가능하기 때문에 비밀번호를 잘 설정하자</li><li>나는 root/1234로 했다가 해킹당했다 ㅋㅋㅋㅋㅋ</li><li>딱히 공부 목적으로 중요한 정보는 없어서 다행이었다</li></ul><ul><li>rds 삭제할 때 스냅샷을 생성하지 않도록 한다</li><li>스냅샷 보관 비용이 발생한다 (프리티어 적용 안됨!)</li></ul><h2 id="s3"><a href="#s3" class="headerlink" title="s3"></a>s3</h2><ul><li>이것도 생성할 때 기본값으로 생성한다</li><li>기본적으로 클라우드 포메이션이나 람다같은 AWS 서비스를 사용하다보면 자동으로 사용하게 된다</li><li>AWS의 여러 서비스들은 s3에 의존한다</li><li>근데 프리티어에서 공부수준으로 서비스를 활용해서 과금될 걱정은 없다</li></ul><h2 id="api-gateway"><a href="#api-gateway" class="headerlink" title="api gateway"></a>api gateway</h2><ul><li>람다를 트리거할 때 주로 사용했다</li><li>백엔드가 서버리스인 웹에서 람다를 호출해야 할 때 cors 설정이 필요하다</li><li>cors 설정할 때 삽질을 엄청했는데</li><li>처음에는 수동으로 cors를 설정하려고 이것저것 설정을 했는데</li><li>그냥 작업 버튼 아래에 cors 활성화 도구가 있었다 ㅋㅋㅋㅋ</li><li>버튼 하나로 cors를 활성화시킬 수 있다</li><li>람다 프록시 통합을 꺼야 활성화할 수 있고 막 엄청 삽질했다</li><li>이때 모든 도메인에 대해 허용하니까 적절히 수정해 줄 수 있다</li><li>또, cors는 활성화했지만 api 호출이 안될 때 람다 내부에서 헤더를 반환해야 줘야 한다 ㅋㅋ</li></ul><h2 id="보안설정"><a href="#보안설정" class="headerlink" title="보안설정"></a>보안설정</h2><ul><li>인바운드 규칙에서 내가 주로 사용하는 ip를 설정하는 게 좋다</li></ul><h2 id="IAM"><a href="#IAM" class="headerlink" title="IAM"></a>IAM</h2><ul><li>자격 증명 관련 서비스다</li><li>별도 비용이 들지 않는다</li></ul><h2 id="amplify"><a href="#amplify" class="headerlink" title="amplify"></a>amplify</h2><ul><li>웹앱을 배포할 때 좋다</li><li>백엔드가 서버리스일 때 좋다고 한다</li><li>amplify 프레임워크 사용에 따른 별도 비용은 없다</li></ul><h2 id="sam-serverless-application-model"><a href="#sam-serverless-application-model" class="headerlink" title="sam ; serverless application model"></a>sam ; serverless application model</h2><ul><li>AWS CloudFormation의 확장이다</li><li>AWS::*, Alexa::* 및 Custom::*과 같은 네임스페이스의 리소스 공급자에서 AWS CloudFormation을 사용하는 경우 추가 요금은 부과되지 않는다</li><li>즉 sam 사용에 의한 별도 비용은 없다</li><li>이를 통해 생성된 리소스에 대한 비용만 든다</li><li>보통 생성되는 리소스로는 api gateway, lambda, s3 등이 있다</li><li>프리티어 사용 동안에는 생성된 리소스가 대부분 프리티어가 적용되기 때문에 과금된 적 없다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/09/aws-free-tier-review/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>commander.js로 cli 도구 만들기</title>
      <link>https://chinsun9.github.io/2021/08/08/create-node-cli-app-with-commanderjs/</link>
      <guid>https://chinsun9.github.io/2021/08/08/create-node-cli-app-with-commanderjs/</guid>
      <pubDate>Sun, 08 Aug 2021 14:47:26 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/create-node-cli-app-with-commanderjs20210808/preview.png&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/create-node-cli-app-with-commanderjs20210808/preview.png" alt=" "></p><ul><li>간단한 cli 도구를 만들어보았다</li></ul><h2 id="TMI"><a href="#TMI" class="headerlink" title="TMI"></a>TMI</h2><h3 id="cli-ts"><a href="#cli-ts" class="headerlink" title="cli.ts"></a>cli.ts</h3><ul><li>레포 ; <a href="https://github.com/chinsun9/g-to-9-cli">https://github.com/chinsun9/g-to-9-cli</a></li></ul><figure class="highlight ts"><figcaption><span>cli.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env node</span></span><br><span class="line"><span class="keyword">import</span> &#123; Command &#125; <span class="keyword">from</span> <span class="string">&#x27;commander&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; gto9 &#125; <span class="keyword">from</span> <span class="string">&#x27;g-to-9&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; version &#125; <span class="keyword">from</span> <span class="string">&#x27;./package.json&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> program = <span class="keyword">new</span> Command();</span><br><span class="line"></span><br><span class="line">program.version(version);</span><br><span class="line"></span><br><span class="line">program</span><br><span class="line">  .argument(<span class="string">&#x27;&lt;text&gt;&#x27;</span>)</span><br><span class="line">  .description(</span><br><span class="line">    <span class="string">`replace all &#x27;g&#x27; to &#x27;9&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">  $ gto9 chinsung</span></span><br><span class="line"><span class="string">  $ gto9 gg is good game</span></span><br><span class="line"><span class="string">  $ gto9 &#x27;gg is good game&#x27;`</span></span><br><span class="line">  )</span><br><span class="line">  .action(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> input = program.args.join(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> result = gto9(input);</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">program.parse();</span><br></pre></td></tr></table></figure><ul><li><code>#!/usr/bin/env node</code> 최상단에 추가해줘야 한다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/create-node-cli-app-with-commanderjs20210808/1.png" alt=" "></p><blockquote><p>Windows Script Host<br>Microsoft JScript 컴파일 오류</p></blockquote><ul><li>추가하지 않으면 만나는 오류이다</li></ul><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><figure class="highlight plain"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;g-to-9-cli&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;g-to-9-cli&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;cli.js&quot;,</span><br><span class="line">  &quot;bin&quot;: &#123;</span><br><span class="line">    &quot;gto9&quot;: &quot;cli.js&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F; ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><em>package.json</em> 에서 bin 필드에 값을 넣어주어 쉽게 cli 설정을 할 수 있다</li><li>오브젝트를 넣어주거나 스트링을 넣어줄 수 있는데,</li><li>스트링을 넣는 경우 <code>&quot;&#123;cli path&#125;&quot;</code> 형태로 한다. 이경우에는 프로젝트 이름으로 실행할 수 있다</li><li>오브젝트의 경우 <code>&#123;&quot;&#123;command&#125;&quot; : &quot;&#123;cli path&#125;&quot;&#125;</code> 형태로 넣어준다. 이경우에는 프로젝트 이름과 다른 커맨드를 지정해 줄 수 있다</li><li>참고 ; <a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#bin">https://docs.npmjs.com/cli/v7/configuring-npm/package-json#bin</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/tj/commander.js">https://github.com/tj/commander.js</a></li><li><a href="https://github.com/tj/commander.js/tree/master/examples">https://github.com/tj/commander.js/tree/master/examples</a></li><li><a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#bin">https://docs.npmjs.com/cli/v7/configuring-npm/package-json#bin</a></li><li>내 첫 cli 도구 ; <a href="https://github.com/chinsun9/g-to-9-cli">https://github.com/chinsun9/g-to-9-cli</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/cli/">cli</category>
      
      <category domain="https://chinsun9.github.io/tags/commanderjs/">commanderjs</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/08/create-node-cli-app-with-commanderjs/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>jsisweird</title>
      <link>https://chinsun9.github.io/2021/08/08/jsisweird/</link>
      <guid>https://chinsun9.github.io/2021/08/08/jsisweird/</guid>
      <pubDate>Sun, 08 Aug 2021 06:59:18 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jsisweird.com/&quot;&gt;https://jsisweird.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.g</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><a href="https://jsisweird.com/">https://jsisweird.com/</a></li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/jsisweird20210808/1.png" alt=" "></p><ul><li><em>JS Is Weird</em> 풀이 (자바스크립트는 이상해~~~)</li><li>js 퀴즈 25문제 푸는 곳이다</li><li>나는 15/25점을 맞았다</li></ul><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><ul><li>소름 돋는 건 문법 에러가 정답인 문제는 없다는 것이었다 ㅋㅋ</li><li>혹시 문제를 풀어보지 않았다면 먼저 문제를 풀고 오는 것을 추천한다!</li><li><a href="https://jsisweird.com/">https://jsisweird.com/</a></li></ul><h2 id="오답노트"><a href="#오답노트" class="headerlink" title="오답노트"></a>오답노트</h2><h3 id="2-length"><a href="#2-length" class="headerlink" title="2. [,,,].length"></a>2. [,,,].length</h3><p>Output: 3<br>You answered: 4</p><ul><li>마지막 콤마는 <strong>trailing commas</strong>로 인식된다</li></ul><figure class="highlight js"><figcaption><span>example</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [</span><br><span class="line">  <span class="number">1</span>, <span class="comment">//</span></span><br><span class="line">  <span class="number">2</span>,</span><br><span class="line">  <span class="number">3</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr.length); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><ul><li><p>arr 배열에 원소가 3개 있고, 콤마도 3개 있다</p></li><li><p><em>trailing commas</em> 는 나중에 원소를 추가할 때 불편하지 않도록 하는 좋은 녀석이다</p></li><li><p>문제에서는 마지막 콤마를 <em>trailing commas</em> 로 하고, undefined이 3개 있는 배열에서의 length를 물어본 것이다</p></li><li><p>eslint에서는 룰에 따라 <em>trailing commas</em> 를 사용할지 안 할지 선택할 수 있다</p></li><li><p>참고 ; <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas</a></p></li></ul><h3 id="3-1-2-3-4-5-6"><a href="#3-1-2-3-4-5-6" class="headerlink" title="3. [1, 2, 3] + [4, 5, 6]"></a>3. [1, 2, 3] + [4, 5, 6]</h3><p>Output: “1,2,34,5,6”<br>You answered: NaN</p><ul><li>배열 더하기를 사용해본 적이 없어서 몰랐다</li><li>내 예상은 <code>+</code>로 넘버로 캐스팅되어서 숫자가 아니니까 NaN이고 NaN 끼리 더해서 NaN이 나올 것을 예상했는데</li><li>알고 보니 문자열로 캐스팅이 되는 것이었다…</li><li><code>[1, 2, 3] + [4, 5, 6]</code> === <code>[1, 2, 3].toString() + [4, 5, 6].toString()</code></li></ul><h3 id="4-0-2-0-1-0-3"><a href="#4-0-2-0-1-0-3" class="headerlink" title="4. 0.2 + 0.1 === 0.3"></a>4. 0.2 + 0.1 === 0.3</h3><p>Output: false<br>You answered: false</p><ul><li>이 문제는 맞았다!</li><li>이전에 자바스크립트에 부동소수점 계산 문제가 있다는 것을 경험하고 <code>mathjs</code> 라이브러리를 통해 정확한 계산을 해본 적이 있다</li><li><code>0.2 + 0.1 === 0.30000000000000004</code> // true</li></ul><h3 id="5-10-2"><a href="#5-10-2" class="headerlink" title="5. 10,2"></a>5. 10,2</h3><p>Output: 2<br>You answered: 10</p><ul><li>이게 뭔가 싶다 ㅋㅋ</li><li>이런 코드를 작성할까 싶다</li><li>설명으로는 간단하게 맨 마지막 값을 반환한다고 되어있다</li></ul><figure class="highlight js"><figcaption><span>example</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(a); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><h3 id="9-true-“true”"><a href="#9-true-“true”" class="headerlink" title="9. true == “true”"></a>9. true == “true”</h3><p>Output: false<br>You answered: true</p><ul><li>서로 다른 타입을 <strong>Abstract Equality Comparison</strong>하면 같은 타입으로 coercion 된다</li><li>참고 ; <a href="https://262.ecma-international.org/11.0/#sec-abstract-equality-comparison">https://262.ecma-international.org/11.0/#sec-abstract-equality-comparison</a></li><li>참고 링크에 의하면 정해진 우선순위에 따라 결괏값을 반환하는데,</li><li>boolean과 string 비교는 number, string 으로 1차 변환되고,</li><li>number, string에서 number ,number로 변환되어 비교된다</li><li>결국 <code>true == &quot;true&quot;</code> -&gt; <code>1 == &quot;true&quot;</code> -&gt; <code>1 == NaN</code> -&gt; <code>false</code> 가 된다</li></ul><h3 id="11-“”-“”"><a href="#11-“”-“”" class="headerlink" title="11. “” - - “”"></a>11. “” - - “”</h3><p>Output: 0<br>You answered: SyntaxError</p><ul><li><code>-</code> 마이너스가 2번 연속 나오는데 이게 왜 문법 에러가 아니지… 충격</li><li>생각해보니까 <code>10 - (-10)</code> 같은 게 떠올랐다</li><li><code>-</code>를 붙여서 <code>--</code>로 썼다면 <em>SyntaxError</em> 라고 한다<br>- -“”; // -&gt; 0<br>–””; // -&gt; SyntaxError</li></ul><h3 id="12-null-0"><a href="#12-null-0" class="headerlink" title="12. null + 0"></a>12. null + 0</h3><p>Output: 0<br>You answered: NaN</p><ul><li><code>null</code>은 <code>undeifend</code>, <code>NaN</code>이랑 다르게 0으로 변환된다</li><li>참고로 <code>false</code>도 넘버로 캐스팅하면 0으로 변환된다</li></ul><h3 id="13-0-0"><a href="#13-0-0" class="headerlink" title="13. 0/0"></a>13. 0/0</h3><p>Output: NaN<br>You answered: Infinity</p><ul><li><code>0/0</code>은 <em>NaN</em></li><li><code>1/0</code>은 <em>Infinity</em> 다</li></ul><h3 id="18-true-“true”-0"><a href="#18-true-“true”-0" class="headerlink" title="18. true + (“true” - 0)"></a>18. true + (“true” - 0)</h3><p>Output: NaN<br>You answered: 2</p><ul><li><code>&quot;true&quot;</code>가 숫자로 캐스팅되면 1이 아니라 NaN이다</li><li><code>&quot;true&quot;</code>를 1로 생각하고 문제를 풀었다 ㅠ</li></ul><h3 id="21-NaN-NaN"><a href="#21-NaN-NaN" class="headerlink" title="21. NaN === NaN"></a>21. NaN === NaN</h3><p>Output: false<br>You answered: true</p><ul><li>이건 너무…</li></ul><figure class="highlight js"><figcaption><span>example</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">NaN</span> === <span class="literal">NaN</span>; <span class="comment">// -&gt; false</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="literal">NaN</span>, <span class="literal">NaN</span>); <span class="comment">// -&gt; true</span></span><br><span class="line"><span class="built_in">isNaN</span>(<span class="literal">NaN</span>) == <span class="built_in">isNaN</span>(<span class="literal">NaN</span>); <span class="comment">// -&gt; true</span></span><br></pre></td></tr></table></figure><ul><li>NaN 비교는 이런 식으로 해야 생각대로 동작한다</li></ul><h3 id="23-undefined-false"><a href="#23-undefined-false" class="headerlink" title="23. undefined + false"></a>23. undefined + false</h3><p>Output: NaN<br>You answered: 0</p><ul><li><code>undefined</code>은 <em>NaN</em> 으로 변환된다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://jsisweird.com/">https://jsisweird.com/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/quiz/">quiz</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/08/jsisweird/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>typescript에서 jest 쓰기</title>
      <link>https://chinsun9.github.io/2021/08/07/start-jest-with-typescript/</link>
      <guid>https://chinsun9.github.io/2021/08/07/start-jest-with-typescript/</guid>
      <pubDate>Sat, 07 Aug 2021 04:01:15 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/start-jest-with-typescript20210807/preview.png&quot; alt=&quot; &quot;&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/start-jest-with-typescript20210807/preview.png" alt=" "></p><blockquote><p>Jest encountered an unexpected token<br>SyntaxError: Cannot use import statement outside a module</p></blockquote><ul><li><p>typescript 프로젝트에서 <code>jest</code>설치 후에 테스트 작성하는데, 이상하게 오류가 떴다</p></li><li><p>무고한 eslintrc, tsconfig 이것저것 건드려봤는데 잘 동작하지 않았다</p></li><li><p>알고 보니까 typescript에서 jest 사용하려면 아래 절차를 <code>yarn add -D jest</code> 이후에 추가적으로 해줘야 한다</p><ul><li><a href="https://jestjs.io/docs/getting-started#using-babel">https://jestjs.io/docs/getting-started#using-babel</a></li><li><a href="https://jestjs.io/docs/getting-started#using-typescript">https://jestjs.io/docs/getting-started#using-typescript</a></li></ul></li></ul><h2 id="따라하기"><a href="#따라하기" class="headerlink" title="따라하기"></a>따라하기</h2><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jest 설치</span></span><br><span class="line">yarn add --dev jest</span><br><span class="line">yarn add --dev @types/jest</span><br><span class="line"></span><br><span class="line"><span class="comment"># typescript에서 jest 돌리기 위한 추가 종속성 설치</span></span><br><span class="line">yarn add --dev @babel/preset-typescript</span><br><span class="line">yarn add --dev babel-jest @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure><ul><li>종속성을 설치한다</li></ul><figure class="highlight js"><figcaption><span>babel.config.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  presets: [</span><br><span class="line">    [<span class="string">&#x27;@babel/preset-env&#x27;</span>, &#123; <span class="attr">targets</span>: &#123; <span class="attr">node</span>: <span class="string">&#x27;current&#x27;</span> &#125; &#125;],</span><br><span class="line">    <span class="string">&#x27;@babel/preset-typescript&#x27;</span>,</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><em>babel.config.js</em> 를 추가한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://jestjs.io/docs/getting-started#using-babel">https://jestjs.io/docs/getting-started#using-babel</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/jest/">jest</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/07/start-jest-with-typescript/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode extension rest client</title>
      <link>https://chinsun9.github.io/2021/08/06/vscode-extension-rest-client/</link>
      <guid>https://chinsun9.github.io/2021/08/06/vscode-extension-rest-client/</guid>
      <pubDate>Fri, 06 Aug 2021 12:46:15 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/vscode-extension-rest-client20210806/preview.png&quot; alt=&quot; &quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/vscode-extension-rest-client20210806/preview.png" alt=" "></p><ul><li>Rest Client라는 도구가 있다</li><li>text 기반으로 간편하게 리퀘스트를 작성할 수 있다</li></ul><figure class="highlight"><figcaption><span>example.http</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">###</span><br><span class="line"><span class="keyword">GET</span> <span class="string">http://localhost:3000/movies/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"></span><br><span class="line">###</span><br><span class="line"><span class="keyword">GET</span> <span class="string">http://localhost:3000/movies/1</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"></span><br><span class="line">###</span><br><span class="line"><span class="keyword">POST</span> <span class="string">http://localhost:3000/movies/</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;title&quot;: &quot;sung&quot;,</span><br><span class="line">    &quot;year&quot;: 2020,</span><br><span class="line">    &quot;genres&quot;: [&quot;mind blown&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>확장자는 <code>http</code>로 한다</li><li>한 파일에서 여러 개의 리퀘스트를 작성할 때는 <code>###</code>으로 구분하여 작성한다</li><li>리퀘스트 작성할 때 메서드(get, post, put, delete,…)를 입력하면 자동완성 스니펫을 제공한다</li><li>단축키로는 <code>ctrl alt R</code>로 리퀘스트를 보낼 수 있다</li></ul><h2 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h2><figure class="highlight http"><figcaption><span>envExample.http</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@endpoint = http://localhost:3000</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line"></span><br><span class="line"><span class="keyword">POST</span> <span class="string">&#123;&#123;endpoint&#125;&#125;/login</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;username&quot;: &quot;sung&quot;,</span><br><span class="line">    &quot;password&quot;: &quot;1234&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line"></span><br><span class="line"><span class="keyword">GET</span> <span class="string">&#123;&#123;endpoint&#125;&#125;/profile</span> <span class="meta">HTTP/1.1</span></span><br></pre></td></tr></table></figure><ul><li>변수를 사용할 수 있다</li><li>계속 중복해서 사용하는 문자열이나, 나중에 변경될 여지가 있는 것들을 변수로 만들 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=humao.rest-client">https://marketplace.visualstudio.com/items?itemName=humao.rest-client</a></li><li><a href="https://github.com/Huachao/vscode-restclient">https://github.com/Huachao/vscode-restclient</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/extension/">extension</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/06/vscode-extension-rest-client/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>SSG, static site generator</title>
      <link>https://chinsun9.github.io/2021/08/06/ssg-static-site-generator/</link>
      <guid>https://chinsun9.github.io/2021/08/06/ssg-static-site-generator/</guid>
      <pubDate>Fri, 06 Aug 2021 07:11:23 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;정적 사이트 생성기&lt;/li&gt;
&lt;li&gt;react와 같은 spa 라이브러리/프레임워크로 생성한 spa를 여러 html로 쪼개 준다&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;SSR 도구 예 ; nextjs, hexo,…&lt;/li&gt;
&lt;/ul&gt;
&lt;h2</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>정적 사이트 생성기</li><li>react와 같은 spa 라이브러리/프레임워크로 생성한 spa를 여러 html로 쪼개 준다</li></ul><ul><li>SSR 도구 예 ; nextjs, hexo,…</li></ul><h2 id="같이-보기"><a href="#같이-보기" class="headerlink" title="같이 보기"></a>같이 보기</h2><ul><li><a href="/2021/06/18/ssr-csr">SSR, CSR</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      <category domain="https://chinsun9.github.io/tags/ssg/">ssg</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/06/ssg-static-site-generator/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>파워셸에서 도커 명령어 파이프</title>
      <link>https://chinsun9.github.io/2021/08/06/docker-command-piping-in-powershell/</link>
      <guid>https://chinsun9.github.io/2021/08/06/docker-command-piping-in-powershell/</guid>
      <pubDate>Fri, 06 Aug 2021 05:09:02 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcaption&gt;&lt;span&gt;linux shell&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight sh"><figcaption><span>linux shell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop `docker ps -aq`</span><br></pre></td></tr></table></figure><ul><li>모든 컨테이너를 종료하는 명령이다</li><li>리눅스에서는 백틱(backtick, <strong>`</strong>)으로 묶어서 결과를 파이프할 수 있다</li><li>윈도우 터미널에서 같은 명령을 사용할 수가 없다… ㅠㅠ</li></ul><h2 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h2><figure class="highlight ps1"><figcaption><span>powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">ps</span> <span class="literal">-aq</span> | <span class="built_in">ForEach-Object</span> &#123; docker stop <span class="variable">$_</span> &#125;</span><br></pre></td></tr></table></figure><ul><li>나는 파워셸 디폴트로 사용하는데, 파워셸에서 이전 명령의 결괏값을 어떻게 다음 명령으로 넘겨줄 수 있는지 알아보았다 (파이프)</li></ul><figure class="highlight ps1"><figcaption><span>powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="number">1</span> <span class="number">2</span> | <span class="built_in">ForEach-Object</span> &#123; <span class="built_in">echo</span> <span class="string">&quot;value: <span class="variable">$_</span>&quot;</span> &#125;</span><br><span class="line"><span class="comment"># output:</span></span><br><span class="line"><span class="comment"># value: 1</span></span><br><span class="line"><span class="comment"># value: 2</span></span><br></pre></td></tr></table></figure><ul><li>단일 값이 아니라 배열 값을 받는 경우 <code>ForEach-Object</code>을 사용해야 하는 것을 알았다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/44300223/windows-cmd-docker-command-piping">https://stackoverflow.com/questions/44300223/windows-cmd-docker-command-piping</a></li><li><a href="https://docs.microsoft.com/ko-kr/powershell/module/microsoft.powershell.core/about/about_pipelines?view=powershell-7.1">https://docs.microsoft.com/ko-kr/powershell/module/microsoft.powershell.core/about/about_pipelines?view=powershell-7.1</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/cmd/">cmd</category>
      
      
      <category domain="https://chinsun9.github.io/tags/docker/">docker</category>
      
      <category domain="https://chinsun9.github.io/tags/cmd/">cmd</category>
      
      <category domain="https://chinsun9.github.io/tags/powershell/">powershell</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/06/docker-command-piping-in-powershell/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>typescript Partial</title>
      <link>https://chinsun9.github.io/2021/08/05/typescript-Partial/</link>
      <guid>https://chinsun9.github.io/2021/08/05/typescript-Partial/</guid>
      <pubDate>Thu, 05 Aug 2021 06:55:28 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/typescript-Partial20210805/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/typescript-Partial20210805/preview.png" alt=" "></p><ul><li><code>Partial</code>을 사용해서 각 필드를 옵셔널로 만들 수 있다</li></ul><figure class="highlight ts"><figcaption><span>example.ts</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Todo = &#123;</span><br><span class="line">  title: <span class="built_in">string</span>;</span><br><span class="line">  description: <span class="built_in">string</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> updateTodo = <span class="function">(<span class="params">todo: Todo, fieldsToUpdats: Partial&lt;Todo&gt;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123; ...todo, ...fieldsToUpdats &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> todo1: Todo = &#123;</span><br><span class="line">  title: <span class="string">&#x27;be super&#x27;</span>,</span><br><span class="line">  description: <span class="string">&#x27;power overwhelming&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> todo2 = updateTodo(todo1, &#123; <span class="attr">description</span>: <span class="string">&#x27;show me the money&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(todo2);</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.typescriptlang.org/docs/handbook/utility-types.html">https://www.typescriptlang.org/docs/handbook/utility-types.html</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/partial/">partial</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/05/typescript-Partial/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>start nestjs</title>
      <link>https://chinsun9.github.io/2021/08/04/start-nestjs/</link>
      <guid>https://chinsun9.github.io/2021/08/04/start-nestjs/</guid>
      <pubDate>Wed, 04 Aug 2021 06:54:26 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;node의 spring을 배워보자&lt;/p&gt;
&lt;h2 id=&quot;nest-cli-설치&quot;&gt;&lt;a href=&quot;#nest-cli-설치&quot; class=&quot;headerlink&quot; title=&quot;nest cli 설치&quot;&gt;&lt;/a&gt;nest cli 설치&lt;/h2&gt;&lt;figure cla</description>
        
      
      
      
      <content:encoded><![CDATA[<p>node의 spring을 배워보자</p><h2 id="nest-cli-설치"><a href="#nest-cli-설치" class="headerlink" title="nest cli 설치"></a>nest cli 설치</h2><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g @nestjs/cli</span><br></pre></td></tr></table></figure><h2 id="commands"><a href="#commands" class="headerlink" title="commands"></a>commands</h2><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 현재 디렉터리에 nest project init</span></span><br><span class="line">nest new .</span><br><span class="line"></span><br><span class="line"><span class="comment"># run (dev)</span></span><br><span class="line">yarn start:dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate service</span></span><br><span class="line"><span class="comment"># nest g service &#123;newServiceName&#125;</span></span><br><span class="line">nest g service pusher</span><br><span class="line"></span><br><span class="line"><span class="comment"># build</span></span><br><span class="line">yarn build</span><br><span class="line"></span><br><span class="line"><span class="comment"># run (prod)</span></span><br><span class="line">yarn start:prod</span><br></pre></td></tr></table></figure><h2 id="강의-링크"><a href="#강의-링크" class="headerlink" title="강의 링크"></a>강의 링크</h2><ul><li><a href="https://nomadcoders.co/nestjs-fundamentals">https://nomadcoders.co/nestjs-fundamentals</a></li><li><a href="https://youtube.com/playlist?list=PLlaDAvA2MhR2jb8zavu6I-w1BA878aHcB">https://youtube.com/playlist?list=PLlaDAvA2MhR2jb8zavu6I-w1BA878aHcB</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.nestjs.com/">https://docs.nestjs.com/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nestjs/">nestjs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nestjs/">nestjs</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/04/start-nestjs/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>prototype function vs. method function</title>
      <link>https://chinsun9.github.io/2021/08/03/javascript-prototype-function-vs-method-function/</link>
      <guid>https://chinsun9.github.io/2021/08/03/javascript-prototype-function-vs-method-function/</guid>
      <pubDate>Tue, 03 Aug 2021 02:24:59 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, nickname</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.name = name;</span><br><span class="line">  <span class="built_in">this</span>.nickname = nickname;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// method function</span></span><br><span class="line">  <span class="built_in">this</span>.sayHi = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.name, <span class="built_in">this</span>.nickname, <span class="string">&#x27;hello&#x27;</span>, <span class="built_in">this</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sung = <span class="keyword">new</span> Person(<span class="string">&#x27;sung&#x27;</span>, <span class="string">&#x27;superpower&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> sung2 = <span class="keyword">new</span> Person(<span class="string">&#x27;sung&#x27;</span>, <span class="string">&#x27;superpower&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sung.sayHi === sung2.sayHi); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">Person.prototype.sayHello = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;sayHello prototype&#x27;</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">this</span>.name, <span class="built_in">this</span>.nickname, <span class="string">&#x27;hello&#x27;</span>, <span class="built_in">this</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sung.sayHello === sung2.sayHello); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><ul><li>생성자가 실행될때마다 새로운 메서드 함수가 생성된다</li><li>프로토타입으로 정의된 함수는 모든 인스턴스가 하나의 함수를 바라본다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/4508313/advantages-of-using-prototype-vs-defining-methods-straight-in-the-constructor">https://stackoverflow.com/questions/4508313/advantages-of-using-prototype-vs-defining-methods-straight-in-the-constructor</a></li><li><a href="https://developer.mozilla.org/ko/docs/Learn/JavaScript/Objects/Object_prototypes">https://developer.mozilla.org/ko/docs/Learn/JavaScript/Objects/Object_prototypes</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/prototype/">prototype</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/03/javascript-prototype-function-vs-method-function/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>syntactic sugar</title>
      <link>https://chinsun9.github.io/2021/08/03/syntactic-sugar/</link>
      <guid>https://chinsun9.github.io/2021/08/03/syntactic-sugar/</guid>
      <pubDate>Tue, 03 Aug 2021 02:24:50 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;좋은 문법&lt;/li&gt;
&lt;li&gt;동일한 결과를 가져오는데 문법만 다른 것&lt;/li&gt;
&lt;li&gt;근데 읽기 쉽게 다르다&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;js에서-syntactic-sugar-예&quot;&gt;&lt;a href=&quot;#js에서-syntactic-sug</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>좋은 문법</li><li>동일한 결과를 가져오는데 문법만 다른 것</li><li>근데 읽기 쉽게 다르다</li></ul><h2 id="js에서-syntactic-sugar-예"><a href="#js에서-syntactic-sugar-예" class="headerlink" title="js에서 syntactic sugar 예"></a>js에서 syntactic sugar 예</h2><ul><li>class</li><li>async await</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://en.wikipedia.org/wiki/Syntactic_sugar">https://en.wikipedia.org/wiki/Syntactic_sugar</a></li><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Language_Resources">https://developer.mozilla.org/ko/docs/Web/JavaScript/Language_Resources</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/keyword/">keyword</category>
      
      
      <category domain="https://chinsun9.github.io/tags/keyword/">keyword</category>
      
      <category domain="https://chinsun9.github.io/tags/syntactic-sugar/">syntactic sugar</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/03/syntactic-sugar/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>cli에서 줄바꿔서 명령어 계속 입력하기</title>
      <link>https://chinsun9.github.io/2021/08/03/cli-continue-command-to-next-line/</link>
      <guid>https://chinsun9.github.io/2021/08/03/cli-continue-command-to-next-line/</guid>
      <pubDate>Tue, 03 Aug 2021 01:12:55 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/cli-continue-command-to-next-line-20210803/preview.png&quot; a</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/cli-continue-command-to-next-line-20210803/preview.png" alt=" "></p><figure class="highlight bat"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="number">1</span> ^</span><br><span class="line"><span class="number">2</span> ^</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight ps1"><figcaption><span>powershell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="number">1</span> `</span><br><span class="line"><span class="number">2</span> `</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><figcaption><span>shell</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 \</span><br><span class="line">2 \</span><br><span class="line">3</span><br></pre></td></tr></table></figure><ul><li>cmd, powershell, bash 다 달라서 흠이다</li><li>cli에서 긴 명령어를 작성할 때 가독성을 높여줄 수 있다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/cmd/">cmd</category>
      
      
      <category domain="https://chinsun9.github.io/tags/cmd/">cmd</category>
      
      <category domain="https://chinsun9.github.io/tags/bash/">bash</category>
      
      <category domain="https://chinsun9.github.io/tags/powershell/">powershell</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/03/cli-continue-command-to-next-line/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>202107 검색 실적</title>
      <link>https://chinsun9.github.io/2021/08/03/202107-search-performance-report/</link>
      <guid>https://chinsun9.github.io/2021/08/03/202107-search-performance-report/</guid>
      <pubDate>Tue, 03 Aug 2021 00:03:58 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202107-search-performance-report20210803/preview.png&quot; alt</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/202107-search-performance-report20210803/preview.png" alt=" "></p>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/03/202107-search-performance-report/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>javascript this</title>
      <link>https://chinsun9.github.io/2021/08/02/javascript-this/</link>
      <guid>https://chinsun9.github.io/2021/08/02/javascript-this/</guid>
      <pubDate>Mon, 02 Aug 2021 07:10:49 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;나는 평소 js에서 this나 prototype을 활용해본 적이 없다&lt;br&gt;c, java를 하다가 js를 넘어왔는데, 공부하면서 use strict를 기본으로 사용했다&lt;br&gt;리액트는 타입스크트와 함께 시작했고,&lt;br&gt;리액트에서 컴포넌트를 만들 때</description>
        
      
      
      
      <content:encoded><![CDATA[<p>나는 평소 js에서 this나 prototype을 활용해본 적이 없다<br>c, java를 하다가 js를 넘어왔는데, 공부하면서 use strict를 기본으로 사용했다<br>리액트는 타입스크트와 함께 시작했고,<br>리액트에서 컴포넌트를 만들 때도 함수형으로 작성을 시작해서 this를 사용해본 경험이 없었다<br>자연스럽게 <strong>thisless</strong>한 코드를 작성하게 되고 선호하게 되었다<br>근데 this를 사용한 코드를 볼 때, 해석할 수 있어야 한다<br>그동안 애매하게 알고 있었던 this에 대해 공부해보았다</p><h2 id="this"><a href="#this" class="headerlink" title="this"></a>this</h2><ul><li>use strict / default(sloppy mode)</li></ul><h3 id="최상위-스코프에서"><a href="#최상위-스코프에서" class="headerlink" title="최상위 스코프에서"></a>최상위 스코프에서</h3><ul><li><code>window</code> / windows</li></ul><h3 id="함수안에서-function"><a href="#함수안에서-function" class="headerlink" title="함수안에서 (function)"></a>함수안에서 (function)</h3><ul><li><code>undefined</code> / window</li></ul><h3 id="객체안에서"><a href="#객체안에서" class="headerlink" title="객체안에서"></a>객체안에서</h3><ul><li><code>자기 자신&#123;&#125;</code> / 자기 자신</li><li>객체 멤버로 화살표 함수가 있는 경우 : <code>자기 자신&#123;&#125;</code>이 아니라 <code>자기 자신&#123;&#125;</code>보다 한 단계 위</li></ul><h3 id="화살표함수에서"><a href="#화살표함수에서" class="headerlink" title="화살표함수에서"></a>화살표함수에서</h3><ul><li><code>window</code> / window</li></ul><h2 id="정리"><a href="#정리" class="headerlink" title="정리"></a>정리</h2><ul><li><code>strict mode</code>일 때와 아닐 때 동작이 달라진다</li><li><code>strict mode</code>가 아닌 경우(sloppy mode)는 생각하지 말자</li><li>화살표 함수는 항상 한 꺼풀 위와 동일한 this</li><li>함수(function keyword)와 객체의 경우 자기 자신만의 스코프를 만들고 자기를 바라본다</li><li>this는 누가 실행했냐에 따라 달라진다</li><li>this를 고정시키려면 <code>bind</code>, <code>apply</code>를 사용한다</li></ul><h2 id="생각"><a href="#생각" class="headerlink" title="생각"></a>생각</h2><ul><li>this, 콘텍스트, 스코프 체인, 렉시컬 스코핑 뒤죽박죽 개념이 떠올라서 항상 헷갈린다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>공부한 레포 ; <a href="https://github.com/chinsun9/javascript-this-practice">https://github.com/chinsun9/javascript-this-practice</a></li><li><a href="https://youtu.be/kb0Af7dzCTs">https://youtu.be/kb0Af7dzCTs</a></li><li><a href="https://youtu.be/PAr92molMHU">https://youtu.be/PAr92molMHU</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/javascript/">javascript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/this/">this</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/02/javascript-this/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>npm 패키지 고르는 법</title>
      <link>https://chinsun9.github.io/2021/08/01/npm-trends/</link>
      <guid>https://chinsun9.github.io/2021/08/01/npm-trends/</guid>
      <pubDate>Sun, 01 Aug 2021 03:56:49 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;여러 비슷한 패키지들이 있는데 어떤 것을 고를지 고민될때가 있다&lt;br&gt;또 내가 알고 있는 패키지를 대체할 좋은 패키지가 있는지 찾아볼 때도 있다&lt;br&gt;이럴때 유용한 &lt;strong&gt;npm trends&lt;/strong&gt; 가 있다&lt;/p&gt;
&lt;p&gt;&lt;img </description>
        
      
      
      
      <content:encoded><![CDATA[<p>여러 비슷한 패키지들이 있는데 어떤 것을 고를지 고민될때가 있다<br>또 내가 알고 있는 패키지를 대체할 좋은 패키지가 있는지 찾아볼 때도 있다<br>이럴때 유용한 <strong>npm trends</strong> 가 있다</p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/npm-trends20210730/preview.png" alt=" "></p><ul><li>npm trends를 통해 패키지들을 비교해볼 수 있다</li><li>패키지를 검색하면 연관된 패키지들이 추천되고 서로 비교해볼 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.npmtrends.com/">https://www.npmtrends.com/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/npm/">npm</category>
      
      
      <comments>https://chinsun9.github.io/2021/08/01/npm-trends/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>리액트 SPA 쉽게 공유해보기</title>
      <link>https://chinsun9.github.io/2021/07/30/serve-react-app-simply/</link>
      <guid>https://chinsun9.github.io/2021/07/30/serve-react-app-simply/</guid>
      <pubDate>Fri, 30 Jul 2021 05:37:22 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;내가 만든 리액트 앱을 친구들에게 공유하기 위한 간단한 방법을 소개한다&lt;br&gt;방법은 2가지가 있다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nodejs express&lt;/li&gt;
&lt;li&gt;github pages&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;방법1-nodejs-ex</description>
        
      
      
      
      <content:encoded><![CDATA[<p>내가 만든 리액트 앱을 친구들에게 공유하기 위한 간단한 방법을 소개한다<br>방법은 2가지가 있다</p><ul><li>nodejs express</li><li>github pages</li></ul><h2 id="방법1-nodejs-express"><a href="#방법1-nodejs-express" class="headerlink" title="방법1. nodejs express"></a>방법1. nodejs express</h2><ul><li>집에서 포트포워딩을 통해 공유할 때나,</li><li>AWS EC2를 통해 공유할 때 사용할 수 있는 방법이다</li><li><a href="https://github.com/chinsun9/serve-spa-expressjs">https://github.com/chinsun9/serve-spa-expressjs</a></li></ul><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/chinsun9/serve-spa-expressjs.git</span><br><span class="line"><span class="built_in">cd</span> serve-spa-expressjs</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><ul><li>위 저장소를 클론하고, 종속성을 설치한다</li><li><em>index.js</em> 에서 <code>port</code>와 <code>staticDir</code>을 내 상황에 맞게 수정한다</li></ul><h3 id="port"><a href="#port" class="headerlink" title="port"></a>port</h3><figure class="highlight js"><figcaption><span>index.js:5</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> port = <span class="number">5000</span>; <span class="comment">// 원하는 포트로 수정</span></span><br></pre></td></tr></table></figure><h3 id="staticDir-spa-path"><a href="#staticDir-spa-path" class="headerlink" title="staticDir (spa path)"></a>staticDir (spa path)</h3><figure class="highlight js"><figcaption><span>index.js:7</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> staticDir = path.join(__dirname, <span class="string">&#x27;../build&#x27;</span>); <span class="comment">// 빌드된 spa 경로, index.js를 기준으로 빌드된 리액트앱 상대경로를 path.join 두번째 인자에 넣어준다</span></span><br></pre></td></tr></table></figure><h3 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h3><ul><li><a href="https://github.com/chinsun9/serve-spa-expressjs">https://github.com/chinsun9/serve-spa-expressjs</a></li></ul><h2 id="방법2-github-pages"><a href="#방법2-github-pages" class="headerlink" title="방법2. github pages"></a>방법2. github pages</h2><ul><li>깃허브 페이지를 통해 배포할 수 있다</li><li>하지만 깃허브 페이지에서는 SPA를 지원하지 않는다</li><li>1페이지짜리 리액트 앱이면 상관없지만,</li><li><code>react-router-dom</code>을 사용하면서 url이 변화하는 경우</li><li>index.html과 404.html에 스크립트를 추가해줘야 한다</li><li>github pages에서 spa처럼 동작하게 해주는 마법 ; <a href="https://github.com/rafgraph/spa-github-pages#usage-instructions">https://github.com/rafgraph/spa-github-pages#usage-instructions</a></li><li><a href="https://chinsun9.github.io/hello-react/"><strong>demo page</strong></a></li></ul><h3 id="gh-pages-설치"><a href="#gh-pages-설치" class="headerlink" title="gh-pages 설치"></a>gh-pages 설치</h3><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D gh-pages</span><br></pre></td></tr></table></figure><h3 id="package-json-수정"><a href="#package-json-수정" class="headerlink" title="package.json 수정"></a>package.json 수정</h3><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="attr">&quot;deploy&quot;</span>: <span class="string">&quot;gh-pages -d build&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">&quot;homepage&quot;</span>: <span class="string">&quot;https://chinsun9.github.io/hello-react/&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>deploy</code> 스크립트 추가, <code>homepage</code> 필드를 추가한다</li><li>이때 <code>homepage</code>필드의 값은</li><li><code>https://&#123;username&#125;.github.io/&#123;repo&#125;/</code>로 한다</li></ul><h3 id="Router에-basename-추가"><a href="#Router에-basename-추가" class="headerlink" title="Router에 basename 추가"></a>Router에 basename 추가</h3><figure class="highlight jsx"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;React.StrictMode&gt;</span><br><span class="line">    &lt;Router basename=&#123;process.env.PUBLIC_URL&#125;&gt;</span><br><span class="line">      &lt;App /&gt;</span><br><span class="line">    &lt;/Router&gt;</span><br><span class="line">  &lt;/React.StrictMode&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>최상위 Router에 <code>basename=&#123;process.env.PUBLIC_URL&#125;</code>을 추가한다</li></ul><h3 id="404-html-추가"><a href="#404-html-추가" class="headerlink" title="404.html 추가"></a>404.html 추가</h3><ul><li><a href="https://github.com/rafgraph/spa-github-pages/blob/gh-pages/404.html">https://github.com/rafgraph/spa-github-pages/blob/gh-pages/404.html</a></li><li><code>public/404.html</code>을 만들고 위 내용을 추가한다</li><li>이때 다른점은 <code>pathSegmentsToKeep</code> 값을 1로 한다</li></ul><h3 id="index-html-수정"><a href="#index-html-수정" class="headerlink" title="index.html 수정"></a>index.html 수정</h3><ul><li><a href="https://github.com/rafgraph/spa-github-pages/blob/gh-pages/index.html">https://github.com/rafgraph/spa-github-pages/blob/gh-pages/index.html</a></li><li><code>public/index.html</code> head 부분에 위 <code>&lt;!-- Start Single Page Apps for GitHub Pages --&gt;</code> 에 해당하는 스크립트 부분을 추가한다</li></ul><h3 id="build-amp-amp-deploy"><a href="#build-amp-amp-deploy" class="headerlink" title="build &amp;&amp; deploy"></a>build &amp;&amp; deploy</h3><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br><span class="line">yarn deploy</span><br></pre></td></tr></table></figure><ul><li>gh-pages 브랜치가 생성되어 있고,</li><li>깃허브 페이지 기능이 활성화되어있는 것을 확인할 수 있을 것이다</li></ul><h3 id="소스코드-1"><a href="#소스코드-1" class="headerlink" title="소스코드"></a>소스코드</h3><ul><li><a href="https://github.com/chinsun9/hello-react">https://github.com/chinsun9/hello-react</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/rafgraph/spa-github-pages#usage-instructions">https://github.com/rafgraph/spa-github-pages#usage-instructions</a></li><li>github pages로 자랑하기 ; <a href="https://github.com/chinsun9/hello-react">https://github.com/chinsun9/hello-react</a></li><li>nodejs express로 자랑하기 ; <a href="https://github.com/chinsun9/serve-spa-expressjs">https://github.com/chinsun9/serve-spa-expressjs</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/express/">express</category>
      
      <category domain="https://chinsun9.github.io/tags/spa/">spa</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/30/serve-react-app-simply/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>깃허브에서 검색할 때 포크 저장소 포함하기</title>
      <link>https://chinsun9.github.io/2021/07/30/github-advanced-search/</link>
      <guid>https://chinsun9.github.io/2021/07/30/github-advanced-search/</guid>
      <pubDate>Fri, 30 Jul 2021 00:53:17 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;깃허브에서 저장소를 검색할 때, 포크 저장소는 검색되지 않는다&lt;br&gt;&lt;code&gt;github advanced search&lt;/code&gt;를 사용해서 검색해보자&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsu</description>
        
      
      
      
      <content:encoded><![CDATA[<p>깃허브에서 저장소를 검색할 때, 포크 저장소는 검색되지 않는다<br><code>github advanced search</code>를 사용해서 검색해보자</p><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-advanced-search20210730/preview.png" alt=" "></p><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><ul><li>원본 레포가 업데이트가 없어서 포크를 확인하고 싶었다</li><li>그런데 기본적인 깃허브 검색으로는 포크가 검색되지 않았다</li></ul><h2 id="github-advanced-search"><a href="#github-advanced-search" class="headerlink" title="github advanced search"></a>github advanced search</h2><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-advanced-search20210730/2.png" alt=" "></p><ul><li>검색 결과 왼쪽 칼럼 하단을 보면 advanced search 버튼이 있다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-advanced-search20210730/1.png" alt=" "></p><ul><li>여러 검색 옵션들이 있는데, 포크를 포함하여 검색하기 위해 <code>and</code> <em>including forks.</em> 로 설정했다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/github-advanced-search20210730/preview.png" alt=" "></p><ul><li>이제 포크가 포함되어 검색되는 것을 확인할 수 있다</li><li>검색 결과 화면에서 정렬을 사용할 수 있다</li><li>나는 스타가 많은 순으로 정렬하여 인기 있는 포크를 확인할 수 있었다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/30/github-advanced-search/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git config by workspace</title>
      <link>https://chinsun9.github.io/2021/07/30/git-config-by-workspace/</link>
      <guid>https://chinsun9.github.io/2021/07/30/git-config-by-workspace/</guid>
      <pubDate>Fri, 30 Jul 2021 00:38:10 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;보통 global로 설정된 user.name, uesr.email이 있을 것이다&lt;/li&gt;
&lt;li&gt;깃 프로젝트 워크스페이스 별로 다른 계정을 사용해보자&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;figcap</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>보통 global로 설정된 user.name, uesr.email이 있을 것이다</li><li>깃 프로젝트 워크스페이스 별로 다른 계정을 사용해보자</li></ul><figure class="highlight sh"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git config user.name &#123;username&#125;</span></span><br><span class="line">git config user.name chinsun9</span><br><span class="line"></span><br><span class="line"><span class="comment"># git config user.email &#123;email&#125;</span></span><br><span class="line">git config user.email chin_sung@naver.com</span><br></pre></td></tr></table></figure><ul><li>글로벌로 설정된 이름, 이메일 대신, 다른 계정을 사용하고 싶은 워크스페이스로 가서 위 명령을 실행한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/8801729/is-it-possible-to-have-different-git-configuration-for-different-projects">https://stackoverflow.com/questions/8801729/is-it-possible-to-have-different-git-configuration-for-different-projects</a></li><li>경로 패턴에 따라 config를 다르게 구성하는 방법도 있다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/30/git-config-by-workspace/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 깃, 도커 설치하기</title>
      <link>https://chinsun9.github.io/2021/07/29/install-git-docker-on-raspberrypi/</link>
      <guid>https://chinsun9.github.io/2021/07/29/install-git-docker-on-raspberrypi/</guid>
      <pubDate>Thu, 29 Jul 2021 08:57:14 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/install-git-docker-on-raspberrypi20210729/preview.png&quot; al</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/install-git-docker-on-raspberrypi20210729/preview.png" alt=" "></p><h3 id="git-설치"><a href="#git-설치" class="headerlink" title="git 설치"></a>git 설치</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h3 id="docker-설치"><a href="#docker-설치" class="headerlink" title="docker 설치"></a>docker 설치</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%84%A4%EC%B9%98">https://git-scm.com/book/ko/v2/%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-Git-%EC%84%A4%EC%B9%98</a></li><li><a href="https://docs.docker.com/engine/install/debian/">https://docs.docker.com/engine/install/debian/</a></li><li><a href="/2021/07/29/how-to-install-raspberrypi-os/">라즈베리파이에 라즈비안 설치 및 설정</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/docker/">docker</category>
      
      <category domain="https://chinsun9.github.io/tags/raspberrypi/">raspberrypi</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/29/install-git-docker-on-raspberrypi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>라즈베리파이에 라즈비안 설치 및 설정</title>
      <link>https://chinsun9.github.io/2021/07/29/how-to-install-raspberrypi-os/</link>
      <guid>https://chinsun9.github.io/2021/07/29/how-to-install-raspberrypi-os/</guid>
      <pubDate>Thu, 29 Jul 2021 08:49:35 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;라즈베리파이에 &lt;strong&gt;Raspberry Pi OS Lite&lt;/strong&gt; 를 설치해보자&lt;/p&gt;
&lt;h2 id=&quot;라즈비안-이미지-받기&quot;&gt;&lt;a href=&quot;#라즈비안-이미지-받기&quot; class=&quot;headerlink&quot; title=&quot;라즈비안 이미지 </description>
        
      
      
      
      <content:encoded><![CDATA[<p>라즈베리파이에 <strong>Raspberry Pi OS Lite</strong> 를 설치해보자</p><h2 id="라즈비안-이미지-받기"><a href="#라즈비안-이미지-받기" class="headerlink" title="라즈비안 이미지 받기"></a>라즈비안 이미지 받기</h2><ul><li><a href="https://www.raspberrypi.org/software/operating-systems/">https://www.raspberrypi.org/software/operating-systems/</a></li><li><code>Raspberry Pi OS Lite</code>를 다운로드한다</li></ul><h2 id="sd-카드-준비"><a href="#sd-카드-준비" class="headerlink" title="sd 카드 준비"></a>sd 카드 준비</h2><ul><li><a href="https://www.balena.io/etcher/">https://www.balena.io/etcher/</a></li><li><code>balenaEtcher</code> 설치한다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/how-to-install-raspberrypi-os20210729/preview.png" alt=" "></p><ul><li>라즈비안 이미지를 선택하고</li><li>인스톨한 sd카드를 선택하여 os를 설치한다</li></ul><h2 id="와이파이로-인터넷-연결하기"><a href="#와이파이로-인터넷-연결하기" class="headerlink" title="와이파이로 인터넷 연결하기"></a>와이파이로 인터넷 연결하기</h2><ul><li>sd카드를 꼽고,</li><li>hdmi로 모니터와 키보드를 연결하고 전원을 켠다</li><li>기본 계정은 pi / raspberry 이다</li><li>와이파이로 인터넷을 연결해주겠다</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure><ul><li>system option -&gt; wireless lan -&gt; GB (영국) -&gt; 와이파이명 -&gt; 와이파이 비밀번호 -&gt; 리부트</li><li>재부팅 후에 인터넷 연결을 확인하기 위해 <code>ifconfig</code> 명령을 실행하여 확인해준다</li></ul><h2 id="ssh-설정하기"><a href="#ssh-설정하기" class="headerlink" title="ssh 설정하기"></a>ssh 설정하기</h2><p>외부에서 리모트로 개발하기 위해 ssh 설정을 해줘야 한다</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure><ul><li>interface option -&gt; ssh -&gt; enable</li><li>이제 리모트 할 수 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://www.raspberrypi.org/software/operating-systems/">https://www.raspberrypi.org/software/operating-systems/</a></li><li><a href="/2021/07/29/install-git-docker-on-raspberrypi/">라즈베리파이에 깃, 도커 설치하기</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/etc/">etc</category>
      
      
      <category domain="https://chinsun9.github.io/tags/raspberrypi/">raspberrypi</category>
      
      
      <comments>https://chinsun9.github.io/2021/07/29/how-to-install-raspberrypi-os/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
