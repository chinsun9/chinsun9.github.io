<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Fri, 06 Nov 2020 07:10:40 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Banner Maker 클론코딩</title>
      <link>https://chinsun9.github.io/2020/11/06/Banner-maker-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</link>
      <guid>https://chinsun9.github.io/2020/11/06/Banner-maker-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</guid>
      <pubDate>Fri, 06 Nov 2020 07:08:33 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/banner-maker/banner-maker&quot;&gt;banner-maker/banner-maker&lt;/a&gt;를 클론코딩해보았다.&lt;/li&gt;
&lt;li&gt;내 두번째 리액트 프로젝트..!&lt;/li&gt;
&lt;/u</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><a href="https://github.com/banner-maker/banner-maker">banner-maker/banner-maker</a>를 클론코딩해보았다.</li><li>내 두번째 리액트 프로젝트..!</li></ul><h2 id="데모"><a href="#데모" class="headerlink" title="데모"></a>데모</h2><p><img src="/images/Banner-maker-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A920201106/preview.jpg" alt=" "></p><ul><li><a href="https://chinsun9.github.io/react-banner-maker/" target="_blank">Banner Maker (React)</a></li></ul><h2 id="기능"><a href="#기능" class="headerlink" title="기능"></a>기능</h2><ul><li>캔버스 크기 조절</li><li>실시간 캔버스 업데이트</li><li>폰트 사이즈 조절</li><li>폰트색 조절</li><li>캔버스색에 따른 폰트색 자동조절</li><li>캔버스색 조절</li><li>랜덤 캠버스색</li><li>이미지로 다운로드</li><li>클립보드로 카피</li><li>컬러 히스토리 기능</li><li>컬러 히스토리 임포트, 익스포트 기능</li></ul><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><ul><li>타입스크립트 공부 겸 리액트도 같이 하자는 생각으로 리액트 타입스크립트를 시작했다.</li><li>velopert님의 <a href="https://velog.io/@velopert/using-react-with-typescript">리액트 프로젝트에서 타입스크립트 사용하기</a> 글을 보고 따라하다가</li><li>튜토리얼을 통해 잘 만들어진 프로젝트 구조를 기반으로 만들었다.</li><li>리액트가 아직 익숙하지 않은데 리액트의 훅이라던지 처음부터 고급??개념들을 사용하니까</li><li>사실 뭐가 좋은지, 이렇게 써서 좋은점이 무엇인지..</li><li>이 개념을 도입하기전의 것들을 시도해보지 않았기 때문에 막연한 감이 있었다.</li><li>나는 공부할때 이론보단 무조건 실기이고, 일단 만들어보면서 익히고 이해하자라는 주의이다.</li><li>그래서 이것저것 쉽게만들 수 있다고 생각한다. (나중에 보면 코드가 엄청 구릴지라도..)</li></ul><ul><li>이번에 만들면서 신경쎃던 것은</li><li>사용성..?? 인 것같다.</li></ul><p><img src="/images/Banner-maker-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A920201106/1.jpg" alt=" "></p><ul><li>나는 보통 이미지를 ctrl c 카톡에다가 ctrl v 하여 톡방에 올리는데</li><li>그걸위한 copy clipboard 버튼을 만들었다. 저장후 이미지 올리기는 귀찮기 때문에..</li></ul><p><img src="/images/Banner-maker-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A920201106/2.jpg" alt=" "></p><ul><li>또 랜덤 칼러 버튼을 만들어서 색을 쇼핑했다.</li></ul><figure class="highlight js"><figcaption><span>js/index.js</span><a href="https://github.com/chinsun9/html-banner-maker/commit/5cccc1594309f732ea8edd8ca08c91800d97d317">html-banner-maker/commit/5cccc1594309f732ea8edd8ca08c91800d97d317</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get color (black/white) depending on bgColor so it would be clearly seen.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">bgColor</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;string&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getColorByBgColor</span>(<span class="params">bgColor</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!bgColor) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">parseInt</span>(bgColor.replace(<span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;&#x27;</span>), <span class="number">16</span>) &gt; <span class="number">0xffffff</span> / <span class="number">2</span></span><br><span class="line">    ? <span class="string">&#x27;#000&#x27;</span></span><br><span class="line">    : <span class="string">&#x27;#fff&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>사용해보면 알겠지만 랜덤으로 생성된 배경색에 따라 폰트색도 검정색/흰색 적절한게 선택된다.</li></ul><p><img src="/images/Banner-maker-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A920201106/3.jpg" alt=" "></p><ul><li>컬러 히스토리 기능이다.</li><li>copy 버튼이나 download 버튼을 누르면 해당 배경색과, 폰트색이 히스토리에 저장된다.</li><li>만약에 같은 최근 히스토리에 저장된 색과 같은 색이면 저장하지 않도록 하였다. 버튼을 누를때마다 증식되지 않도록..</li><li>export 버튼을 눌러 현재 저장된 컬러 히스토리를 json 파일로 내보내는 기능도있다.</li><li>깃허브 페이지를 이용해 호스팅하기때문에, 내 앱은 정적이다.</li><li>어떻게 히스토리를 저장하고 불러올까 생각하다가 json 파일로 내보내고 다시 불러오도록 만들게 되었다.</li></ul><h2 id="개선방향"><a href="#개선방향" class="headerlink" title="개선방향"></a>개선방향</h2><ul><li>칼러픽커에서 알파값을 바꿀 수 있도록 하기</li><li>폰트 변경 기능</li><li>textarea를 div안에 넣어버리기..? (html2canvas 사용해보기)</li><li>json파일로부터 컬러히스토리 임포트할때 덮어쓰기가 아니라 병합으로 불러오기</li></ul><figure class="highlight js"><figcaption><span>src/modules/common/copyToClipboard.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">copyToClipboard</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> canvas = <span class="built_in">document</span>.querySelector(<span class="string">`#myCanvas`</span>);</span><br><span class="line">  <span class="keyword">if</span> (!canvas) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  canvas.toBlob(<span class="function"><span class="keyword">function</span> (<span class="params">blob</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// eslint-disable-next-line no-undef</span></span><br><span class="line">    <span class="keyword">const</span> item = <span class="keyword">new</span> ClipboardItem(&#123; <span class="string">&#x27;image/png&#x27;</span>: blob &#125;);</span><br><span class="line">    navigator.clipboard.write([item]);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>클립보드 복사 js 코드를 ts로 변환하지 못한 코드..</li></ul><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><ul><li><a href="https://github.com/chinsun9/react-banner-maker">react-banner-maker</a></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li>리액트 타입스크립트 공부 ; <a href="https://velog.io/@velopert/using-react-with-typescript">리액트 프로젝트에서 타입스크립트 사용하기</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/hook/">hook</category>
      
      <category domain="https://chinsun9.github.io/tags/%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/">클론코딩</category>
      
      <category domain="https://chinsun9.github.io/tags/clone-coding/">clone coding</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/06/Banner-maker-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>정처기 으악</title>
      <link>https://chinsun9.github.io/2020/11/06/%EC%A0%95%EC%B2%98%EA%B8%B0-%EC%9C%BC%EC%95%85/</link>
      <guid>https://chinsun9.github.io/2020/11/06/%EC%A0%95%EC%B2%98%EA%B8%B0-%EC%9C%BC%EC%95%85/</guid>
      <pubDate>Fri, 06 Nov 2020 04:46:12 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;정보처리기사 책을 펴고 30분 봣는데 모니터 보는 것 보다 눈이 아파서 때려쳤다.&lt;/li&gt;
&lt;li&gt;막연한 이론은 공부할 엄두가 안난다…&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>정보처리기사 책을 펴고 30분 봣는데 모니터 보는 것 보다 눈이 아파서 때려쳤다.</li><li>막연한 이론은 공부할 엄두가 안난다…</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/">정보처리기사</category>
      
      
      <category domain="https://chinsun9.github.io/tags/%EC%A0%95%EB%B3%B4%EC%B2%98%EB%A6%AC%EA%B8%B0%EC%82%AC/">정보처리기사</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/06/%EC%A0%95%EC%B2%98%EA%B8%B0-%EC%9C%BC%EC%95%85/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode search exclude setting</title>
      <link>https://chinsun9.github.io/2020/11/06/vscode-search-exclude-setting/</link>
      <guid>https://chinsun9.github.io/2020/11/06/vscode-search-exclude-setting/</guid>
      <pubDate>Fri, 06 Nov 2020 04:27:26 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;검색결과에서 제외할 디렉터리, 파일 설정하기&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;세팅창-화면으로&quot;&gt;&lt;a href=&quot;#세팅창-화면으로&quot; class=&quot;headerlink&quot; title=&quot;세팅창 화면으로&quot;&gt;&lt;/a&gt;세팅창 화면으로&lt;/h2&gt;&lt;ul&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>검색결과에서 제외할 디렉터리, 파일 설정하기</li></ul><h2 id="세팅창-화면으로"><a href="#세팅창-화면으로" class="headerlink" title="세팅창 화면으로"></a>세팅창 화면으로</h2><ul><li><code>Ctrl + Shift + P</code> 를 누르고 setting을 입력한다</li><li><code>Preferences: Open Settings (UI)</code>로 들어간다</li></ul><h2 id="search-exclude-설정"><a href="#search-exclude-설정" class="headerlink" title="search: exclude 설정"></a>search: exclude 설정</h2><p><img src="/images/vscode-search-exclude-setting20201106/preview.jpg" alt=" "></p><ul><li>검색에서 제외할 패턴들을 입력한다.</li></ul><h2 id="검색-제외-적용하기"><a href="#검색-제외-적용하기" class="headerlink" title="검색 제외 적용하기"></a>검색 제외 적용하기</h2><p><img src="/images/vscode-search-exclude-setting20201106/3.jpg" alt=" "></p><ul><li>… 을 클릭해서 디테일 표시</li></ul><p><img src="/images/vscode-search-exclude-setting20201106/1.jpg" alt=" "></p><ul><li>file to exclude 영역에 아이콘 활성화</li></ul><p><img src="/images/vscode-search-exclude-setting20201106/2.jpg" alt=" "></p><ul><li>왼쪽이 비활성화일 때</li><li>오른쪽이 활성화일 때</li><li>쓸때없는 것을 제외함으로써 쾌적한 검색결과를 확인할 수 있다.</li></ul><h2 id="상위-옵션-files-exclude"><a href="#상위-옵션-files-exclude" class="headerlink" title="상위 옵션 ; files.exclude"></a>상위 옵션 ; files.exclude</h2><ul><li>vscode 탐색기에서 존재자체를 없애버리는 얘다.</li><li>여기서 제외된 디렉터리는 당연히 검색에서도 제외됨으로</li><li>search.exclude의 상위 호환이라고 볼 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/files-exclude/">files.exclude</category>
      
      <category domain="https://chinsun9.github.io/tags/search-exclude/">search.exclude</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/06/vscode-search-exclude-setting/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>gradle project 에서 runnable jar 생성하기</title>
      <link>https://chinsun9.github.io/2020/11/06/gradle-project-%EC%97%90%EC%84%9C-runnable-jar-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/06/gradle-project-%EC%97%90%EC%84%9C-runnable-jar-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 06 Nov 2020 01:42:42 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/gradle-project-%EC%97%90%EC%84%9C-runnable-jar-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B020201106/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/gradle-project-%EC%97%90%EC%84%9C-runnable-jar-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B020201106/preview.jpg" alt=" "></p><ul><li>일반 자바 프로젝트 처럼 <code>Export &gt; Runnable JAR file</code>로 jar을 만들게 되면 생성된 jar파일의 용량이 매우 작은것을 확인할 수 있다.</li><li>내가 추가한 외부 라이브러리들이 전부 빠져서 동작하지 않는다</li><li>gradle project에서는 어떤방식으로 runable jar을 만들어야 할까?</li></ul><h2 id="build-gradle-수정하기"><a href="#build-gradle-수정하기" class="headerlink" title="build.gradle 수정하기"></a>build.gradle 수정하기</h2><figure class="highlight plain"><figcaption><span>build.gradle</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">jar &#123;</span><br><span class="line">manifest &#123;</span><br><span class="line">attributes &#39;Main-Class&#39;: &#39;tmp.gradle.project.Main&#39;</span><br><span class="line">&#125;</span><br><span class="line">from &#123;</span><br><span class="line">configurations.compile.collect &#123;</span><br><span class="line">it.isDirectory() ? it : zipTree(it)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/gradle-project-%EC%97%90%EC%84%9C-runnable-jar-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B020201106/1.jpg" alt=" "></p><ul><li>jar { … } 에 해당하는 부분을 위처럼 새로이 추가해준다.</li><li><code>attributes &#39;Main-Class&#39;: &#39;tmp.gradle.project.Main&#39;</code> 여기에는 자신의 메인 클래스를 지정하면된다.</li></ul><h2 id="jar파일-생성하기"><a href="#jar파일-생성하기" class="headerlink" title="jar파일 생성하기"></a>jar파일 생성하기</h2><p><img src="/images/gradle-project-%EC%97%90%EC%84%9C-runnable-jar-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B020201106/2.jpg" alt=" "></p><figure class="highlight cmd"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &#123;gradle project rootpath&#125;</span><br><span class="line">gradle jar</span><br></pre></td></tr></table></figure><ul><li>자신의 그래들 프로젝트 경로에서 cmd를 켜주고</li><li><code>gradle jar</code> 명령을 실행한다.</li></ul><h2 id="jar파일-확인하기"><a href="#jar파일-확인하기" class="headerlink" title="jar파일 확인하기"></a>jar파일 확인하기</h2><p><img src="/images/gradle-project-%EC%97%90%EC%84%9C-runnable-jar-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B020201106/3.jpg" alt=" "></p><ul><li>build/libs 디렉터리에 가보면 jar파일이 생성되있음을 확인할 수 있다.</li></ul><figure class="highlight cmd"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> build\libs</span><br><span class="line">java -jar &#123;jar파일명&#125;</span><br></pre></td></tr></table></figure><ul><li>로 한번 잘 실행되는지 확인한다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/java/">java</category>
      
      
      <category domain="https://chinsun9.github.io/tags/java/">java</category>
      
      <category domain="https://chinsun9.github.io/tags/gradle/">gradle</category>
      
      <category domain="https://chinsun9.github.io/tags/build-gradle/">build.gradle</category>
      
      <category domain="https://chinsun9.github.io/tags/lib/">lib</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/06/gradle-project-%EC%97%90%EC%84%9C-runnable-jar-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>gradle로 외부라이브러리 설치하기</title>
      <link>https://chinsun9.github.io/2020/11/06/gradle%EB%A1%9C-%EC%99%B8%EB%B6%80%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/06/gradle%EB%A1%9C-%EC%99%B8%EB%B6%80%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 06 Nov 2020 01:22:14 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;원하는-라이브러리-명-gadle-키워드로-구글링한다&quot;&gt;&lt;a href=&quot;#원하는-라이브러리-명-gadle-키워드로-구글링한다&quot; class=&quot;headerlink&quot; title=&quot;원하는 라이브러리 명 + gadle 키워드로 구글링한다&quot;&gt;&lt;/a&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="원하는-라이브러리-명-gadle-키워드로-구글링한다"><a href="#원하는-라이브러리-명-gadle-키워드로-구글링한다" class="headerlink" title="원하는 라이브러리 명 + gadle 키워드로 구글링한다"></a>원하는 라이브러리 명 + gadle 키워드로 구글링한다</h2><p><img src="/images/gradle%EB%A1%9C-%EC%99%B8%EB%B6%80%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B020201106/1.jpg" alt=" "></p><ul><li>나는 json-simple 을 받아보겠다.</li></ul><h2 id="카피"><a href="#카피" class="headerlink" title="카피"></a>카피</h2><p><img src="/images/gradle%EB%A1%9C-%EC%99%B8%EB%B6%80%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B020201106/2.jpg" alt=" "></p><ul><li>그래들 탭인지 잘 확인하고 카피한다.</li><li>build.gradle 파일로와서 dependencies에 추가하고 저정한다.</li></ul><h2 id="Gradle-Project-Refresh"><a href="#Gradle-Project-Refresh" class="headerlink" title="Gradle Project Refresh"></a>Gradle Project Refresh</h2><p><img src="/images/gradle%EB%A1%9C-%EC%99%B8%EB%B6%80%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B020201106/3.jpg" alt=" "></p><ul><li>끝!</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/java/">java</category>
      
      
      <category domain="https://chinsun9.github.io/tags/gradle/">gradle</category>
      
      <category domain="https://chinsun9.github.io/tags/build-gradle/">build.gradle</category>
      
      <category domain="https://chinsun9.github.io/tags/lib/">lib</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/06/gradle%EB%A1%9C-%EC%99%B8%EB%B6%80%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>RDS 삭제시 주의사항</title>
      <link>https://chinsun9.github.io/2020/11/06/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/</link>
      <guid>https://chinsun9.github.io/2020/11/06/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/</guid>
      <pubDate>Fri, 06 Nov 2020 00:14:00 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD20201106/preview.jpg&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ㅠㅠ&lt;/li&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD20201106/preview.jpg" alt=" "></p><ul><li>ㅠㅠ</li></ul><h2 id="RDS-삭제-시-자동으로-스냅샷-생성"><a href="#RDS-삭제-시-자동으로-스냅샷-생성" class="headerlink" title="RDS 삭제 시 자동으로 스냅샷 생성"></a>RDS 삭제 시 자동으로 스냅샷 생성</h2><ul><li>RDS를 삭제하면 자동으로 스냅샷? 백업같은 것을 생성한다.</li></ul><p><img src="/images/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD20201106/1.jpg" alt=" "></p><ul><li>RDS를 사용중도아니고, 삭제하니까 비용이 생긴게 삭제하면서 생긴 스냅샷 보관 비용이였다.</li></ul><p><img src="/images/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD20201106/2.jpg" alt=" "></p><ul><li>RDS를 삭제한다면 RDS 삭제 후 꼭 <code>RDS &gt; 스냅샷</code> 에서 생성된 스냅샷도 같이 삭제..</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/rds/">rds</category>
      
      <category domain="https://chinsun9.github.io/tags/%EB%B9%84%EC%9A%A9/">비용</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/06/rds-%EC%82%AD%EC%A0%9C%EC%8B%9C-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>일렉트론으로 OBS input overlay 클론코딩</title>
      <link>https://chinsun9.github.io/2020/11/05/%EC%9D%BC%EB%A0%89%ED%8A%B8%EB%A1%A0%EC%9C%BC%EB%A1%9C-OBS-input-overlay-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</link>
      <guid>https://chinsun9.github.io/2020/11/05/%EC%9D%BC%EB%A0%89%ED%8A%B8%EB%A1%A0%EC%9C%BC%EB%A1%9C-OBS-input-overlay-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</guid>
      <pubDate>Thu, 05 Nov 2020 06:02:01 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/VVTzGOGayYA&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/VVTzGOGayYA" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p><img src="https://github.com/chinsun9/input-overlay-electron/raw/master/ReadmeRes/1.jpg" alt=" "></p><ul><li>오버워치 강의 영상을 보다가 영상속 키보드 마우스 뷰어? 를 가끔 보았었다.</li><li>일단 깔끔한 키보드 뷰어로 흥미가 생겼었는데</li><li>찾아보니까 OBS input overlay라는 OBS 전용 플러그인이었다.</li></ul><ul><li>일렉트론이라는 프레임워크를 사용하여</li><li>html, css, js로 데스크탑앱으로 만들어보았다.</li></ul><h2 id="신경쓴-것"><a href="#신경쓴-것" class="headerlink" title="신경쓴 것"></a>신경쓴 것</h2><h3 id="글로벌-키-훅"><a href="#글로벌-키-훅" class="headerlink" title="글로벌 키 훅?"></a>글로벌 키 훅?</h3><ul><li>내가 만든 앱 밖에서 키가 눌리고 떼지는걸 알아야한다.</li></ul><figure class="highlight js"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ioHook = <span class="built_in">require</span>(<span class="string">&#x27;iohook&#x27;</span>);</span><br><span class="line"></span><br><span class="line">ioHook.on(<span class="string">&#x27;keydown&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  mainWindow.webContents.send(<span class="string">&#x27;keydown&#x27;</span>, event.rawcode);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>iohook 패키지를 사용해서 해결하게되었다.</li><li>그런데 iohook이 최신버전의 일렉트론에서 실행이 안되어서 일렉트론 8.x버전으로 낮추어 진행하게되었다.</li></ul><h3 id="overlay-window"><a href="#overlay-window" class="headerlink" title="overlay window"></a>overlay window</h3><ul><li>오버레이화면에 마우스 클릭이 되지 않도록 했다.</li><li>오버레이화면이 프레임을 가지지 않도록 했다</li><li>오버레이화면이 모니터 크기를 구하여 우측하단에 생기도록 하였다. (여러 해상도 대응)</li></ul><h2 id="일렉트론"><a href="#일렉트론" class="headerlink" title="일렉트론"></a>일렉트론</h2><ul><li>웹을 만든느 기술로 데스크탑앱을 만들 수 있게해주는 마법이다.</li><li>나는 요즘 js만 해왔기때문에 일렉트론에 대해 찾아보았다.</li><li>일렉트론으로 만들어진 대표적인 앱으로는 비쥬얼 스튜디오 코드가 있다.</li></ul><h2 id="일렉트론-시작"><a href="#일렉트론-시작" class="headerlink" title="일렉트론 시작"></a>일렉트론 시작</h2><ul><li><a href="https://youtu.be/TnXz_nnQZrw">Create Desktop App + Installer with HTML/CSS/JS - Electron Tutorial 2020</a> 유튜브를 보며 시작했다</li><li><code>create-electron-app</code> 를 통해 express-generator 처럼 빠르게 프로젝트를 시작할 수 있다.</li><li><code>electron-builder</code> 를 통해 배포용 setup 파일을 생성할 수 있다.</li><li>소스코드 ; <a href="https://github.com/chinsun9/electron-practice">https://github.com/chinsun9/electron-practice</a></li></ul><h2 id="일렉트론-단점"><a href="#일렉트론-단점" class="headerlink" title="일렉트론 단점?"></a>일렉트론 단점?</h2><ul><li>엄청나게 간단한 앱일지라도 nodejs + Chromium 조합으로 용량이 상당히크다.</li></ul><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><ul><li><a href="https://github.com/chinsun9/input-overlay-electron">Input Overlay (Electron)</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/electron/">electron</category>
      
      <category domain="https://chinsun9.github.io/tags/iohook/">iohook</category>
      
      <category domain="https://chinsun9.github.io/tags/input-overlay/">input overlay</category>
      
      <category domain="https://chinsun9.github.io/tags/%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/">클론코딩</category>
      
      <category domain="https://chinsun9.github.io/tags/clone-coding/">clone coding</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/05/%EC%9D%BC%EB%A0%89%ED%8A%B8%EB%A1%A0%EC%9C%BC%EB%A1%9C-OBS-input-overlay-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>nodejs + socketio 로 만드는 채팅 앱, 카카오톡 클론코딩?</title>
      <link>https://chinsun9.github.io/2020/11/03/nodejs-socketio-%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EC%B1%84%ED%8C%85-%EC%95%B1/</link>
      <guid>https://chinsun9.github.io/2020/11/03/nodejs-socketio-%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EC%B1%84%ED%8C%85-%EC%95%B1/</guid>
      <pubDate>Tue, 03 Nov 2020 07:17:59 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/9_1ujY4Flb4&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/9_1ujY4Flb4" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>Web Dev Simplified의 <a href="https://youtu.be/rxzOqP9YwmM">Build a Real Time Chat App With Node.js And Socket.io</a>을 보고 따라만들기</li><li>nodejs에서 html과 socket.io로 간단하게 챗앱을 만드는 것을 따라해보았다.</li><li>Web Dev Simplified 정말 심플하게 잘알려준다.. ㄷㄷ 따라 만들면서 행복했다.</li><li>따라만들고 카카오톡같은 css를 입히고,</li><li>디테일한 기능을 추가 해줬다.</li></ul><h2 id="추가한-기능"><a href="#추가한-기능" class="headerlink" title="추가한 기능"></a>추가한 기능</h2><ul><li>고유한 프로필 사진 생성(랜덤색 + 이니셜)</li><li>현재 채팅에 참가한 유저 목록 위젯</li><li>width값이 작아지면 유저 목록 위젯 숨김</li><li>width값이 작아지면 프로필 사진 영역 숨김</li><li>같은 사람이 연달아 올릴 때 프로필 사진 생략</li><li>같은 사람이 같은 시간에 연달아 올릴 때 가장 최근 메시지에만 시간표시</li><li>메시지는 plain text로 표시</li></ul><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><ul><li><a href="https://github.com/chinsun9/chat-app-nodejs-and-socketio">chat-app-nodejs-and-socketio</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/socketio/">socketio</category>
      
      <category domain="https://chinsun9.github.io/tags/%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/">클론코딩</category>
      
      <category domain="https://chinsun9.github.io/tags/clone-coding/">clone coding</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/03/nodejs-socketio-%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%EC%B1%84%ED%8C%85-%EC%95%B1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>reqres.in으로 ajax 연습하기</title>
      <link>https://chinsun9.github.io/2020/11/03/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/03/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 03 Nov 2020 06:39:59 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;a href=&quot;https://reqres.in/&quot;&gt;&lt;img src=&quot;/images/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B020201103/preview.jpg&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<p><a href="https://reqres.in/"><img src="/images/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B020201103/preview.jpg" alt=" "></a></p><ul><li><a href="https://reqres.in/">Reqres</a> 에서 다양한 api를 제공하고있다.</li><li>cors를 허용하기 때문에 localhost에서도 요청을보내고 응답을 받을 수 있다.</li><li>ajax 연습이나, 간단한 앱을 만들 때, 서버를 만들지 않고,</li><li>reqres에서 제공하는 api를 사용할 수 있겠다.</li></ul><h2 id="get-api"><a href="#get-api" class="headerlink" title="get api"></a>get api</h2><blockquote><p><a href="https://reqres.in/api/users?page=2">https://reqres.in/api/users?page=2</a> // 유저 목록 2페이지 보기<br><a href="https://reqres.in/api/users/2">https://reqres.in/api/users/2</a> // 2번 유저 보기<br><a href="https://reqres.in/api/users/23">https://reqres.in/api/users/23</a> // 23번 유저 보기(없는 유저)</p></blockquote><blockquote><p>// products보기, products 부분은 어떤 문자열로든 치환이 가능해서 원하는 느낌의 문자열을 적어주면된다.<br><a href="https://reqres.in/api/products">https://reqres.in/api/products</a><br><a href="https://reqres.in/api/products/1">https://reqres.in/api/products/1</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/fetch/">fetch</category>
      
      <category domain="https://chinsun9.github.io/tags/ajax/">ajax</category>
      
      <category domain="https://chinsun9.github.io/tags/rest-api/">rest api</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/03/reqres-in%EC%9C%BC%EB%A1%9C-ajax-%EC%97%B0%EC%8A%B5%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>포트 포워딩 체크 웹 클론코딩</title>
      <link>https://chinsun9.github.io/2020/11/03/%ED%8F%AC%ED%8A%B8-%ED%8F%AC%EC%9B%8C%EB%94%A9-%EC%B2%B4%ED%81%AC-%EC%9B%B9-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</link>
      <guid>https://chinsun9.github.io/2020/11/03/%ED%8F%AC%ED%8A%B8-%ED%8F%AC%EC%9B%8C%EB%94%A9-%EC%B2%B4%ED%81%AC-%EC%9B%B9-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/</guid>
      <pubDate>Tue, 03 Nov 2020 06:11:51 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/4IMSpyKuhL4&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/4IMSpyKuhL4" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>서버를 열어놨는데, 외부에서 접근이 가능한지 불가능한지,</li><li>포트포워딩을 확인하고 싶으면</li><li>핸드폰을 열고 데이터를 켜서 내 서버로 접속해서 확인하는 등 번거롭게 확인했다.</li><li><a href="https://www.yougetsignal.com/tools/open-ports/">https://www.yougetsignal.com/tools/open-ports/</a> 라는 포트포워딩 체크 웹이 있는데</li><li>이거를 한번 클론 코딩해보았다.</li></ul><h2 id="영상설명"><a href="#영상설명" class="headerlink" title="영상설명"></a>영상설명</h2><ul><li><p>나는 ec2에 올려서 테스트해봤다</p></li><li><p>주소창에 보면 <code>15.165.000.000:4000</code> 으로 나오는데 내 ec2 ip인데 일부러 뒷부분을 000.000으로 바꿔놨다.</p></li><li><p>이 앱은 ec2의 4000포트에서 동작중이다.</p></li><li><p>도메인명이나 ip를 입력하고 포트입력란에 원하는 포트를 입력한다.</p></li><li><p>그리고 <code>check</code> 버튼을 누르면 해당 포트가 열려있는지 확인한다.</p></li><li><p>당연히 해당 포트를 리슨하는 서버가 동작하고 있어야한다.</p></li><li><p>우측 common ports 에서 원하는 포트를 클릭하면 해당 포트로 요청을 보낸다.</p></li><li><p><code>Scan All Common Ports</code> 버튼을 눌러 모든 common port를 스캔한다.</p></li></ul><ul><li><code>0:18</code> 중간에는 마인크래프트 서버를 체크해본다.</li><li><code>0:35</code> localhost로 적으면 내 ec2의 포트를 스캔하게된다.</li><li>localhost를 common port를 모두 스캔해보니 3000번이 열려있다는 것을 알 수 있다</li><li><code>0:48</code> 이 앱이 실행되고 있는 4000번 포트를 스캔해보니</li><li>당연하게 열려있는 모습을 확인할 수 있다</li></ul><h2 id="소스코드"><a href="#소스코드" class="headerlink" title="소스코드"></a>소스코드</h2><ul><li><a href="https://github.com/chinsun9/open-port-check-web">open-port-check-web</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/is-port-reachable/">is-port-reachable</category>
      
      <category domain="https://chinsun9.github.io/tags/%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/">클론코딩</category>
      
      <category domain="https://chinsun9.github.io/tags/clone-coding/">clone coding</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/03/%ED%8F%AC%ED%8A%B8-%ED%8F%AC%EC%9B%8C%EB%94%A9-%EC%B2%B4%ED%81%AC-%EC%9B%B9-%ED%81%B4%EB%A1%A0%EC%BD%94%EB%94%A9/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>리눅스에서 특정 포트를 사용하는 프로세스 확인하기</title>
      <link>https://chinsun9.github.io/2020/11/03/%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%ED%8A%B9%EC%A0%95-%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/03/%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%ED%8A%B9%EC%A0%95-%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 03 Nov 2020 05:44:26 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight bash&quot;&gt;&lt;figcaption&gt;&lt;span&gt;terminal&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:8080</span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> -9 $(lsof -t -i:8080)</span><br></pre></td></tr></table></figure><ul><li><code>ps -ef|grep node</code> 이런식으로 node로 실행한 웹서버를 확인했었는데,</li><li>node로 실행한 많은 앱이 있을때 어떤게 내가 생각하는 앱인지 헷갈릴때가 있다.</li><li>이럴때 특정 포트를 사용하는 프로세스를 어떻게 검색할까 하다가 알아보았다.</li></ul><h2 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h2><figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i:3000</span><br></pre></td></tr></table></figure><blockquote><p>COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME<br>node 13721 ec2-user 18u IPv6 389226 0t0 TCP *:hbci (LISTEN)</p></blockquote><ul><li>이런식으로 해당 포트를 사용하는 프로세스를 확인할 수 있다.</li></ul><figure class="highlight bash"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -t -i:3000</span><br></pre></td></tr></table></figure><blockquote><p>13721</p></blockquote><ul><li><code>-t</code>옵션을 추가하면 pid만 깔끔하게 얻을 수 있어</li><li><code>kill -9 $(lsof -t -i:3000)</code> 이런식으로 묶어서 사용할 수 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/11583562/how-to-kill-a-process-running-on-particular-port-in-linux">https://stackoverflow.com/questions/11583562/how-to-kill-a-process-running-on-particular-port-in-linux</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/ec2/">ec2</category>
      
      <category domain="https://chinsun9.github.io/tags/linux/">linux</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/03/%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%ED%8A%B9%EC%A0%95-%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>li point remove</title>
      <link>https://chinsun9.github.io/2020/11/03/li-point-remove/</link>
      <guid>https://chinsun9.github.io/2020/11/03/li-point-remove/</guid>
      <pubDate>Tue, 03 Nov 2020 04:29:00 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight css&quot;&gt;&lt;figcaption&gt;&lt;span&gt;default.css&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight css"><figcaption><span>default.css</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">list-style-type</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/li-point-remove20201103/preview.jpg" alt=" "></p><ul><li>li의 앞에 붙는 . 을 없앨 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/li-tag/">li tag</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/03/li-point-remove/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>hexo tag plugin 유튜브 재생목록 넣는법</title>
      <link>https://chinsun9.github.io/2020/11/03/hexo-tag-plugin-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%9E%AC%EC%83%9D%EB%AA%A9%EB%A1%9D-%EB%84%A3%EB%8A%94%EB%B2%95/</link>
      <guid>https://chinsun9.github.io/2020/11/03/hexo-tag-plugin-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%9E%AC%EC%83%9D%EB%AA%A9%EB%A1%9D-%EB%84%A3%EB%8A%94%EB%B2%95/</guid>
      <pubDate>Tue, 03 Nov 2020 00:36:19 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight md&quot;&gt;&lt;figcaption&gt;&lt;span&gt;hexo post.md&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight md"><figcaption><span>hexo post.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#x27;playlist&#x27; %&#125;</span><br></pre></td></tr></table></figure><ul><li>게시하고싶은 재생목록의 id값을 알아온다.</li><li>재생목록을 가져온경우에는 id 뒤에 <code>&#39;playlist&#39;</code>를 붙여주면 된다.</li><li>나는 playlist라는 카테고리를 만들고 내가 듣는 노래를 이달의 재생목록처럼 업로드할려고</li><li>hexo에서 재생목록 표현하는 방법이 없나하고 알아보았다.</li></ul><h2 id="유튜브-재생목록-id-알아내기"><a href="#유튜브-재생목록-id-알아내기" class="headerlink" title="유튜브 재생목록 id 알아내기"></a>유튜브 재생목록 id 알아내기</h2><blockquote><p><a href="https://www.youtube.com/playlist?list=PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B">https://www.youtube.com/playlist?list=PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B</a><br>id : PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B</p></blockquote><ul><li>게시하고싶은 재생목록에 들어가면 url에 list라는 파라매터가 있는데 그게 id이다.</li></ul><h2 id="hexo-tag-plugin"><a href="#hexo-tag-plugin" class="headerlink" title="hexo tag-plugin"></a>hexo tag-plugin</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube lJIrF4YjHfQ %&#125;</span><br><span class="line">&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#39;playlist&#39; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% youtube lJIrF4YjHfQ false %&#125;</span><br><span class="line">&#123;% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo &#39;playlist&#39; false %&#125;</span><br></pre></td></tr></table></figure><ul><li>기본 md에서는 표현하지 못하는 것을 표현하게 해줌</li><li>당연히 hexo 블로그에서만 사용가능</li><li>맨 마지막에 <code>false</code>를 붙여주면 Enable privacy-enhanced mode 라고 유튜브 쿠키를 사용하지 않도록 한다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://hexo.io/ko/docs/tag-plugins.html#Examples">https://hexo.io/ko/docs/tag-plugins.html#Examples</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog/">blog</category>
      
      
      <category domain="https://chinsun9.github.io/tags/hexo/">hexo</category>
      
      <category domain="https://chinsun9.github.io/tags/tag-pulgin/">tag pulgin</category>
      
      <category domain="https://chinsun9.github.io/tags/youtube/">youtube</category>
      
      <category domain="https://chinsun9.github.io/tags/youtube-playlist/">youtube playlist</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/03/hexo-tag-plugin-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EC%9E%AC%EC%83%9D%EB%AA%A9%EB%A1%9D-%EB%84%A3%EB%8A%94%EB%B2%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>playlist 202011</title>
      <link>https://chinsun9.github.io/2020/11/03/playlist-202011/</link>
      <guid>https://chinsun9.github.io/2020/11/03/playlist-202011/</guid>
      <pubDate>Tue, 03 Nov 2020 00:23:58 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B&quot; frameborder=&quot;0&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZGjg6ONGRZcZKIXMosQ6k-B" frameborder="0" loading="lazy" allowfullscreen></iframe></div><blockquote><p>~</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/playlist/">playlist</category>
      
      
      <category domain="https://chinsun9.github.io/tags/playlist/">playlist</category>
      
      <category domain="https://chinsun9.github.io/tags/music/">music</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/03/playlist-202011/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>playlist 201906</title>
      <link>https://chinsun9.github.io/2020/11/03/playlist-201906/</link>
      <guid>https://chinsun9.github.io/2020/11/03/playlist-201906/</guid>
      <pubDate>Tue, 03 Nov 2020 00:22:08 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZEWuCfVjNkkwJJmhw1DzwG0&quot; frameborder=&quot;0&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/videoseries?list=PLdEiQV70x8ZEWuCfVjNkkwJJmhw1DzwG0" frameborder="0" loading="lazy" allowfullscreen></iframe></div><blockquote><p>~</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/playlist/">playlist</category>
      
      
      <category domain="https://chinsun9.github.io/tags/playlist/">playlist</category>
      
      <category domain="https://chinsun9.github.io/tags/music/">music</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/03/playlist-201906/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>nodemon 변화감지 디렉터리 지정</title>
      <link>https://chinsun9.github.io/2020/11/02/nodemon-%EB%B3%80%ED%99%94%EA%B0%90%EC%A7%80-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC-%EC%A7%80%EC%A0%95/</link>
      <guid>https://chinsun9.github.io/2020/11/02/nodemon-%EB%B3%80%ED%99%94%EA%B0%90%EC%A7%80-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC-%EC%A7%80%EC%A0%95/</guid>
      <pubDate>Mon, 02 Nov 2020 07:33:37 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight cmd&quot;&gt;&lt;figcaption&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/p</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight cmd"><figcaption><span>cmd</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon --watch app app/server.js</span><br></pre></td></tr></table></figure><ul><li>nodemon을 사용해서 코드수정마다 서버를 자동으로 재시작하는데,</li><li>view와 관련한 코드를 수정할 때 서버가 재시작되는 것은 불필요하고, 세션이 날라가는 등 오히려 불편할 수 있다.</li><li>nodemon이 모든 프로젝트 디렉터리가 아닌 특정 디렉터리의 변화를 감시하고 재시작되는 것을 알아보자</li></ul><h2 id="명령어"><a href="#명령어" class="headerlink" title="명령어"></a>명령어</h2><figure class="highlight cmd"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon ./bin/www</span><br></pre></td></tr></table></figure><ul><li>보통 이렇게 아무것도 없이 사용하면, 거의 모든 변화마다 서버가 재시작된다.</li></ul><figure class="highlight cmd"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon --watch routes ./bin/www</span><br></pre></td></tr></table></figure><ul><li><code>--watch routes</code> watch옵션을 넣어줌으로써 해당 디렉터리에서 변화가 있으면 재시작하도록 할 수 있다.</li></ul><figure class="highlight cmd"><figcaption><span>terminal</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon --watch routes --watch libs ./bin/www</span><br></pre></td></tr></table></figure><ul><li>이런식으로 나열할 수 있다.</li><li>기본적으로 디렉터리명을 적어야하며, 하위디렉터리는 자동으로 포함된다.</li></ul><ul><li>그런데 여러개의 디렉터리를 나열을 해야하면은</li><li>반대로 무시할 디렉터리를 설정하는게 빠를 수 있다.</li></ul><h2 id="config-file로-설정"><a href="#config-file로-설정" class="headerlink" title="config file로 설정"></a>config file로 설정</h2><figure class="highlight json"><figcaption><span>nodemon.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;restartable&quot;</span>: <span class="string">&quot;rs&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;ignore&quot;</span>: [<span class="string">&quot;.git&quot;</span>, <span class="string">&quot;node_modules/**/node_modules&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;verbose&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;execMap&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;js&quot;</span>: <span class="string">&quot;node --harmony&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;events&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;restart&quot;</span>: <span class="string">&quot;osascript -e &#x27;display notification \&quot;App restarted due to:\n&#x27;$FILENAME&#x27;\&quot; with title \&quot;nodemon\&quot;&#x27;&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;watch&quot;</span>: [<span class="string">&quot;test/fixtures/&quot;</span>, <span class="string">&quot;test/samples/&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;env&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;NODE_ENV&quot;</span>: <span class="string">&quot;development&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;ext&quot;</span>: <span class="string">&quot;js,json&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>nodemon.json</code>이름으로 파일을 하나 만들고 커스텀할 수 있다.</li><li>무시할 디렉터리를 <code>ignore</code> 배열에 나열하면 된다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://github.com/remy/nodemon#monitoring-multiple-directories">https://github.com/remy/nodemon#monitoring-multiple-directories</a></li><li><a href="https://github.com/remy/nodemon/blob/master/doc/sample-nodemon.md">https://github.com/remy/nodemon/blob/master/doc/sample-nodemon.md</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/nodemon/">nodemon</category>
      
      <category domain="https://chinsun9.github.io/tags/watch/">watch</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/02/nodemon-%EB%B3%80%ED%99%94%EA%B0%90%EC%A7%80-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC-%EC%A7%80%EC%A0%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>awesome button css</title>
      <link>https://chinsun9.github.io/2020/11/02/awesome-button-css/</link>
      <guid>https://chinsun9.github.io/2020/11/02/awesome-button-css/</guid>
      <pubDate>Mon, 02 Nov 2020 06:58:52 GMT</pubDate>
      
        
        
      <description>&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/4DkMKyWJlvk&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen&gt;&lt;/iframe</description>
        
      
      
      
      <content:encoded><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/4DkMKyWJlvk" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li><a href="https://www.youtube.com/watch?v=4DkMKyWJlvk">Button With Awesome Hover Effects using Html CSS &amp; jQuery | mouseenter and mouseout events</a></li><li>위 영상을 보고 따라 만들었다.</li><li>영상에서는 제이쿼리를 사용해서 구현하지만, 나는 제이쿼리없이 구현해보았다.</li></ul><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/xGTjTFfy4N4" frameborder="0" loading="lazy" allowfullscreen></iframe></div><ul><li>참고 ; <a href="https://github.com/chinsun9/awesome-button-css">소스코드</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/02/awesome-button-css/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>github api로 특정 저장소의 커밋내역 불러오기</title>
      <link>https://chinsun9.github.io/2020/11/02/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/02/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0/</guid>
      <pubDate>Mon, 02 Nov 2020 04:11:22 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B020201102/preview.jpg" alt=" "></p><ul><li>깃허브 api로 특정 저장소 커밋내역 json으로 받아보기</li><li>나는 내 special repository인 chinsun9 저장소의 커밋내역을 받아와보았다.</li></ul><h2 id="github-api"><a href="#github-api" class="headerlink" title="github api"></a>github api</h2><blockquote><p><a href="https://api.github.com/repos/chinsun9/chinsun9/commits">https://api.github.com/repos/chinsun9/chinsun9/commits</a><br><a href="https://api.github.com/repos/%7B%EC%9C%A0%EC%A0%80%EB%AA%85%7D/%7B%EC%A0%80%EC%9E%A5%EC%86%8C%EB%AA%85%7D/commits">https://api.github.com/repos/{유저명}/{저장소명}/commits</a></p></blockquote><ul><li>js에서는 fetch api로 데이터를 가져와 원하는 로직을 수행하면 될 것 같다.</li><li>github api가 있다는 것을 알아보았고, 맛보기를 해보았다.</li><li>비공개 저장소 접근이나 다른 유용한 api가 있는지 알아보고 활용하면 좋을 것 같다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/github/">github</category>
      
      <category domain="https://chinsun9.github.io/tags/github-api/">github api</category>
      
      <category domain="https://chinsun9.github.io/tags/commits/">commits</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/02/github-api%EB%A1%9C-%ED%8A%B9%EC%A0%95-%EC%A0%80%EC%9E%A5%EC%86%8C%EC%9D%98-%EC%BB%A4%EB%B0%8B%EB%82%B4%EC%97%AD-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 워크스페이스, 프로젝트별로 설정 다르게하기</title>
      <link>https://chinsun9.github.io/2020/11/02/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2020/11/02/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 02 Nov 2020 02:56:35 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%E</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/preview.jpg" alt=" "></p><ul><li>각 프로젝트 마다 다른 vscode세팅값을 주고 싶을 때 유용하다.</li></ul><h2 id="따라하기"><a href="#따라하기" class="headerlink" title="따라하기"></a>따라하기</h2><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/1.jpg" alt=" "></p><ul><li><code>Ctrl + Shift + P</code> 단축키를누르고 setting을 입력한다</li><li><code>Preferences: Open Settings (UI)</code>를 선택한다.</li></ul><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/2.jpg" alt=" "></p><ul><li>세팅화면이 나오면 상단 User, Workspace 탭이 있는데 Workspace탭을 클릭한다.</li></ul><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/3.jpg" alt=" "></p><ul><li>나는 예시로 이 프로젝트에서는 node_modules라는 폴더를 vscode 탐색기에서 보여주고싶지않다.</li></ul><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/4.jpg" alt=" "></p><ul><li>exclude를 검색하면 Files: Exclude가 나오는데, Add Pattern 버튼을 눌러 node_modules를 추가한다.</li></ul><p><img src="/images/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B020201102/preview.jpg" alt=" "></p><ul><li>우측 탐색기에서 node_modules 파일이 더이상 보이지 않으며, <code>.vscode</code>라는 폴더와 그 아래 <code>settings.json</code>이라는 파일이 생성된 것을 확인 할 수 있다.</li><li>이렇게 프로젝트별로 다른 vscode 세팅값을 가질 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/workspace/">workspace</category>
      
      <category domain="https://chinsun9.github.io/tags/setting/">setting</category>
      
      <category domain="https://chinsun9.github.io/tags/vscode/">.vscode</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/02/vscode-%EC%9B%8C%ED%81%AC%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%B3%84%EB%A1%9C-%EC%84%A4%EC%A0%95-%EB%8B%A4%EB%A5%B4%EA%B2%8C%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 라인 이동 단축키</title>
      <link>https://chinsun9.github.io/2020/11/02/vscode-%EB%9D%BC%EC%9D%B8-%EC%9D%B4%EB%8F%99-%EB%8B%A8%EC%B6%95%ED%82%A4/</link>
      <guid>https://chinsun9.github.io/2020/11/02/vscode-%EB%9D%BC%EC%9D%B8-%EC%9D%B4%EB%8F%99-%EB%8B%A8%EC%B6%95%ED%82%A4/</guid>
      <pubDate>Mon, 02 Nov 2020 02:47:12 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;Ctrl-G&quot;&gt;&lt;a href=&quot;#Ctrl-G&quot; class=&quot;headerlink&quot; title=&quot;Ctrl + G&quot;&gt;&lt;/a&gt;Ctrl + G&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;오류 라인을 갈 때,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + G&lt;/code&gt; 로</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="Ctrl-G"><a href="#Ctrl-G" class="headerlink" title="Ctrl + G"></a>Ctrl + G</h2><ul><li>오류 라인을 갈 때,</li><li><code>Ctrl + G</code> 로 마우스 손안대고 이동할 수 있다.</li></ul><h2 id="Ctrl-rightArrow"><a href="#Ctrl-rightArrow" class="headerlink" title="Ctrl + rightArrow"></a>Ctrl + rightArrow</h2><h2 id="Ctrl-leftArrow"><a href="#Ctrl-leftArrow" class="headerlink" title="Ctrl + leftArrow"></a>Ctrl + leftArrow</h2><ul><li><code>Ctrl + left|right arrow key</code> 로 단어단위로 커서를 이동시킬 수 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/%EB%8B%A8%EC%B6%95%ED%82%A4/">단축키</category>
      
      <category domain="https://chinsun9.github.io/tags/%ED%84%B0%EB%AF%B8%EB%84%90/">터미널</category>
      
      
      <comments>https://chinsun9.github.io/2020/11/02/vscode-%EB%9D%BC%EC%9D%B8-%EC%9D%B4%EB%8F%99-%EB%8B%A8%EC%B6%95%ED%82%A4/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
