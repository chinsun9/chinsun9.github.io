<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>친성의 블로그</title>
    <link>https://chinsun9.github.io/</link>
    
    <atom:link href="https://chinsun9.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>친성의 개발 블로그</description>
    <pubDate>Mon, 22 Feb 2021 08:33:05 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>rds 시간대 변경</title>
      <link>https://chinsun9.github.io/2021/02/22/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD/</link>
      <guid>https://chinsun9.github.io/2021/02/22/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD/</guid>
      <pubDate>Mon, 22 Feb 2021 08:33:05 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD2021022</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD20210222/preview.png" alt=" "></p><ul><li>rds는 기본적으로 utc를 사용한다</li><li>한국 시간대로 바꿔보자</li></ul><h2 id="하는-법"><a href="#하는-법" class="headerlink" title="하는 법"></a>하는 법</h2><h3 id="새-파라미터-그룹-생성"><a href="#새-파라미터-그룹-생성" class="headerlink" title="새 파라미터 그룹 생성"></a>새 파라미터 그룹 생성</h3><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD20210222/1.png" alt=" "></p><ul><li>rds 생성하면서 자동 생성되는 default.~ 그룹은 수정이 불가하다</li><li>따라서 디폴트 파라미터 그룹을 사용한다면 새로이 파라미터 그룹을 생성한다</li></ul><h3 id="time-zone-파라미터-수정"><a href="#time-zone-파라미터-수정" class="headerlink" title="time zone 파라미터 수정"></a>time zone 파라미터 수정</h3><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD20210222/preview.png" alt=" "></p><ul><li>time_zone을 검색해서 시간대를 수정한다</li></ul><h3 id="rds-인스턴스-파라미터-그룹-수정"><a href="#rds-인스턴스-파라미터-그룹-수정" class="headerlink" title="rds 인스턴스 파라미터 그룹 수정"></a>rds 인스턴스 파라미터 그룹 수정</h3><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD20210222/2.png" alt=" "><br><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD20210222/3.png" alt=" "></p><ul><li>rds 인스턴스 수정에 들어가서,</li><li>위에서 생성한 파라미터 그룹으로 적용시켜준다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD20210222/4.png" alt=" "></p><h3 id="rds-재시작"><a href="#rds-재시작" class="headerlink" title="rds 재시작"></a>rds 재시작</h3><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD20210222/5.png" alt=" "></p><ul><li>rds를 재시작해야 적용된다</li></ul><h3 id="적용-확인하기"><a href="#적용-확인하기" class="headerlink" title="적용 확인하기"></a>적용 확인하기</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">curtime</span>();</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://aws.amazon.com/ko/premiumsupport/knowledge-center/rds-change-time-zone/">https://aws.amazon.com/ko/premiumsupport/knowledge-center/rds-change-time-zone/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/rds/">rds</category>
      
      <category domain="https://chinsun9.github.io/tags/utc/">utc</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/22/rds-%EC%8B%9C%EA%B0%84%EB%8C%80-%EB%B3%80%EA%B2%BD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>mysql 버전 확인</title>
      <link>https://chinsun9.github.io/2021/02/22/mysql-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8/</link>
      <guid>https://chinsun9.github.io/2021/02/22/mysql-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8/</guid>
      <pubDate>Mon, 22 Feb 2021 07:40:31 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="keyword">version</span>()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/sql/">sql</category>
      
      
      <category domain="https://chinsun9.github.io/tags/sql/">sql</category>
      
      <category domain="https://chinsun9.github.io/tags/mysql/">mysql</category>
      
      <category domain="https://chinsun9.github.io/tags/version/">version</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/22/mysql-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>mysql 현재시간 구하기</title>
      <link>https://chinsun9.github.io/2021/02/22/mysql-%ED%98%84%EC%9E%AC%EC%8B%9C%EA%B0%84-%EA%B5%AC%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/02/22/mysql-%ED%98%84%EC%9E%AC%EC%8B%9C%EA%B0%84-%EA%B5%AC%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 22 Feb 2021 07:39:01 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">-- 현재시간 구하기</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="keyword">curtime</span>()</span><br><span class="line"><span class="comment">-- 07:35:51</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 시간 값만 가져오기 ; %H ; 00~23</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="keyword">date_format</span>(<span class="keyword">curtime</span>(), <span class="string">&#x27;%H&#x27;</span>)</span><br><span class="line"><span class="comment">-- 07</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 앞에 0 패딩 없애기 1 ; 숫자를 더해서 캐스팅</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="keyword">date_format</span>(<span class="keyword">curtime</span>(), <span class="string">&#x27;%H&#x27;</span>) + <span class="number">0</span></span><br><span class="line"><span class="comment">-- 7</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 앞에 0 패딩 없애기 2 ; k로 가져오면 0~23</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    <span class="keyword">date_format</span>(<span class="keyword">curtime</span>(), <span class="string">&#x27;%k&#x27;</span>)</span><br><span class="line"><span class="comment">-- 7</span></span><br></pre></td></tr></table></figure><ul><li>현재 시간을 얻는 법</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_date-format">https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_date-format</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/sql/">sql</category>
      
      
      <category domain="https://chinsun9.github.io/tags/sql/">sql</category>
      
      <category domain="https://chinsun9.github.io/tags/mysql/">mysql</category>
      
      <category domain="https://chinsun9.github.io/tags/curtime/">curtime</category>
      
      <category domain="https://chinsun9.github.io/tags/date-format/">date_format</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/22/mysql-%ED%98%84%EC%9E%AC%EC%8B%9C%EA%B0%84-%EA%B5%AC%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git alias로 명령어 줄이기</title>
      <link>https://chinsun9.github.io/2021/02/22/git-alias%EB%A1%9C-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A4%84%EC%9D%B4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/02/22/git-alias%EB%A1%9C-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A4%84%EC%9D%B4%EA%B8%B0/</guid>
      <pubDate>Mon, 22 Feb 2021 05:41:22 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.rc &#39;rm -r --cached .&#39;</span><br></pre></td></tr></table></figure><ul><li>windows의 경우 git bash를 열어서 위 명령을 실핸한다</li></ul><ul><li>이미 원격 저장소에 올린 파일을 gitignore 할 때 쓰는 명령어인데</li><li>항상 외우지 않고 복붙 했었는데,</li><li>그것도 귀찮아서 이참에 <code>git rc</code>로 줄여버렸다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/alias/">alias</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/22/git-alias%EB%A1%9C-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A4%84%EC%9D%B4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ts react sass eslint prettier</title>
      <link>https://chinsun9.github.io/2021/02/21/ts-react-sass-eslint-prettier/</link>
      <guid>https://chinsun9.github.io/2021/02/21/ts-react-sass-eslint-prettier/</guid>
      <pubDate>Sun, 21 Feb 2021 12:09:32 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chinsun9/minecraft-nether-portal-calculator/tree/my-react-template&quot;&gt;https://github.com/chinsun9/minecra</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><a href="https://github.com/chinsun9/minecraft-nether-portal-calculator/tree/my-react-template">https://github.com/chinsun9/minecraft-nether-portal-calculator/tree/my-react-template</a></li></ul><ul><li>react 시작할 때 편하게 하려고 만듦</li></ul><ul><li>내가 사용하려고 만들어둔 템플릿</li><li>react + ts + eslint(airbnb) + prettier + sass</li><li>필요 없는 테스트 코드 삭제 및 favicon 설정해두었다</li></ul><ul><li>리액트로 만들 새로운 앱 초기 설정하는 김에 템플릿으로 만들었다</li></ul><h2 id="설정한-순서"><a href="#설정한-순서" class="headerlink" title="설정한 순서"></a>설정한 순서</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npx create-react-app . --template typescript</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; eslint, prettier</span><br><span class="line">npx install-peerdeps --dev eslint-config-airbnb</span><br><span class="line">yarn add -D @typescript-eslint&#x2F;eslint-plugin @typescript-eslint&#x2F;parser</span><br><span class="line">yarn add -D prettier eslint-config-prettier eslint-plugin-prettier</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; sass(scss)</span><br><span class="line">yarn add node-sass</span><br><span class="line">yarn add prettier-plugin-style-order</span><br></pre></td></tr></table></figure><ul><li>필요 패키지 설치</li></ul><figure class="highlight plain"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;devDependencies&quot;: &#123;</span><br><span class="line">   &quot;@typescript-eslint&#x2F;eslint-plugin&quot;: &quot;^4.15.1&quot;,</span><br><span class="line">   &quot;@typescript-eslint&#x2F;parser&quot;: &quot;^4.15.1&quot;,</span><br><span class="line">   &quot;eslint&quot;: &quot;7.2.0&quot;,  &#x2F;&#x2F; &lt;-- 삭제</span><br></pre></td></tr></table></figure><ul><li><code>react-scripts</code>에서 <code>&quot;eslint&quot;: &quot;^7.11.0&quot;</code>를 사용한다고 수동으로 eslint를 설치하지 말라고 한다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn</span><br></pre></td></tr></table></figure><ul><li><code>package.json</code> 에서 eslint를 삭제하고 <code>yarn</code>으로 종속성을 다시 설치한다</li></ul><figure class="highlight plain"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&quot;eslintConfig&quot;: &#123;</span><br><span class="line">  &quot;plugins&quot;: [</span><br><span class="line">    &quot;react&quot;,</span><br><span class="line">    &quot;@typescript-eslint&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;extends&quot;: [</span><br><span class="line">    &quot;airbnb&quot;,</span><br><span class="line">    &quot;airbnb&#x2F;hooks&quot;,</span><br><span class="line">    &quot;plugin:@typescript-eslint&#x2F;recommended&quot;,</span><br><span class="line">    &quot;prettier&quot;,</span><br><span class="line">    &quot;prettier&#x2F;react&quot;,</span><br><span class="line">    &quot;plugin:prettier&#x2F;recommended&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;env&quot;: &#123;</span><br><span class="line">    &quot;browser&quot;: true,</span><br><span class="line">    &quot;node&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;parser&quot;: &quot;@typescript-eslint&#x2F;parser&quot;,</span><br><span class="line">  &quot;parserOptions&quot;: &#123;</span><br><span class="line">    &quot;project&quot;: &quot;.&#x2F;tsconfig.json&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;rules&quot;: &#123;</span><br><span class="line">    &quot;import&#x2F;no-unresolved&quot;: &quot;off&quot;,</span><br><span class="line">    &quot;import&#x2F;extensions&quot;: &quot;off&quot;,</span><br><span class="line">    &quot;@typescript-eslint&#x2F;explicit-module-boundary-types&quot;: &quot;off&quot;,</span><br><span class="line">    &quot;no-use-before-define&quot;: &quot;off&quot;,</span><br><span class="line">    &quot;react&#x2F;jsx-filename-extension&quot;: &quot;off&quot;,</span><br><span class="line">    &quot;prettier&#x2F;prettier&quot;: [</span><br><span class="line">      &quot;error&quot;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;endOfLine&quot;: &quot;auto&quot;,</span><br><span class="line">        &quot;singleQuote&quot;: true,</span><br><span class="line">        &quot;tabWidth&quot;: 2</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li><code>package.json</code> 에서 eslint 관련 설정을 해준다</li></ul><figure class="highlight plain"><figcaption><span>.vscode/settings.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;typescript.tsdk&quot;: &quot;node_modules\\typescript\\lib&quot;,</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 프리티어 확장도구로 인한 자동 포맷팅 비활성화</span><br><span class="line">  &quot;editor.formatOnSave&quot;: false,</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 파일 저장시 자동으로 lint 및 포맷팅</span><br><span class="line">  &quot;editor.codeActionsOnSave&quot;: &#123;</span><br><span class="line">    &quot;source.fixAll.eslint&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; css파일에서 저장시 자동으로 포맷팅</span><br><span class="line">  &quot;[scss]&quot;: &#123;</span><br><span class="line">    &quot;editor.formatOnSave&quot;: true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>settings.json</code> 을 설정한다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/21/ts-react-sass-eslint-prettier/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>css box-sizing</title>
      <link>https://chinsun9.github.io/2021/02/21/css-box-sizing/</link>
      <guid>https://chinsun9.github.io/2021/02/21/css-box-sizing/</guid>
      <pubDate>Sun, 21 Feb 2021 11:14:24 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>border-box를 많이 쓸 것 같다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/CSS/box-sizing">https://developer.mozilla.org/ko/docs/Web/CSS/box-sizing</a></li><li><code>border-box</code>, <code>content-box</code> 둘 차이를 시각적으로 알려주는 예제가 있다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/box-sizing/">box-sizing</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/21/css-box-sizing/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>블로그 테마 업데이트</title>
      <link>https://chinsun9.github.io/2021/02/20/%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%85%8C%EB%A7%88-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</link>
      <guid>https://chinsun9.github.io/2021/02/20/%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%85%8C%EB%A7%88-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/</guid>
      <pubDate>Sat, 20 Feb 2021 14:30:59 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%85%8C%EB%A7%88-%EC%97%85%</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%85%8C%EB%A7%88-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B820210220/preview.png" alt=" "></p><ul><li>배경색을 흰색으로 바꾸고,</li><li>깔끔하게 바꿔보았다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/blog-history/">blog history</category>
      
      
      <category domain="https://chinsun9.github.io/tags/blog-history/">blog history</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/blog/">blog</category>
      
      <category domain="https://chinsun9.github.io/tags/styl/">styl</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/20/%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%85%8C%EB%A7%88-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Live Share</title>
      <link>https://chinsun9.github.io/2021/02/20/Live-Share/</link>
      <guid>https://chinsun9.github.io/2021/02/20/Live-Share/</guid>
      <pubDate>Sat, 20 Feb 2021 13:17:39 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/Live-Share20210220/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;같이 </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/Live-Share20210220/preview.png" alt=" "></p><ul><li>같이 하나의 내용에 대해 프로그래밍 할 때, 킹갓 확장도구이다..</li><li>웹개발 같은경우 세션의 호스트가 데브 서버를 열면,</li><li>세션의 참가한 게스트들도 자동으로 포워딩이 되서</li><li>각자 localhost에서 웹을 확인해 볼 수 있다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare">https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/Live-Share/">Live Share</category>
      
      <category domain="https://chinsun9.github.io/tags/extension/">extension</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/20/Live-Share/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>react에서 Map을 state로 사용할 때</title>
      <link>https://chinsun9.github.io/2021/02/17/react%EC%97%90%EC%84%9C-Map%EC%9D%84-state%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8C/</link>
      <guid>https://chinsun9.github.io/2021/02/17/react%EC%97%90%EC%84%9C-Map%EC%9D%84-state%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8C/</guid>
      <pubDate>Wed, 17 Feb 2021 07:10:33 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;em&gt;ES6 Map with React.useState&lt;/em&gt; ; &lt;a href=&quot;https://medium.com/@jalalazimi/es6-map-with-react-usestate-9175cd7b409b&quot;&gt;https://me</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><em>ES6 Map with React.useState</em> ; <a href="https://medium.com/@jalalazimi/es6-map-with-react-usestate-9175cd7b409b">https://medium.com/@jalalazimi/es6-map-with-react-usestate-9175cd7b409b</a> 를 참고하였다</li></ul><figure class="highlight ts"><figcaption><span>맞는 예</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [state, setState] = React.useState(<span class="keyword">new</span> <span class="built_in">Map</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> add = <span class="function">(<span class="params">key, value</span>) =&gt;</span> &#123;</span><br><span class="line">  setState(<span class="function">(<span class="params">prev</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Map</span>([...prev, [key, value]]));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> upsert = <span class="function">(<span class="params">key, value</span>) =&gt;</span> &#123;</span><br><span class="line">  setState(<span class="function">(<span class="params">prev</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Map</span>(prev).set(key, value));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">delete</span> = <span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">  setState(<span class="function">(<span class="params">prev</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> newState = <span class="keyword">new</span> <span class="built_in">Map</span>(prev);</span><br><span class="line">    newState.delete(key);</span><br><span class="line">    <span class="keyword">return</span> newState;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> clear = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  setState(<span class="function">(<span class="params">prev</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Map</span>(prev.clear()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><figcaption><span>틀린 예</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [state, setState] = React.useState(<span class="keyword">new</span> <span class="built_in">Map</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> add = <span class="function">(<span class="params">key, value</span>) =&gt;</span> &#123;</span><br><span class="line">  state.set(key, value);</span><br><span class="line">  setState(state);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://medium.com/@jalalazimi/es6-map-with-react-usestate-9175cd7b409b">https://medium.com/@jalalazimi/es6-map-with-react-usestate-9175cd7b409b</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/react/">react</category>
      
      
      <category domain="https://chinsun9.github.io/tags/react/">react</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/useState/">useState</category>
      
      <category domain="https://chinsun9.github.io/tags/Map/">Map</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/17/react%EC%97%90%EC%84%9C-Map%EC%9D%84-state%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EB%95%8C/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>scroll css</title>
      <link>https://chinsun9.github.io/2021/02/17/scroll-css/</link>
      <guid>https://chinsun9.github.io/2021/02/17/scroll-css/</guid>
      <pubDate>Wed, 17 Feb 2021 06:28:46 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/scroll-css20210217/preview.png&quot; alt=&quot; &quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이런 </description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/scroll-css20210217/preview.png" alt=" "></p><ul><li>이런 모양의 스크롤바를 만들 수 있다</li></ul><figure class="highlight scss"><figcaption><span>index.scss</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* scroll bar */</span></span><br><span class="line">&amp; &#123;</span><br><span class="line">  &amp;::-webkit-scrollbar &#123;</span><br><span class="line">    width: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;::-webkit-scrollbar-track &#123;</span><br><span class="line">    background: <span class="number">#f1f1f1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;::-webkit-scrollbar-thumb &#123;</span><br><span class="line">    background: <span class="number">#888</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;::-webkit-scrollbar-thumb:hover &#123;</span><br><span class="line">    background: <span class="number">#555</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/web/">web</category>
      
      
      <category domain="https://chinsun9.github.io/tags/web/">web</category>
      
      <category domain="https://chinsun9.github.io/tags/scss/">scss</category>
      
      <category domain="https://chinsun9.github.io/tags/css/">css</category>
      
      <category domain="https://chinsun9.github.io/tags/sass/">sass</category>
      
      <category domain="https://chinsun9.github.io/tags/scrollbar/">scrollbar</category>
      
      
      <comments>https://chinsun9.github.io/2021/02/17/scroll-css/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>js(ts) bind</title>
      <link>https://chinsun9.github.io/2021/01/19/js-bind/</link>
      <guid>https://chinsun9.github.io/2021/01/19/js-bind/</guid>
      <pubDate>Tue, 19 Jan 2021 08:48:31 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight ts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> myType &#123;</span><br><span class="line">  name: <span class="built_in">string</span>;</span><br><span class="line">  age: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> me: myType = &#123;</span><br><span class="line">  name: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">  age: <span class="number">99</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>].forEach(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="built_in">this</span>: myType, value, index</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">this</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(value, index);</span><br><span class="line">&#125;, me);</span><br><span class="line"><span class="comment">// 0 1 &#123; name: &#x27;name&#x27;, age: 11 &#125;</span></span><br><span class="line"><span class="comment">// 1 2 &#123; name: &#x27;name&#x27;, age: 11 &#125;</span></span><br><span class="line"><span class="comment">// 2 3 &#123; name: &#x27;name&#x27;, age: 11 &#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> MyClass &#123;</span><br><span class="line">  me: Person;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params">person: Person</span>) &#123;</span><br><span class="line">    <span class="built_in">this</span>.me = person;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  someFunction() &#123;</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(value, <span class="built_in">this</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  someFunctionBindThis() &#123;</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>].forEach(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="built_in">this</span>: MyClass, value</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(value, <span class="built_in">this</span>);</span><br><span class="line">    &#125;, <span class="built_in">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  someFunctionWithArrow() &#123;</span><br><span class="line">    [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>].forEach(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(value, <span class="built_in">this</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> myclass = <span class="keyword">new</span> MyClass(me);</span><br><span class="line">myclass.someFunction();</span><br><span class="line"><span class="comment">// 1 undefined</span></span><br><span class="line"><span class="comment">// 2 undefined</span></span><br><span class="line"><span class="comment">// 3 undefined</span></span><br><span class="line"></span><br><span class="line">myclass.someFunctionBindThis();</span><br><span class="line"><span class="comment">// 1 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"><span class="comment">// 2 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"><span class="comment">// 3 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"></span><br><span class="line">myclass.someFunctionWithArrow();</span><br><span class="line"><span class="comment">// 1 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"><span class="comment">// 2 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br><span class="line"><span class="comment">// 3 MyClass &#123; me: &#123; name: &#x27;name&#x27;, age: 11 &#125; &#125;</span></span><br></pre></td></tr></table></figure><ul><li>bind 함수를 배워보았다</li><li>bind를 배우면서 <code>function</code>과 <code>arrow function</code> 차이를 실감하게 되었다</li><li><code>arrow function</code>은 bind를 사용할 수 없다</li><li><code>arrow function</code>은 함수 바깥 스코프의 <code>this</code>가 자동 바인딩된다.</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/bind">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Function/bind</a></li><li><a href="https://velog.io/@modolee/javascript-function-vs-arrow-function">https://velog.io/@modolee/javascript-function-vs-arrow-function</a></li><li><a href="https://stackoverflow.com/questions/33308121/can-you-bind-this-in-an-arrow-function">https://stackoverflow.com/questions/33308121/can-you-bind-this-in-an-arrow-function</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/typescript/">typescript</category>
      
      
      <category domain="https://chinsun9.github.io/tags/js/">js</category>
      
      <category domain="https://chinsun9.github.io/tags/javascript/">javascript</category>
      
      <category domain="https://chinsun9.github.io/tags/ts/">ts</category>
      
      <category domain="https://chinsun9.github.io/tags/typescript/">typescript</category>
      
      <category domain="https://chinsun9.github.io/tags/bind/">bind</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/19/js-bind/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git 명령어 줄이기</title>
      <link>https://chinsun9.github.io/2021/01/14/git-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A4%84%EC%9D%B4%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/01/14/git-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A4%84%EC%9D%B4%EA%B8%B0/</guid>
      <pubDate>Thu, 14 Jan 2021 01:55:36 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.r &#39;! r() &#123; git reset --soft HEAD~&quot;$1&quot; ; &#125; ; r&#39;</span><br><span class="line"></span><br><span class="line">git config --global alias.r1 &#39;! r1() &#123; git reset --soft HEAD~1 ; &#125; ; r1&#39;</span><br></pre></td></tr></table></figure><ul><li><code>git reset --soft HEAD~1</code> 마지막 커밋 하나를 취소하는 명령어이다</li><li>나는 보통 여러 컴퓨터에서 작업할 때, 일단 작업 중을 내용을 임시적으로 커밋 푸쉬해서 깃허브에 업로드한다</li><li>다른 컴퓨터에서 풀로 받아오고, 이 임시적인 커밋을 취소할 때 명령어를 길게 쓰는 게 귀찮아서 <code>alias</code>로 짧게 줄여보았다</li><li><code>git r 2</code> ; 숫자만큼 커밋 취소하기</li><li><code>git r1</code> ; 마지막 커밋 취소하기</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://chinsun9.github.io/2021/01/06/git-commit-push-%EB%AA%85%EB%A0%B9-%ED%95%A9%EC%B9%98%EA%B8%B0/">https://chinsun9.github.io/2021/01/06/git-commit-push-명령-합치기/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/alias/">alias</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/14/git-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%A4%84%EC%9D%B4%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>rds master 사용자 비밀번호 변경</title>
      <link>https://chinsun9.github.io/2021/01/14/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD/</link>
      <guid>https://chinsun9.github.io/2021/01/14/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD/</guid>
      <pubDate>Thu, 14 Jan 2021 00:22:54 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;브라우저로 aws 콘솔에 접속해서 마스터 유저 비밀번호를 변경할 수 있다&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/ima</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>브라우저로 aws 콘솔에 접속해서 마스터 유저 비밀번호를 변경할 수 있다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD20210114/1.png" alt=" "></p><ul><li>Amazon RDS &gt; 데이터베이스 &gt; 데이터베이스 선택 &gt; 수정 (수정하고자 하는 RDS가 실행되어 있어야 한다)</li><li><code>새 마스터 암호</code>를 채운다</li></ul><p><img src="https://cdn.jsdelivr.net/gh/chinsun9/chinsun9.github.io@master/images/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD20210114/2.png" alt=" "></p><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://tecadmin.net/recover-reset-amazon-rds-master-user-password/">https://tecadmin.net/recover-reset-amazon-rds-master-user-password/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/rds/">rds</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/14/rds-master-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EB%B3%80%EA%B2%BD/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>setTimeout Promise</title>
      <link>https://chinsun9.github.io/2021/01/06/setTimeout-Promise/</link>
      <guid>https://chinsun9.github.io/2021/01/06/setTimeout-Promise/</guid>
      <pubDate>Wed, 06 Jan 2021 08:32:29 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> delay = <span class="function">(<span class="params">ms</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      resolve(ms);</span><br><span class="line">    &#125;, ms)</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> main = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`main start`</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = delay(<span class="number">1000</span>);</span><br><span class="line">  result.then(<span class="built_in">console</span>.log);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`main end`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> main2 = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`main start`</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> delay(<span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(result);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`main end`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">main();</span><br><span class="line"><span class="comment">// main2();</span></span><br></pre></td></tr></table></figure><ul><li>promise를 알려주는 여러 글, 영상에서 <code>setTimeout</code>으로 예제로 진행한다</li><li>setTimeout을 promise로 감싸면 딜레이를 만들 수 있다</li><li>promise가 처음에 엄청 헷갈리는데, 막힐 때마다 이 예제를 먼저 작성해보고 적용해보았던 것 같다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Using_promises">https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Using_promises</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/async/">async</category>
      
      <category domain="https://chinsun9.github.io/tags/await/">await</category>
      
      <category domain="https://chinsun9.github.io/tags/setTimeout/">setTimeout</category>
      
      <category domain="https://chinsun9.github.io/tags/promise/">promise</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/06/setTimeout-Promise/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>git commit push 명령 합치기</title>
      <link>https://chinsun9.github.io/2021/01/06/git-commit-push-%EB%AA%85%EB%A0%B9-%ED%95%A9%EC%B9%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/01/06/git-commit-push-%EB%AA%85%EB%A0%B9-%ED%95%A9%EC%B9%98%EA%B8%B0/</guid>
      <pubDate>Wed, 06 Jan 2021 06:12:40 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;git commit 이랑 git push 명령을 합치고 싶은 욕구가 생겼다&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>git commit 이랑 git push 명령을 합치고 싶은 욕구가 생겼다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global alias.acp &#39;! acp() &#123; git commit -a -m &quot;$1&quot; &amp;&amp; git push ; &#125; ; acp&#39;</span><br></pre></td></tr></table></figure><ul><li>git bash를 열고 위 명령을 수행한다</li></ul><ul><li><code>acp</code>란 이름으로 git alias를 추가한다.</li><li><code>--global</code>옵션을 줘서 어디서든 실행될 수 있도록 한다</li><li><code>--global</code>옵션을 주지 않으면 현재 깃 디렉터리에만 적용이 된다</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git acp &quot;커밋 메시지&quot;</span><br></pre></td></tr></table></figure><ul><li>이런 식으로 사용한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://stackoverflow.com/questions/19595067/git-add-commit-and-push-commands-in-one">https://stackoverflow.com/questions/19595067/git-add-commit-and-push-commands-in-one</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/git/">git</category>
      
      
      <category domain="https://chinsun9.github.io/tags/git/">git</category>
      
      <category domain="https://chinsun9.github.io/tags/push/">push</category>
      
      <category domain="https://chinsun9.github.io/tags/commit/">commit</category>
      
      <category domain="https://chinsun9.github.io/tags/alias/">alias</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/06/git-commit-push-%EB%AA%85%EB%A0%B9-%ED%95%A9%EC%B9%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>vscode 라인 정렬</title>
      <link>https://chinsun9.github.io/2021/01/06/vscode-%EB%9D%BC%EC%9D%B8-%EC%A0%95%EB%A0%AC/</link>
      <guid>https://chinsun9.github.io/2021/01/06/vscode-%EB%9D%BC%EC%9D%B8-%EC%A0%95%EB%A0%AC/</guid>
      <pubDate>Wed, 06 Jan 2021 05:51:32 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;정렬하고싶은 라인을 선택하고&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F1&lt;/code&gt; &amp;gt; &lt;code&gt;sort Lines&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고&quot;&gt;&lt;a href=&quot;#참고&quot; class=&quot;headerlink&quot; title</description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li>정렬하고싶은 라인을 선택하고</li><li><code>F1</code> &gt; <code>sort Lines</code></li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://medium.com/@adammlr/sort-css-properties-in-vscode-e59033c2c675">https://medium.com/@adammlr/sort-css-properties-in-vscode-e59033c2c675</a></li><li>css 정렬하는 방법을 알아보다가 알게되었다. 이 사람은 css를 알파벳순으로 정렬하는 방법을 알려준다</li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/vscode/">vscode</category>
      
      
      <category domain="https://chinsun9.github.io/tags/vscode/">vscode</category>
      
      <category domain="https://chinsun9.github.io/tags/sort-lines/">sort lines</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/06/vscode-%EB%9D%BC%EC%9D%B8-%EC%A0%95%EB%A0%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>두 값 사이의 난수 생성하기</title>
      <link>https://chinsun9.github.io/2021/01/05/%EB%91%90-%EA%B0%92-%EC%82%AC%EC%9D%B4%EC%9D%98-%EB%82%9C%EC%88%98-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/01/05/%EB%91%90-%EA%B0%92-%EC%82%AC%EC%9D%B4%EC%9D%98-%EB%82%9C%EC%88%98-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 05 Jan 2021 06:57:41 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandomArbitrary</span>(<span class="params">min, max</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.random() * (max - min) + min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>mdn에 여러가지 조건의 난수를 생성하는 좋은 예제가 있다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math/random#%EB%91%90_%EA%B0%92_%EC%82%AC%EC%9D%B4%EC%9D%98_%EB%82%9C%EC%88%98_%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Math/random#%EB%91%90_%EA%B0%92_%EC%82%AC%EC%9D%B4%EC%9D%98_%EB%82%9C%EC%88%98_%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/Math/">Math</category>
      
      <category domain="https://chinsun9.github.io/tags/random/">random</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/%EB%91%90-%EA%B0%92-%EC%82%AC%EC%9D%B4%EC%9D%98-%EB%82%9C%EC%88%98-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>aws sam, lambda 정리</title>
      <link>https://chinsun9.github.io/2021/01/05/aws-sam-%EC%A0%95%EB%A6%AC/</link>
      <guid>https://chinsun9.github.io/2021/01/05/aws-sam-%EC%A0%95%EB%A6%AC/</guid>
      <pubDate>Tue, 05 Jan 2021 06:34:30 GMT</pubDate>
      
        
        
      <description>&lt;ul&gt;
&lt;li&gt;&lt;em&gt;nodejs 람다 기준&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;sam&quot;&gt;&lt;a href=&quot;#sam&quot; class=&quot;headerlink&quot; title=&quot;sam&quot;&gt;&lt;/a&gt;sam&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;sam cli로 로컬에서 람다를 </description>
        
      
      
      
      <content:encoded><![CDATA[<ul><li><em>nodejs 람다 기준</em></li></ul><h2 id="sam"><a href="#sam" class="headerlink" title="sam"></a>sam</h2><ul><li>sam cli로 로컬에서 람다를 작성하고 배포할 수 있다</li></ul><h2 id="실행환경"><a href="#실행환경" class="headerlink" title="실행환경"></a>실행환경</h2><ul><li>/var/task 에서 람다 함수가 실행된다</li><li>/opt/nodejs 에 레이어가 적재된다</li><li>/tmp 디렉터리는 유일한 쓰기 디렉터리이다</li><li>/tmp 디렉터리의 용량은 512MB이다</li><li>/tmp 디렉터리는 일회성이다</li></ul><h2 id="로컬에서-테스트"><a href="#로컬에서-테스트" class="headerlink" title="로컬에서 테스트"></a>로컬에서 테스트</h2><ul><li><code>sam local start-api</code>로 로컬에서 람다를 테스트해볼 수 있다</li><li><code>--skip-pull-image</code> 옵션을 주어 실행 시간을 단축시킬 수 있다</li><li>로컬에서 실행할 때 도커가 필요하다</li><li>참고로 람다는 아마존 리눅스 2 환경에서 돌아간다</li></ul><h2 id="빌드"><a href="#빌드" class="headerlink" title="빌드"></a>빌드</h2><ul><li><code>sam build</code> 명령으로 설치되는 패키지에는 devDependencies가 포함되지 않는다</li></ul><h2 id="레이어"><a href="#레이어" class="headerlink" title="레이어"></a>레이어</h2><ul><li>레이어는 종속성을 따로 관리할 수 있게 해 준다</li><li>노드 모듈은 웬만하면 레이어로 빼는 게 맞는 것 같다</li><li>람다 노드 모듈 폴더를 포함하여 배포되면 용량이 커져서 브라우저에서 코드 조회를 할 수 없다</li><li>공통적으로 자주 사용되는 패키지들을 묶어서 재사용할 수 있다</li><li>레이어로 사용할</li><li>devDependencies가 포함되건 말건 상관없다면 심볼릭 링크를 사용하는 것도 나쁘지 않은 것 같다 <a href="https://chinsun9.github.io/2020/09/17/%EC%8B%AC%EB%B3%BC%EB%A6%AD-%EB%A7%81%ED%81%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0/#aws-lambda-layer">참고</a></li></ul><h2 id="레이어-내가-만든-모듈"><a href="#레이어-내가-만든-모듈" class="headerlink" title="레이어 (내가 만든 모듈)"></a>레이어 (내가 만든 모듈)</h2><ul><li>내가 제작한 모듈도 레이어로 뺄 수 있다</li><li>sam project 루트 디렉터리를 기준으로 /opt/nodejs 에 내 모듈을 작성한다 (ex. /opt/nodejs/myModule.js)</li><li>sam project 루트 디렉터리에서 <code>jsconfig.json</code>를 다음과 같이 한다 (없으면 생성)</li></ul><figure class="highlight json"><figcaption><span>jsconfig.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;paths&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;*&quot;</span>: [<span class="string">&quot;./opt/nodejs/*&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;exclude&quot;</span>: [<span class="string">&quot;node_modules&quot;</span>, <span class="string">&quot;build&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>이를 임포트 해서 사용하는 파일에서는</li></ul><figure class="highlight js"><figcaption><span>app.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myModule = <span class="built_in">require</span>(<span class="string">&quot;myModule&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>이런 식으로 불러와 사용할 수 있다.</li><li>자동 완성도 잘 작동한다</li></ul><h2 id="레이어-yaml-설정"><a href="#레이어-yaml-설정" class="headerlink" title="레이어 yaml 설정"></a>레이어 yaml 설정</h2><figure class="highlight yaml"><figcaption><span>tmplate.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Resources:</span></span><br><span class="line">  <span class="attr">HelloWorldFunction:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::Function</span> <span class="comment"># More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">CodeUri:</span> <span class="string">functions/hello-world/</span></span><br><span class="line">      <span class="attr">Handler:</span> <span class="string">app.lambdaHandler</span></span><br><span class="line">      <span class="attr">Runtime:</span> <span class="string">nodejs12.x</span></span><br><span class="line">      <span class="attr">Layers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="type">!Ref</span> <span class="string">MyModuleLayer</span></span><br><span class="line">        <span class="bullet">-</span> <span class="type">!Ref</span> <span class="string">HelloWorldFunctionLayer</span></span><br><span class="line">      <span class="attr">Events:</span></span><br><span class="line">        <span class="attr">HelloWorld:</span></span><br><span class="line">          <span class="attr">Type:</span> <span class="string">Api</span> <span class="comment"># More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api</span></span><br><span class="line">          <span class="attr">Properties:</span></span><br><span class="line">            <span class="attr">Path:</span> <span class="string">/hello</span></span><br><span class="line">            <span class="attr">Method:</span> <span class="string">get</span></span><br><span class="line">  <span class="comment"># ...</span></span><br><span class="line">  <span class="attr">HelloWorldFunctionLayer:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::LayerVersion</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">LayerName:</span> <span class="string">HelloWorldFunctionLayer</span></span><br><span class="line">      <span class="attr">Description:</span> <span class="string">Dependencies</span> <span class="string">for</span> <span class="string">SAM</span></span><br><span class="line">      <span class="attr">ContentUri:</span> <span class="string">layer/HelloWorldFunction</span></span><br><span class="line">      <span class="attr">CompatibleRuntimes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">nodejs12.x</span></span><br><span class="line">      <span class="attr">LicenseInfo:</span> <span class="string">&quot;MIT&quot;</span></span><br><span class="line">      <span class="attr">RetentionPolicy:</span> <span class="string">Retain</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">MyModuleLayer:</span></span><br><span class="line">    <span class="attr">Type:</span> <span class="string">AWS::Serverless::LayerVersion</span></span><br><span class="line">    <span class="attr">Properties:</span></span><br><span class="line">      <span class="attr">LayerName:</span> <span class="string">my-layer</span></span><br><span class="line">      <span class="attr">Description:</span> <span class="string">Dependencies</span> <span class="string">for</span> <span class="string">SAM</span></span><br><span class="line">      <span class="attr">ContentUri:</span> <span class="string">opt</span></span><br><span class="line">      <span class="attr">CompatibleRuntimes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">nodejs12.x</span></span><br><span class="line">      <span class="attr">LicenseInfo:</span> <span class="string">&quot;MIT&quot;</span></span><br><span class="line">      <span class="attr">RetentionPolicy:</span> <span class="string">Retain</span></span><br></pre></td></tr></table></figure><ul><li>이런 식으로 리소스에 레이어를 작성한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/best-practices.html">https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/best-practices.html</a></li><li><a href="https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/gettingstarted-limits.html">https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/gettingstarted-limits.html</a></li><li><a href="https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-tools.html">https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-tools.html</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/aws/">aws</category>
      
      
      <category domain="https://chinsun9.github.io/tags/aws/">aws</category>
      
      <category domain="https://chinsun9.github.io/tags/lambda/">lambda</category>
      
      <category domain="https://chinsun9.github.io/tags/sam/">sam</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/aws-sam-%EC%A0%95%EB%A6%AC/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>process.exit(1)</title>
      <link>https://chinsun9.github.io/2021/01/05/process-exit-1/</link>
      <guid>https://chinsun9.github.io/2021/01/05/process-exit-1/</guid>
      <pubDate>Tue, 05 Jan 2021 01:54:06 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">process.exit(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><ul><li>이 줄을 만나면 즉시 종료된다</li><li>나는 보통 코드를 주먹구구로 작성하다가 아래 라인을 실행시키고 싶지 않을 때 사용한다..</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://nodejs.dev/learn/how-to-exit-from-a-nodejs-program">https://nodejs.dev/learn/how-to-exit-from-a-nodejs-program</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/process/">process</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/process-exit-1/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Moment.js utc 사용하기</title>
      <link>https://chinsun9.github.io/2021/01/05/moment-js-utc-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <guid>https://chinsun9.github.io/2021/01/05/moment-js-utc-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Tue, 05 Jan 2021 01:36:20 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> date1 = moment().utc().format(<span class="string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(date1);</span><br></pre></td></tr></table></figure><ul><li><code>utc()</code> 메소드를 이용한다.</li></ul><h2 id="활용한-곳"><a href="#활용한-곳" class="headerlink" title="활용한 곳"></a>활용한 곳</h2><ul><li>rds는 기본적으로 utc를 사용한다</li><li>그래서 현재 지역 시간으로 포맷팅 된 값을 그대로 db에 넣으면 안 된다</li><li>rds의 시간대를 변경하거나, insert, update 할 때 잘 가공해서 쿼리를 해야 한다</li></ul><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="https://momentjs.com/docs/#/parsing/utc/">https://momentjs.com/docs/#/parsing/utc/</a></li></ul><ul><li><a href="https://aws.amazon.com/ko/premiumsupport/knowledge-center/rds-change-time-zone/">https://aws.amazon.com/ko/premiumsupport/knowledge-center/rds-change-time-zone/</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://chinsun9.github.io/categories/nodejs/">nodejs</category>
      
      
      <category domain="https://chinsun9.github.io/tags/nodejs/">nodejs</category>
      
      <category domain="https://chinsun9.github.io/tags/momentjs/">momentjs</category>
      
      
      <comments>https://chinsun9.github.io/2021/01/05/moment-js-utc-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
